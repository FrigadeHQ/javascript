{"version":3,"sources":["../src/FrigadeProvider/index.tsx","../src/components/DataFetcher/index.tsx","../src/api/flows.ts","../src/api/common.ts","../src/api/version.ts","../src/api/flow-responses.ts","../src/api/user-flow-states.ts","../src/api/flow-opens.ts","../src/shared/completion-util.ts","../src/api/users.tsx","../src/FrigadeForm/index.tsx","../src/components/Modal/index.tsx","../src/components/Modal/ModalBackground.tsx","../src/shared/appearance.ts","../src/components/Icons/Close.tsx","../src/components/branding/PoweredByFrigade.tsx","../src/components/Icons/FrigadeLogo.tsx","../src/components/branding/styled.ts","../src/components/Tooltips/styled.ts","../src/components/CornerModal/index.tsx","../src/hooks/useTheme.ts","../src/components/Forms/MultiInputStepType/MultiInputStepType.tsx","../src/components/Forms/MultiInputStepType/form-components/TextField/index.tsx","../src/components/Forms/MultiInputStepType/form-components/shared/styled.tsx","../src/components/Forms/MultiInputStepType/form-components/shared/Label.tsx","../src/types/index.tsx","../src/components/Forms/MultiInputStepType/form-components/shared/SubLabel.tsx","../src/components/Forms/MultiInputStepType/form-components/shared/validation.ts","../src/components/Forms/MultiInputStepType/form-components/MultipleChoice/index.tsx","../src/components/Forms/MultiInputStepType/form-components/MultipleChoiceList/index.tsx","../src/components/CheckBox/index.tsx","../src/components/Progress/ProgressRing/ProgressRing.tsx","../src/components/TitleSubtitle/TitleSubtitle.tsx","../src/shared/sanitizer.ts","../src/components/Icons/Warning.tsx","../src/FrigadeForm/styled.ts","../src/FrigadeForm/FormFooter.tsx","../src/components/Button/index.tsx","../src/FrigadeForm/FormPagination.tsx","../src/components/Forms/LinkCollectionStepType/index.tsx","../src/hooks/useCTAClickSideEffects.ts","../src/components/Forms/CallToActionStepType/CallToActionStepType.tsx","../src/components/Icons/Play.tsx","../src/components/Video/VideoCard.tsx","../src/components/Forms/SelectListStepType/SelectListStepType.tsx","../src/components/Forms/SelectListStepType/styled.ts","../src/FrigadeForm/FormContent.tsx","../src/components/RenderInlineStyles.tsx","../src/api/organizations.tsx","../src/shared/deepmerge.ts","../src/shared/appearanceToOverrides.ts","../src/components/Button/Button.styles.ts","../src/components/Box/index.tsx","../src/components/Text/Text.styles.ts","../src/shared/theme.ts","../src/components/HeroChecklist/index.tsx","../src/FrigadeChecklist/index.tsx","../src/components/Checklists/HeroChecklist/HeroChecklist.tsx","../src/components/Checklists/HeroChecklist/StepChecklistItem.tsx","../src/components/CheckBoxRow/index.tsx","../src/components/Checklists/HeroChecklist/styled.ts","../src/components/Checklists/Checklist/ProgressBar.tsx","../src/components/checklist-step-content/HeroStepContent.tsx","../src/components/checklist-step-content/shared/TitleSubtitleWithCTA.tsx","../src/components/checklist-step-content/shared/TitleSubtitle.tsx","../src/components/checklist-step-content/shared/CTA.tsx","../src/components/Video/VideoPlayer.tsx","../src/components/checklist-step-content/VideoCarousel.tsx","../src/components/checklist-step-content/CodeSnippetContent.tsx","../src/components/Checklists/ChecklistWithGuide/ChecklistWithGuide.tsx","../src/components/Icons/Chevron.tsx","../src/components/Checklists/ChecklistWithGuide/styled.ts","../src/components/styled.ts","../src/components/Guides/Guide.tsx","../src/components/Guides/styled.ts","../src/hooks/useMediaQuery.ts","../src/components/Checklists/CondensedChecklist/CondensedChecklist.tsx","../src/components/Checklists/CondensedChecklist/CollapsibleStep/index.tsx","../src/components/Checklists/CondensedChecklist/CollapsibleStep/styled.ts","../src/components/Checklists/CondensedChecklist/styled.ts","../src/components/Checklists/CarouselChecklist/index.tsx","../src/components/Checklists/CarouselChecklist/CarouselCard.tsx","../src/components/Checklists/CarouselChecklist/styled.ts","../src/FrigadeProgressBadge/index.tsx","../src/components/Checklists/MiniProgressBadge/index.tsx","../src/components/Checklists/MiniProgressBadge/styled.ts","../src/components/Checklists/FullWidthProgressBadge/index.tsx","../src/components/Checklists/FullWidthProgressBadge/styled.ts","../src/FrigadeGuide/FrigadeGuide.tsx","../src/FrigadeTour/index.tsx","../src/components/Tooltips/Tooltips.tsx","../src/components/Tooltips/position.ts","../src/FrigadeSupportWidget/index.tsx","../src/FrigadeSupportWidget/styled.ts","../src/components/Icons/Question.tsx","../src/components/Icons/QuestionCircle.tsx","../src/FrigadeEmbeddedTip/index.tsx","../src/FrigadeEmbeddedTip/styled.ts","../src/FrigadeBanner/index.tsx","../src/FrigadeBanner/styled.ts","../src/components/Icons/Info.tsx","../src/FrigadeNPSSurvey/index.tsx","../src/FrigadeNPSSurvey/styled.ts","../src/components/Button/TEMP_index.tsx","../src/components/Text/index.tsx","../src/index.ts"],"sourcesContent":["import React, { createContext, FC, useEffect, useState } from 'react'\nimport { ThemeProvider } from 'styled-components'\nimport { DataFetcher, realUserIdField } from '../components/DataFetcher'\nimport { Flow } from '../api/flows'\nimport { FlowResponse } from '../api/flow-responses'\nimport { Appearance, DefaultAppearance } from '../types'\nimport { ErrorBoundary } from 'react-error-boundary'\nimport { deepmerge } from '../shared/deepmerge'\nimport { appearanceToOverrides } from '../shared/appearanceToOverrides'\n\nimport { tokens } from '../shared/theme'\n\nexport interface IFrigadeContext {\n  publicApiKey: string\n  userId?: string | null\n  setUserId: React.Dispatch<React.SetStateAction<string | null>>\n  flows: Flow[]\n  setFlows: React.Dispatch<React.SetStateAction<Flow[]>>\n  failedFlowResponses: FlowResponse[]\n  setFailedFlowResponses: React.Dispatch<React.SetStateAction<FlowResponse[]>>\n  flowResponses?: FlowResponse[]\n  setFlowResponses?: React.Dispatch<React.SetStateAction<FlowResponse[]>>\n  children?: React.ReactNode\n  userProperties?: { [key: string]: string | boolean | number | null }\n  setUserProperties?: React.Dispatch<\n    React.SetStateAction<{ [key: string]: string | boolean | number | null }>\n  >\n  openFlowStates: { [key: string]: boolean }\n  setOpenFlowStates: React.Dispatch<React.SetStateAction<{ [key: string]: boolean }>>\n  completedFlowsToKeepOpenDuringSession: string[]\n  setCompletedFlowsToKeepOpenDuringSession: React.Dispatch<React.SetStateAction<string[]>>\n  customVariables?: { [key: string]: string | boolean | number | null }\n  setCustomVariables?: React.Dispatch<\n    React.SetStateAction<{ [key: string]: string | boolean | number | null }>\n  >\n  isNewGuestUser: boolean\n  setIsNewGuestUser: React.Dispatch<React.SetStateAction<boolean>>\n  hasActiveFullPageFlow: boolean\n  setHasActiveFullPageFlow: React.Dispatch<React.SetStateAction<boolean>>\n  organizationId?: string\n  setOrganizationId?: React.Dispatch<React.SetStateAction<string>>\n  navigate: (url: string, target: string) => void\n  defaultAppearance: Appearance\n  shouldGracefullyDegrade: boolean\n  setShouldGracefullyDegrade: React.Dispatch<React.SetStateAction<boolean>>\n  apiUrl: string\n  readonly: boolean\n}\n\nexport interface FrigadeProviderProps {\n  publicApiKey: string\n  /**\n   * The user id of the user that is currently logged in.\n   */\n  userId?: string\n  /**\n   * The organization id of the organization that is currently logged in.\n   */\n  organizationId?: string\n  config?: FrigadeConfig\n  children?: React.ReactNode\n}\n\nconst DEFAULT_API_URL = 'https://api.frigade.com'\nexport const FrigadeContext = createContext<IFrigadeContext>({\n  publicApiKey: '',\n  setUserId: () => {},\n  flows: [],\n  setFlows: () => {},\n  failedFlowResponses: [],\n  setFailedFlowResponses: () => {},\n  flowResponses: [],\n  setFlowResponses: () => {},\n  userProperties: {},\n  setUserProperties: () => {},\n  openFlowStates: {},\n  setOpenFlowStates: () => {},\n  completedFlowsToKeepOpenDuringSession: [],\n  setCompletedFlowsToKeepOpenDuringSession: () => {},\n  customVariables: {},\n  setCustomVariables: () => {},\n  isNewGuestUser: false,\n  setIsNewGuestUser: () => {},\n  hasActiveFullPageFlow: false,\n  setHasActiveFullPageFlow: () => {},\n  organizationId: '',\n  setOrganizationId: () => {},\n  navigate: () => {},\n  defaultAppearance: DefaultAppearance,\n  shouldGracefullyDegrade: false,\n  setShouldGracefullyDegrade: () => {},\n  apiUrl: DEFAULT_API_URL,\n  readonly: false,\n})\n\ninterface FrigadeConfig {\n  /**\n   * Override the default router used by Frigade.\n   * This is useful if you are using a router and want to avoid doing a full page refresh on navigation.\n   * @param url The url to navigate to.\n   */\n  navigate?: (url: string, target: string) => void\n  /**\n   * Default Appearance for all flows.\n   */\n  defaultAppearance?: Appearance\n  /**\n   * API url to use for all requests. Defaults to https://api.frigade.com\n   */\n  apiUrl?: string\n  /**\n   * When true, Frigade will be in read-only mode and state will not be updated. Default false.\n   * Used mostly for demo purposes.\n   */\n  readonly?: boolean\n\n  theme?: Record<string, any>\n}\n\nfunction clearLocalStorage() {\n  Object.keys(localStorage).forEach((key) => {\n    if (key.startsWith('frigade-')) {\n      localStorage.removeItem(key)\n    }\n  })\n}\n\nexport const FrigadeProvider: FC<FrigadeProviderProps> = ({\n  publicApiKey,\n  userId,\n  organizationId,\n  config,\n  children,\n}) => {\n  const [userIdValue, setUserIdValue] = useState<string | null>(!userId ? null : userId)\n  const [organizationIdValue, setOrganizationIdValue] = useState<string | null>(\n    !organizationId ? null : organizationId\n  )\n  const [flows, setFlows] = useState<Flow[]>([])\n  const [failedFlowResponses, setFailedFlowResponses] = useState<FlowResponse[]>([])\n  const [flowResponses, setFlowResponses] = useState<FlowResponse[]>([])\n  const [userProperties, setUserProperties] = useState<{\n    [key: string]: string | boolean | number | null\n  }>({})\n  const [openFlowStates, setOpenFlowStates] = useState<{ [key: string]: boolean }>({})\n  const [completedFlowsToKeepOpenDuringSession, setCompletedFlowsToKeepOpenDuringSession] =\n    useState<string[]>([])\n  const [customVariables, setCustomVariables] = useState<{\n    [key: string]: string | boolean | number | null\n  }>({})\n  const [isNewGuestUser, setIsNewGuestUser] = useState(false)\n  const [hasActiveFullPageFlow, setHasActiveFullPageFlow] = useState(false)\n  const [shouldGracefullyDegrade, setShouldGracefullyDegrade] = useState(\n    !isValidApiKey(publicApiKey)\n  )\n  const internalNavigate = (url: string, target: string) => {\n    if (target === '_blank') {\n      window.open(url, '_blank')\n      return\n    }\n    setTimeout(() => {\n      window.location.href = url\n    }, 50)\n  }\n\n  const appearance: Appearance = {\n    theme: { ...DefaultAppearance.theme, ...(config?.defaultAppearance?.theme ?? {}) },\n    styleOverrides: {\n      ...DefaultAppearance.styleOverrides,\n      ...(config?.defaultAppearance?.styleOverrides ?? {}),\n    },\n  }\n\n  function isValidApiKey(apiKey: string): boolean {\n    return Boolean(apiKey && apiKey.length > 10 && apiKey.substring(0, 10) === 'api_public')\n  }\n\n  useEffect(() => {\n    if (userId) {\n      setUserIdValue(userId)\n    }\n  }, [userId])\n\n  useEffect(() => {\n    if (userIdValue) {\n      if (window && window.localStorage && window.localStorage.getItem(realUserIdField)) {\n        if (window.localStorage.getItem(realUserIdField) !== userIdValue) {\n          clearLocalStorage()\n        }\n      }\n    }\n  }, [userIdValue])\n\n  useEffect(() => {\n    if (organizationId) {\n      setOrganizationIdValue(organizationId)\n    }\n  }, [organizationId])\n\n  useEffect(() => {\n    if (!isValidApiKey(publicApiKey)) {\n      console.error(\n        'Frigade SDK failed to initialize. API key provided is either missing or valid.'\n      )\n      setShouldGracefullyDegrade(true)\n      return\n    } else {\n      setShouldGracefullyDegrade(false)\n    }\n  }, [publicApiKey, setShouldGracefullyDegrade])\n\n  const contextParams = {\n    publicApiKey,\n    userId: userIdValue,\n    setUserId: setUserIdValue,\n    setFlows,\n    flows: flows,\n    failedFlowResponses,\n    setFailedFlowResponses,\n    flowResponses,\n    setFlowResponses,\n    userProperties,\n    setUserProperties,\n    openFlowStates,\n    setOpenFlowStates,\n    completedFlowsToKeepOpenDuringSession,\n    setCompletedFlowsToKeepOpenDuringSession,\n    customVariables,\n    setCustomVariables,\n    isNewGuestUser,\n    setIsNewGuestUser,\n    hasActiveFullPageFlow,\n    setHasActiveFullPageFlow,\n    organizationId: organizationIdValue,\n    setOrganizationId: setOrganizationIdValue,\n    navigate: config && config.navigate ? config.navigate : internalNavigate,\n    defaultAppearance: appearance,\n    shouldGracefullyDegrade,\n    setShouldGracefullyDegrade,\n    apiUrl: config && config.apiUrl ? config.apiUrl : DEFAULT_API_URL,\n    readonly: config && config.readonly ? config.readonly : false,\n  } as IFrigadeContext\n\n  if (shouldGracefullyDegrade) {\n    return <FrigadeContext.Provider value={contextParams}>{children}</FrigadeContext.Provider>\n  }\n\n  // Forward-port appearance.theme into theme tokens\n  const { overrides } = appearanceToOverrides(appearance)\n\n  return (\n    <ErrorBoundary fallback={<>{children}</>}>\n      <FrigadeContext.Provider value={contextParams}>\n        {/* TEMP: Merge old appearance.theme vars in for backwards compatibility */}\n        <ThemeProvider\n          theme={deepmerge(appearance.theme, tokens, overrides ?? {}, config?.theme ?? {})}\n        >\n          {children}\n          <DataFetcher />\n        </ThemeProvider>\n      </FrigadeContext.Provider>\n    </ErrorBoundary>\n  )\n}\n","import React, { FC, useContext, useEffect, useState } from 'react'\nimport { Flow, FlowType, TriggerType, useFlows } from '../../api/flows'\nimport { FrigadeContext } from '../../FrigadeProvider'\nimport { GUEST_PREFIX, useUser } from '../../api/users'\nimport { v4 as uuidv4 } from 'uuid'\nimport { useFlowResponses } from '../../api/flow-responses'\nimport { useUserFlowStates } from '../../api/user-flow-states'\nimport FrigadeForm from '../../FrigadeForm'\nimport { NOT_STARTED_FLOW } from '../../api/common'\nimport { useOrganization } from '../../api/organizations'\n\ninterface DataFetcherProps {}\n\nexport const guestUserIdField = 'frigade-xFrigade_guestUserId'\nexport const realUserIdField = 'frigade-xFrigade_userId'\n\nexport const DataFetcher: FC<DataFetcherProps> = ({}) => {\n  const { setFlowResponses } = useFlowResponses()\n  const { userFlowStatesData, isLoadingUserFlowStateData, mutateUserFlowState } =\n    useUserFlowStates()\n  const { userId, setUserId } = useUser()\n  const [lastUserId, setLastUserId] = useState<string | null>(null)\n  const { getFlowStatus } = useFlows()\n  const { flows, userProperties, setIsNewGuestUser, flowResponses } = useContext(FrigadeContext)\n  const [automaticFlowIdsToTrigger, setAutomaticFlowIdsToTrigger] = useState<Flow[]>([])\n  // Add list of flows already triggered\n  const [triggeredFlows, setTriggeredFlows] = useState<string[]>([])\n  const { organizationId } = useOrganization()\n\n  useEffect(() => {\n    if (!isLoadingUserFlowStateData) {\n      if (userFlowStatesData) {\n        for (let i = 0; i < userFlowStatesData.length; i++) {\n          const flowState = userFlowStatesData[i]\n          const flow = flows.find((flow) => flow.slug === flowState?.flowId)\n          if (\n            flow &&\n            flowState &&\n            flowState.shouldTrigger === true &&\n            flow.type == FlowType.FORM &&\n            flow.triggerType === TriggerType.AUTOMATIC &&\n            !triggeredFlows.includes(flow.slug)\n          ) {\n            // If the flow should be triggered, trigger it\n            // Give a small grace period before triggering the flow\n            setTimeout(() => {\n              triggerFlow(flowState.flowId)\n            }, 500)\n\n            // We only want to trigger one at a time\n            break\n          }\n        }\n      }\n    }\n  }, [isLoadingUserFlowStateData, userFlowStatesData])\n\n  useEffect(() => {\n    if (flowResponses.length > 0) {\n      mutateUserFlowState()\n    }\n  }, [flowResponses])\n\n  function triggerFlow(flowId: string) {\n    const flow = flows.find((flow) => flow.slug === flowId)\n    if (flow && flow.triggerType === TriggerType.AUTOMATIC && !triggeredFlows.includes(flow.slug)) {\n      // We only trigger one at a time\n      setTriggeredFlows([...triggeredFlows, flow.slug])\n      setAutomaticFlowIdsToTrigger([flow])\n    }\n  }\n\n  function generateGuestUserId() {\n    // If userId is null, generate a guest user id using uuid\n    if (!userId) {\n      // Check if a real user id exists in local storage\n      const realUserId = localStorage.getItem(realUserIdField)\n      if (realUserId) {\n        setUserId(realUserId)\n        return\n      }\n\n      // Call local storage to see if we already have a guest user id\n      const guestUserId = localStorage.getItem(guestUserIdField)\n      if (guestUserId) {\n        setUserId(guestUserId)\n        return\n      }\n\n      // If we don't have a guest user id, generate one and save it to local storage\n      setIsNewGuestUser(true)\n      const newGuestUserId = GUEST_PREFIX + uuidv4()\n      try {\n        localStorage.setItem(guestUserIdField, newGuestUserId)\n      } catch (e) {\n        console.log('Failed to save guest user id locally: Local storage unavailable', e)\n      }\n      setUserId((userId) => (userId ? userId : newGuestUserId))\n    }\n  }\n\n  useEffect(() => {\n    try {\n      // Parse all image urls from flows (contained in flow.data) and asynchronously load them\n      if (flows) {\n        const loadedImageUrls: string[] = []\n        flows.forEach((flow) => {\n          if (flow.data) {\n            // Find all image urls in flow data. All image urls are in the json data as \"imageUri\" fields\n            const imageUrls = flow.data.match(/\"imageUri\":\"(.*?)\"/g)\n            if (imageUrls) {\n              imageUrls.forEach((imageUrl) => {\n                // Remove the \"imageUri\" and \" from the url\n                const url = imageUrl.replace('\"imageUri\":\"', '').replace('\"', '')\n                // If the url has already been loaded, skip it\n                if (loadedImageUrls.includes(url)) {\n                  return\n                }\n                // Create an image element and set the src to the url\n                const img = new Image()\n                img.src = url\n                loadedImageUrls.push(url)\n              })\n            }\n          }\n        })\n      }\n    } catch (e) {}\n  }, [flows])\n\n  useEffect(() => {\n    if (userId !== lastUserId) {\n      // Reset responses\n      setFlowResponses([])\n    }\n\n    setLastUserId(userId)\n    // if user id isn't null and doesn't begin with GUEST_PREFIX , save it to local storage\n    if (userId && !userId.startsWith(GUEST_PREFIX)) {\n      try {\n        localStorage.setItem(realUserIdField, userId)\n      } catch (e) {\n        console.log('Failed to save user id locally: Local storage available', e)\n      }\n    }\n    // If the user ID is null, give a grace period of 50ms to set the real user id\n    if (userId === null) {\n      setTimeout(() => {\n        if (userId === null) {\n          generateGuestUserId()\n        }\n      }, 50)\n    }\n  }, [userId, flows, userProperties])\n\n  function AutomaticFlowIdsToTrigger() {\n    return (\n      <>\n        {automaticFlowIdsToTrigger.map((flow) => {\n          if (getFlowStatus(flow.slug) !== NOT_STARTED_FLOW) {\n            return null\n          }\n\n          return (\n            <span key={flow.slug}>\n              <FrigadeForm\n                flowId={flow.slug}\n                type={'modal'}\n                modalPosition={'center'}\n                endFlowOnDismiss={true}\n              />\n            </span>\n          )\n        })}\n      </>\n    )\n  }\n\n  return (\n    <>\n      <AutomaticFlowIdsToTrigger />\n    </>\n  )\n}\n","import { useCallback, useContext, useEffect } from 'react'\nimport {\n  ABORTED_FLOW,\n  COMPLETED_FLOW,\n  COMPLETED_STEP,\n  NOT_STARTED_FLOW,\n  NOT_STARTED_STEP,\n  STARTED_FLOW,\n  STARTED_STEP,\n  StepActionType,\n  useCheckHasInitiatedAPI,\n  useConfig,\n} from './common'\nimport { FrigadeContext } from '../FrigadeProvider'\nimport { FlowResponse, useFlowResponses } from './flow-responses'\nimport useSWR from 'swr'\nimport { useUserFlowStates } from './user-flow-states'\nimport { StepData } from '../types'\nimport { getSubFlowFromCompletionCriteria } from '../shared/completion-util'\n\nexport interface Flow {\n  id: number\n  name: string\n  description: string\n  data: string\n  createdAt: string\n  modifiedAt: string\n  slug: string\n  type: FlowType\n  triggerType: TriggerType\n  targetingLogic?: string\n  active: boolean\n}\n\nexport enum FlowType {\n  CHECKLIST = 'CHECKLIST',\n  FORM = 'FORM',\n  TOUR = 'TOUR',\n  SUPPORT = 'SUPPORT',\n  CUSTOM = 'CUSTOM',\n  BANNER = 'BANNER',\n  EMBEDDED_TIP = 'EMBEDDED_TIP',\n  NPS_SURVEY = 'NPS_SURVEY',\n}\n\nexport enum TriggerType {\n  MANUAL = 'MANUAL',\n  AUTOMATIC = 'AUTOMATIC',\n}\n\nexport function useFlows() {\n  const { config, apiUrl } = useConfig()\n  const {\n    flows,\n    setFlows,\n    userId,\n    publicApiKey,\n    customVariables,\n    setCustomVariables,\n    hasActiveFullPageFlow,\n    setHasActiveFullPageFlow,\n    setFlowResponses,\n    setShouldGracefullyDegrade,\n    readonly,\n  } = useContext(FrigadeContext)\n\n  const emptyResponse = {\n    data: [],\n  }\n  const { verifySDKInitiated } = useCheckHasInitiatedAPI()\n  const { addResponse, getFlowResponses } = useFlowResponses()\n  const fetcher = (url) =>\n    fetch(url, config)\n      .then((response) => {\n        if (response.ok) {\n          return response.json()\n        }\n        console.log(\n          `Error fetching ${url} (${response.status}): ${response.statusText}. .Will gracefully degrade and hide Frigade`\n        )\n        setShouldGracefullyDegrade(true)\n        return emptyResponse\n      })\n      .catch((error) => {\n        console.log(`Error fetching ${url}: ${error}. Will gracefully degrade and hide Frigade`)\n        setShouldGracefullyDegrade(true)\n        return emptyResponse\n      })\n  const {\n    userFlowStatesData,\n    isLoadingUserFlowStateData,\n    optimisticallyMarkFlowCompleted,\n    optimisticallyMarkFlowNotStarted,\n    optimisticallyMarkStepCompleted,\n    optimisticallyMarkStepNotStarted,\n    optimisticallyMarkStepStarted,\n  } = useUserFlowStates()\n\n  const {\n    data: flowData,\n    error,\n    isLoading: isLoadingFlows,\n  } = useSWR(publicApiKey ? `${apiUrl}flows${readonly ? `?readonly=true` : ''}` : null, fetcher, {\n    keepPreviousData: true,\n  })\n\n  useEffect(() => {\n    if (error) {\n      console.error(error)\n      return\n    }\n    if (flowData && flowData.data) {\n      setFlows(flowData.data)\n    }\n  }, [flowData, error])\n\n  function getFlow(slug: string): Flow {\n    if (isLoadingFlows) {\n      return null\n    }\n    const flow = flows.find((f) => f.slug === slug)\n    if (!flow && flows.length > 0 && !isLoadingUserFlowStateData && !isLoadingFlows) {\n      console.log(`Flow with slug ${slug} not found`)\n      return null\n    }\n    if (flow?.active === false) {\n      return null\n    }\n    return flow\n  }\n\n  function getFlowSteps(flowId: string): StepData[] {\n    if (!getFlow(flowId)) {\n      return []\n    }\n    let flowData = getFlow(flowId).data\n    if (!flowData) {\n      return []\n    }\n\n    flowData = substituteVariables(flowData)\n\n    const steps = JSON.parse(flowData)?.data ?? []\n\n    return steps\n      .map((step: StepData) => {\n        const autoCalculatedProgress = getStepOptionalProgress(step)\n        return {\n          handleSecondaryButtonClick: () => {\n            if (step.skippable === true) {\n              markStepCompleted(flowId, step.id, { skipped: true })\n            }\n          },\n          ...step,\n          complete:\n            getStepStatus(flowId, step.id) === COMPLETED_STEP || autoCalculatedProgress >= 1,\n          blocked: isStepBlocked(flowId, step.id),\n          hidden: isStepHidden(flowId, step.id),\n          handlePrimaryButtonClick: () => {\n            if (\n              (!step.completionCriteria &&\n                (step.autoMarkCompleted || step.autoMarkCompleted === undefined)) ||\n              (step.completionCriteria && step.autoMarkCompleted === true)\n            ) {\n              markStepCompleted(flowId, step.id)\n            }\n          },\n          progress: autoCalculatedProgress,\n        }\n      })\n      .filter((step: StepData) => !(step.hidden === true))\n  }\n\n  function substituteVariables(flowData: string) {\n    return flowData.replaceAll(/\\${(.*?)}/g, (_, variableName) => {\n      if (customVariables[variableName] === undefined) {\n        return ''\n      }\n\n      return String(customVariables[variableName])\n        .replace(/[\\u00A0-\\u9999<>\\&]/g, function (i) {\n          return '&#' + i.charCodeAt(0) + ';'\n        })\n        .replaceAll(/[\\\\]/g, '\\\\\\\\')\n        .replaceAll(/[\\\"]/g, '\\\\\"')\n        .replaceAll(/[\\/]/g, '\\\\/')\n        .replaceAll(/[\\b]/g, '\\\\b')\n        .replaceAll(/[\\f]/g, '\\\\f')\n        .replaceAll(/[\\n]/g, '\\\\n')\n        .replaceAll(/[\\r]/g, '\\\\r')\n        .replaceAll(/[\\t]/g, '\\\\t')\n    })\n  }\n\n  /**\n   * Get high-level props for a flow such as title and subtitle\n   * @param slug\n   */\n  function getFlowMetadata(slug: string): any {\n    if (!getFlow(slug)) {\n      return []\n    }\n    let flowData = getFlow(slug).data\n    if (!flowData) {\n      return []\n    }\n\n    flowData = substituteVariables(flowData)\n\n    return JSON.parse(flowData) ?? {}\n  }\n\n  function setCustomVariable(key: string, value: string | number | boolean) {\n    setCustomVariables((prev) => ({ ...prev, [key]: value }))\n  }\n\n  function updateCustomVariables(newCustomVariables?: {\n    [key: string]: string | number | boolean\n  }) {\n    if (\n      !isLoadingUserFlowStateData &&\n      !isLoadingFlows &&\n      newCustomVariables &&\n      JSON.stringify(customVariables) !=\n        JSON.stringify({ ...customVariables, ...newCustomVariables })\n    ) {\n      Object.keys(newCustomVariables).forEach((key) => {\n        setCustomVariable(key, newCustomVariables[key])\n      })\n    }\n  }\n\n  const markStepStarted = useCallback(\n    async (flowId: string, stepId: string, data?: any) => {\n      if (!verifySDKInitiated()) {\n        return\n      }\n      const flowResponse = {\n        foreignUserId: userId,\n        flowSlug: flowId,\n        stepId,\n        actionType: STARTED_STEP,\n        data: data ?? {},\n        createdAt: new Date(),\n        blocked: false,\n        hidden: false,\n      }\n      if (!shouldSendServerSideCall(flowResponse)) {\n        return\n      }\n\n      await optimisticallyMarkStepStarted(flowId, stepId, flowResponse)\n      addResponse(flowResponse)\n    },\n    [userId, userFlowStatesData]\n  )\n\n  const markStepNotStarted = useCallback(\n    async (flowId: string, stepId: string, data?: any) => {\n      if (!verifySDKInitiated()) {\n        return\n      }\n      const flowResponse = {\n        foreignUserId: userId,\n        flowSlug: flowId,\n        stepId,\n        actionType: NOT_STARTED_STEP,\n        data: data ?? {},\n        createdAt: new Date(),\n        blocked: false,\n        hidden: false,\n      }\n\n      if (!shouldSendServerSideCall(flowResponse)) {\n        return\n      }\n      await optimisticallyMarkStepNotStarted(flowId, stepId)\n      addResponse(flowResponse)\n    },\n    [userId, userFlowStatesData]\n  )\n\n  const markStepCompleted = useCallback(\n    async (flowId: string, stepId: string, data?: any) => {\n      if (!verifySDKInitiated()) {\n        return\n      }\n      const flowResponse = {\n        foreignUserId: userId,\n        flowSlug: flowId,\n        stepId,\n        actionType: COMPLETED_STEP,\n        data: data ?? {},\n        createdAt: new Date(),\n        blocked: false,\n        hidden: false,\n      }\n      if (!shouldSendServerSideCall(flowResponse)) {\n        return\n      }\n      await optimisticallyMarkStepCompleted(flowId, stepId, flowResponse)\n      addResponse(flowResponse)\n    },\n    [userId, userFlowStatesData]\n  )\n\n  const markFlowNotStarted = useCallback(\n    async (flowId: string, data?: any) => {\n      if (!verifySDKInitiated()) {\n        return\n      }\n      if (getFlowStatus(flowId) === NOT_STARTED_FLOW) {\n        return\n      }\n      const flowResponse = {\n        foreignUserId: userId,\n        flowSlug: flowId,\n        stepId: 'unknown',\n        actionType: NOT_STARTED_FLOW,\n        data: data ?? {},\n        createdAt: new Date(),\n        blocked: false,\n        hidden: false,\n      }\n\n      await optimisticallyMarkFlowNotStarted(flowId)\n\n      if (!shouldSendServerSideCall(flowResponse)) {\n        return\n      }\n      addResponse(flowResponse)\n    },\n    [userId, userFlowStatesData]\n  )\n\n  const markFlowStarted = useCallback(\n    async (flowId: string, data?: any) => {\n      if (!verifySDKInitiated()) {\n        return\n      }\n      const flowResponse = {\n        foreignUserId: userId,\n        flowSlug: flowId,\n        stepId: 'unknown',\n        actionType: STARTED_FLOW,\n        data: data ?? {},\n        createdAt: new Date(),\n        blocked: false,\n        hidden: false,\n      }\n      if (!shouldSendServerSideCall(flowResponse)) {\n        return\n      }\n      addResponse(flowResponse)\n    },\n    [userId, userFlowStatesData]\n  )\n\n  const markFlowCompleted = useCallback(\n    async (flowId: string, data?: any) => {\n      if (!verifySDKInitiated()) {\n        return\n      }\n      const flowResponse = {\n        foreignUserId: userId,\n        flowSlug: flowId,\n        stepId: 'unknown',\n        actionType: COMPLETED_FLOW,\n        data: data ?? {},\n        createdAt: new Date(),\n        blocked: false,\n        hidden: false,\n      }\n      if (!shouldSendServerSideCall(flowResponse)) {\n        return\n      }\n\n      await optimisticallyMarkFlowCompleted(flowId)\n      addResponse(flowResponse)\n    },\n    [userId, userFlowStatesData]\n  )\n\n  const markFlowAborted = useCallback(\n    async (flowId: string, data?: any) => {\n      if (!verifySDKInitiated()) {\n        return\n      }\n      const flowResponse = {\n        foreignUserId: userId,\n        flowSlug: flowId,\n        stepId: 'unknown',\n        actionType: ABORTED_FLOW,\n        data: data ?? {},\n        createdAt: new Date(),\n        blocked: false,\n        hidden: false,\n      }\n      if (!shouldSendServerSideCall(flowResponse)) {\n        return\n      }\n      await optimisticallyMarkFlowCompleted(flowId)\n      addResponse(flowResponse)\n    },\n    [userId, userFlowStatesData]\n  )\n\n  function shouldSendServerSideCall(flowResponse: FlowResponse) {\n    if (!userFlowStatesData && flowResponse.actionType === NOT_STARTED_STEP) {\n      return false\n    }\n    if (userFlowStatesData) {\n      const flowState = userFlowStatesData.find((state) => state.flowId === flowResponse.flowSlug)\n      if (\n        flowResponse.actionType === NOT_STARTED_STEP &&\n        (!flowState?.stepStates[flowResponse.stepId] ||\n          flowState.stepStates[flowResponse.stepId].actionType === NOT_STARTED_STEP)\n      ) {\n        return false\n      }\n      if (\n        flowState &&\n        flowState.stepStates[flowResponse.stepId]?.actionType === flowResponse.actionType\n      ) {\n        return false\n      }\n      if (\n        flowState &&\n        flowState.flowState === COMPLETED_FLOW &&\n        flowResponse.actionType === COMPLETED_FLOW\n      ) {\n        return false\n      }\n    }\n\n    return true\n  }\n\n  function getStepStatus(flowId: string, stepId: string): StepActionType | null {\n    const maybeFlowResponse = getStepStateForFlow(flowId, stepId)\n\n    if (isLoadingUserFlowStateData) {\n      return null\n    }\n\n    return (maybeFlowResponse ? maybeFlowResponse.actionType : NOT_STARTED_STEP) as StepActionType\n  }\n\n  function isStepBlocked(flowId: string, stepId: string): boolean {\n    const maybeFlowResponse = getStepStateForFlow(flowId, stepId)\n\n    if (!maybeFlowResponse) {\n      return false\n    }\n\n    return maybeFlowResponse.blocked\n  }\n\n  function isStepHidden(flowId: string, stepId: string): boolean {\n    const maybeFlowResponse = getStepStateForFlow(flowId, stepId)\n\n    if (!maybeFlowResponse) {\n      return false\n    }\n\n    return maybeFlowResponse.hidden\n  }\n\n  function getStepStateForFlow(flowId: string, stepId: string): FlowResponse | null {\n    if (isLoadingUserFlowStateData) {\n      return null\n    }\n\n    const flowState = userFlowStatesData?.find((state) => state.flowId === flowId)\n    if (!flowState || !flowState.stepStates[stepId]) {\n      return null\n    }\n\n    return flowState.stepStates[stepId] ?? null\n  }\n\n  function getCurrentStep(flowId: string): StepData | null {\n    if (isLoadingUserFlowStateData || !userFlowStatesData) {\n      return null\n    }\n    if (getFlowStatus(flowId) === NOT_STARTED_FLOW) {\n      return getFlowSteps(flowId)[0] ?? null\n    }\n\n    const lastStep = userFlowStatesData.find((f) => f.flowId === flowId)?.lastStepId\n    if (lastStep) {\n      return getFlowSteps(flowId).find((s) => s.id === lastStep)\n    }\n    return null\n  }\n\n  function getCurrentStepIndex(flowId: string): number {\n    const currentStep = getCurrentStep(flowId)\n    if (!currentStep) {\n      return 0\n    }\n    const index = getFlowSteps(flowId).findIndex((s) => s.id === currentStep.id) ?? 0\n    if (\n      getStepStatus(flowId, currentStep.id) === COMPLETED_STEP &&\n      index < getFlowSteps(flowId).length - 1\n    ) {\n      return index + 1\n    }\n    return index\n  }\n\n  function getStepOptionalProgress(step: StepData) {\n    if (!step.completionCriteria) return undefined\n\n    const stepSubFlowSlug = getSubFlowFromCompletionCriteria(step.completionCriteria)\n    if (stepSubFlowSlug === null) return undefined\n\n    const completed = getNumberOfStepsCompleted(stepSubFlowSlug)\n    const total = getNumberOfSteps(stepSubFlowSlug)\n\n    return total === 0 ? undefined : completed / total\n  }\n\n  function getFlowStatus(flowId: string) {\n    const userFlowState = userFlowStatesData?.find((f) => f.flowId === flowId)\n    if (!userFlowState) {\n      return null\n    }\n    return userFlowState.flowState\n  }\n\n  function getNumberOfStepsCompleted(flowId: string): number {\n    const steps = getFlowSteps(flowId)\n    if (steps.length === 0) {\n      return 0\n    }\n\n    const completedSteps = steps.filter((s) => getStepStatus(flowId, s.id) === COMPLETED_STEP)\n\n    return completedSteps.length\n  }\n\n  function getNumberOfSteps(flowId: string) {\n    return getFlowSteps(flowId).length\n  }\n\n  function getFlowData(flowId: string): any {\n    const maybeFlow = flows.find((f) => f.slug === flowId)\n    if (!maybeFlow) {\n      return null\n    }\n    return JSON.parse(maybeFlow.data)\n  }\n\n  function targetingLogicShouldHideFlow(flow: Flow) {\n    if (readonly) {\n      return false\n    }\n    if (isLoadingUserFlowStateData) {\n      return true\n    }\n    if (flow?.targetingLogic && userFlowStatesData) {\n      // Iterate through matching userFlowState for the flow and if shouldTrigger is true, return false\n      const matchingUserFlowState = userFlowStatesData.find((ufs) => ufs.flowId === flow.slug)\n      if (matchingUserFlowState) {\n        return matchingUserFlowState.shouldTrigger === false\n      }\n    }\n    if (flow?.targetingLogic && userId && userId.startsWith('guest_')) {\n      return true\n    }\n\n    return false\n  }\n\n  function isFlowAvailableToUser(flowId: string) {\n    return !targetingLogicShouldHideFlow(getFlow(flowId))\n  }\n\n  return {\n    getFlow,\n    getFlowData,\n    isLoading: isLoadingUserFlowStateData || isLoadingFlows,\n    getStepStatus,\n    getFlowSteps,\n    getCurrentStepIndex,\n    markStepStarted,\n    markStepCompleted,\n    markFlowNotStarted,\n    markFlowStarted,\n    markFlowCompleted,\n    markFlowAborted,\n    markStepNotStarted,\n    getFlowStatus,\n    getNumberOfStepsCompleted,\n    getNumberOfSteps,\n    targetingLogicShouldHideFlow,\n    setCustomVariable,\n    updateCustomVariables,\n    customVariables,\n    getStepOptionalProgress,\n    getFlowMetadata,\n    isStepBlocked,\n    isStepHidden,\n    hasActiveFullPageFlow,\n    setHasActiveFullPageFlow,\n    isFlowAvailableToUser,\n  }\n}\n","import React, { useMemo } from 'react'\nimport { FrigadeContext } from '../FrigadeProvider'\nimport { VERSION_NUMBER } from './version'\n\nexport const NOT_STARTED_STEP = 'NOT_STARTED_STEP'\nexport const COMPLETED_FLOW = 'COMPLETED_FLOW'\nexport const ABORTED_FLOW = 'ABORTED_FLOW'\nexport const STARTED_FLOW = 'STARTED_FLOW'\nexport const NOT_STARTED_FLOW = 'NOT_STARTED_FLOW'\nexport const COMPLETED_STEP = 'COMPLETED_STEP'\nexport const STARTED_STEP = 'STARTED_STEP'\n// Define a string type that is either STARTED_STEP or COMPLETED_STEP\nexport type StepActionType = 'STARTED_STEP' | 'COMPLETED_STEP' | 'NOT_STARTED_STEP'\n\nexport function useConfig() {\n  const { publicApiKey, userId, apiUrl } = React.useContext(FrigadeContext)\n\n  return {\n    config: useMemo(\n      () => ({\n        headers: {\n          Authorization: `Bearer ${publicApiKey}`,\n          'Content-Type': 'application/json',\n          'X-Frigade-SDK-Version': VERSION_NUMBER,\n          'X-Frigade-SDK-Platform': 'React',\n        },\n      }),\n      [publicApiKey, userId]\n    ),\n    apiUrl: useMemo(() => `${apiUrl}/v1/public/`, [apiUrl]),\n  }\n}\n\nconst LAST_POST_CALL_AT = 'frigade-last-call-at-'\nconst LAST_POST_CALL_DATA = 'frigade-last-call-data-'\nexport function useGracefulFetch() {\n  const { shouldGracefullyDegrade, readonly } = React.useContext(FrigadeContext)\n\n  return async (url: string, options: any) => {\n    if (\n      readonly &&\n      (options.method === 'POST' || options.method === 'PUT' || options.method === 'DELETE')\n    ) {\n      return getEmptyResponse()\n    }\n    if (shouldGracefullyDegrade) {\n      console.log(`Skipping ${url} call to Frigade due to error`)\n      return getEmptyResponse()\n    }\n    const lastCallAtKey = LAST_POST_CALL_AT + url\n    const lastCallDataKey = LAST_POST_CALL_DATA + url\n    if (window && window.localStorage && options && options.body && options.method === 'POST') {\n      const lastCall = window.localStorage.getItem(lastCallAtKey)\n      const lastCallData = window.localStorage.getItem(lastCallDataKey)\n      if (lastCall && lastCallData && lastCallData == options.body) {\n        const lastCallDate = new Date(lastCall)\n        const now = new Date()\n        const diff = now.getTime() - lastCallDate.getTime()\n        // Throttle consecutive POST calls to 1 second\n        if (diff < 1000) {\n          return getEmptyResponse()\n        }\n      }\n      window.localStorage.setItem(lastCallAtKey, new Date().toISOString())\n      window.localStorage.setItem(lastCallDataKey, options.body)\n    }\n\n    let response\n    try {\n      response = await fetch(url, options)\n    } catch (error) {\n      return getEmptyResponse(error)\n    }\n\n    if (!response) {\n      return getEmptyResponse()\n    }\n\n    if (!response.ok) {\n      return getEmptyResponse(response.statusText)\n    }\n\n    return response\n  }\n}\n\nfunction getEmptyResponse(error?: any) {\n  if (error) {\n    console.log('Call to Frigade failed', error)\n  }\n\n  // Create empty response that contains the .json method and returns an empty object\n  return {\n    json: () => ({}),\n  }\n}\n\nexport interface PaginatedResult<T> {\n  data: T[]\n  offset: number\n  limit: number\n}\n\nexport function useCheckHasInitiatedAPI() {\n  const { publicApiKey, shouldGracefullyDegrade } = React.useContext(FrigadeContext)\n\n  function verifySDKInitiated() {\n    if (shouldGracefullyDegrade) {\n      console.error('Frigade hooks cannot be used when Frigade SDK has failed to initialize')\n      return false\n    }\n    if (!publicApiKey) {\n      console.error('Frigade hooks cannot be used outside the scope of FrigadeProvider')\n      return false\n    }\n    return true\n  }\n\n  return {\n    verifySDKInitiated,\n  }\n}\n","export const VERSION_NUMBER = '1.32.18'\n","import { useContext, useState } from 'react'\nimport {\n  ABORTED_FLOW,\n  COMPLETED_FLOW,\n  COMPLETED_STEP,\n  NOT_STARTED_FLOW,\n  NOT_STARTED_STEP,\n  STARTED_FLOW,\n  STARTED_STEP,\n  useConfig,\n  useGracefulFetch,\n} from './common'\nimport { FrigadeContext } from '../FrigadeProvider'\nimport { useUserFlowStates } from './user-flow-states'\n\nexport interface FlowResponse {\n  foreignUserId: string\n  flowSlug: string\n  stepId: string\n  actionType: string\n  data: object\n  createdAt: Date\n  blocked: boolean\n  hidden: boolean\n}\n\nexport interface PublicStepState {\n  stepId: string\n  actionType: 'COMPLETED_STEP' | 'STARTED_STEP' | 'NOT_STARTED_STEP'\n  blocked: boolean\n  hidden: boolean\n  createdAt: Date\n}\n\nexport function useFlowResponses() {\n  const { config, apiUrl } = useConfig()\n  const { userFlowStatesData, mutateUserFlowState } = useUserFlowStates()\n  const { failedFlowResponses, setFailedFlowResponses, flowResponses, setFlowResponses } =\n    useContext(FrigadeContext)\n  const [successfulFlowResponsesStrings, setSuccessfulFlowResponsesStrings] = useState<Set<String>>(\n    new Set()\n  )\n  const [successfulFlowResponses, setSuccessfulFlowResponses] = useState<Set<FlowResponse>>(\n    new Set()\n  )\n\n  const gracefullyFetch = useGracefulFetch()\n\n  function postFlowResponse(flowResponse: FlowResponse) {\n    const flowResponseString = JSON.stringify(flowResponse)\n\n    if (successfulFlowResponsesStrings.has(flowResponseString)) {\n      return null\n    }\n    // For steps that are already in the same state, do not update the API.\n    successfulFlowResponsesStrings.add(flowResponseString)\n    setSuccessfulFlowResponsesStrings(successfulFlowResponsesStrings)\n    successfulFlowResponses.add(flowResponse)\n    setSuccessfulFlowResponses(successfulFlowResponses)\n    // Only update flow responses if there is not already an entry for this step.\n    // Check for flow id, step id, and action type, and date\n    const existingFlowResponse = flowResponses?.find(\n      (r) =>\n        r.flowSlug === flowResponse.flowSlug &&\n        r.stepId === flowResponse.stepId &&\n        r.actionType === flowResponse.actionType &&\n        r.createdAt === flowResponse.createdAt\n    )\n\n    return gracefullyFetch(`${apiUrl}flowResponses`, {\n      ...config,\n      method: 'POST',\n      body: flowResponseString,\n    }).then((r) => {\n      if (r.status !== 200 && r.status !== 201) {\n        console.log(\n          'Failed to send flow response for step ' +\n            flowResponse.stepId +\n            '. Will retry again later.'\n        )\n        setFailedFlowResponses([...failedFlowResponses, flowResponse])\n      } else {\n        if (!existingFlowResponse) {\n          setFlowResponses((prev) => [...(prev ?? []), flowResponse])\n        }\n      }\n    })\n  }\n\n  async function addResponse(flowResponse: FlowResponse) {\n    if (!flowResponse.foreignUserId) {\n      return\n    }\n\n    if (flowResponse.actionType === STARTED_FLOW || flowResponse.actionType === NOT_STARTED_FLOW) {\n      await postFlowResponse(flowResponse)\n    } else if (flowResponse.actionType === COMPLETED_FLOW) {\n      await postFlowResponse(flowResponse)\n    } else if (flowResponse.actionType === STARTED_STEP) {\n      await postFlowResponse(flowResponse)\n    } else if (flowResponse.actionType === COMPLETED_STEP) {\n      await postFlowResponse(flowResponse)\n    } else if (flowResponse.actionType === ABORTED_FLOW) {\n      await postFlowResponse(flowResponse)\n    } else if (flowResponse.actionType === NOT_STARTED_STEP) {\n      await postFlowResponse(flowResponse)\n    }\n  }\n\n  function getFlowResponses() {\n    const apiFlowResponses: FlowResponse[] = []\n\n    userFlowStatesData?.forEach((flowState) => {\n      if (flowState && flowState.stepStates && Object.keys(flowState.stepStates).length !== 0) {\n        // Convert flowState.stepStates map to flowResponses\n\n        for (const stepSlug in flowState.stepStates) {\n          const stepState = flowState.stepStates[stepSlug] as PublicStepState\n\n          apiFlowResponses.push({\n            foreignUserId: flowState.foreignUserId,\n            flowSlug: flowState.flowId,\n            stepId: stepState.stepId,\n            actionType: stepState.actionType,\n            data: {},\n            createdAt: new Date(stepState.createdAt),\n            blocked: stepState.blocked,\n            hidden: stepState.hidden,\n          } as FlowResponse)\n        }\n      }\n    })\n\n    return [...apiFlowResponses, ...flowResponses]\n  }\n\n  return {\n    addResponse,\n    setFlowResponses,\n    getFlowResponses,\n  }\n}\n","import {\n  COMPLETED_FLOW,\n  NOT_STARTED_FLOW,\n  NOT_STARTED_STEP,\n  STARTED_FLOW,\n  useConfig,\n} from './common'\nimport { useContext, useEffect, useState } from 'react'\nimport { FrigadeContext } from '../FrigadeProvider'\nimport useSWR from 'swr'\nimport { useFlowOpens } from './flow-opens'\nimport { FlowResponse } from './flow-responses'\nimport useSWRImmutable from 'swr/immutable'\n\nexport interface PublicUserFlowState {\n  flowId: string\n  flowState: 'COMPLETED_FLOW' | 'STARTED_FLOW' | 'NOT_STARTED_FLOW'\n  lastStepId: string\n  userId: string\n  foreignUserId: string\n  stepStates: object\n  shouldTrigger: boolean\n}\n\nconst UNKNOWN_STEP_ID = 'unknown'\n\nexport function useUserFlowStates(): {\n  userFlowStatesData: PublicUserFlowState[]\n  isLoadingUserFlowStateData: boolean\n  mutateUserFlowState: () => any\n  optimisticallyMarkFlowCompleted: (flowId: string) => void\n  optimisticallyMarkFlowNotStarted: (flowId: string) => void\n  optimisticallyMarkStepCompleted: (\n    flowId: string,\n    stepId: string,\n    flowResponse: FlowResponse\n  ) => void\n  optimisticallyMarkStepNotStarted: (flowId: string, stepId: string) => void\n  optimisticallyMarkStepStarted: (\n    flowId: string,\n    stepId: string,\n    flowResponse: FlowResponse\n  ) => void\n  error: any\n} {\n  const { config, apiUrl } = useConfig()\n  const { publicApiKey, userId, organizationId, flows, setShouldGracefullyDegrade, readonly } =\n    useContext(FrigadeContext)\n  const { resetOpenFlowState } = useFlowOpens()\n  const [hasFinishedInitialLoad, setHasFinishedInitialLoad] = useState(false)\n  const emptyResponse = {\n    data: flows.map((flow) => ({\n      flowId: flow.id,\n      flowState: COMPLETED_FLOW,\n      lastStepId: null,\n      userId,\n      foreignUserId: userId,\n      stepStates: {},\n      shouldTrigger: false,\n    })),\n  }\n  const fetcher = (url) =>\n    fetch(url, config)\n      .then((response) => {\n        if (response.ok) {\n          return response.json()\n        }\n        throw new Error('Failed to fetch user flow states')\n      })\n      .catch((error) => {\n        console.log(`Error fetching ${url}: ${error}. Will gracefully degrade and hide Frigade`)\n        setShouldGracefullyDegrade(true)\n        return emptyResponse\n      })\n\n  const key =\n    publicApiKey && flows && userId\n      ? `${apiUrl}userFlowStates?foreignUserId=${encodeURIComponent(userId)}${\n          organizationId ? `&foreignUserGroupId=${encodeURIComponent(organizationId)}` : ''\n        }`\n      : null\n\n  const {\n    data,\n    isLoading: isLoadingUserFlowStateData,\n    mutate: mutateUserFlowState,\n    error,\n  } = readonly\n    ? useSWRImmutable(key, fetcher)\n    : useSWR(key, fetcher, {\n        revalidateOnFocus: true,\n        revalidateIfStale: true,\n        keepPreviousData: true,\n        revalidateOnMount: true,\n        errorRetryInterval: 10000,\n        errorRetryCount: 3,\n        onError: () => {\n          // In case of errors fetching the user flow states, hide all Frigade flow by setting shouldTrigger to false\n          return emptyResponse\n        },\n        onLoadingSlow: () => {\n          return emptyResponse\n        },\n      })\n  const userFlowStatesData = data?.data\n\n  useEffect(() => {\n    if (!hasFinishedInitialLoad && !isLoadingUserFlowStateData && userFlowStatesData) {\n      setHasFinishedInitialLoad(true)\n    }\n  }, [userFlowStatesData, hasFinishedInitialLoad, isLoadingUserFlowStateData])\n\n  async function optimisticallyMarkFlowCompleted(flowId: string) {\n    if (userFlowStatesData && !readonly) {\n      const flowState = userFlowStatesData.find((state) => state.flowId === flowId)\n      if (flowState && flowState.flowState !== COMPLETED_FLOW) {\n        flowState.flowState = COMPLETED_FLOW\n      }\n      await mutateUserFlowState(Promise.resolve({ ...data, data: userFlowStatesData }), {\n        optimisticData: { ...data, data: userFlowStatesData },\n        revalidate: false,\n        rollbackOnError: false,\n      })\n    }\n  }\n\n  async function optimisticallyMarkStepCompleted(\n    flowId: string,\n    stepId: string,\n    flowResponse: FlowResponse\n  ) {\n    if (userFlowStatesData) {\n      const flowState = userFlowStatesData.find(\n        (state) => state.flowId === flowId\n      ) as PublicUserFlowState\n      if (flowState) {\n        flowState.stepStates[stepId] = flowResponse\n        flowState.flowState = STARTED_FLOW\n      }\n      await mutateUserFlowState(Promise.resolve({ ...data, data: userFlowStatesData }), {\n        optimisticData: { ...data, data: userFlowStatesData },\n        revalidate: false,\n        rollbackOnError: false,\n      })\n    }\n  }\n\n  async function optimisticallyMarkStepStarted(\n    flowId: string,\n    stepId: string,\n    flowResponse: FlowResponse\n  ) {\n    if (userFlowStatesData) {\n      const flowState = userFlowStatesData.find(\n        (state) => state.flowId === flowId\n      ) as PublicUserFlowState\n      if (flowState) {\n        flowState.lastStepId = stepId\n        flowState.stepStates[stepId] = flowResponse\n        flowState.flowState = STARTED_FLOW\n      }\n      await mutateUserFlowState(\n        { ...data, data: userFlowStatesData },\n        {\n          optimisticData: { ...data, data: userFlowStatesData },\n          revalidate: false,\n          rollbackOnError: false,\n        }\n      )\n    }\n  }\n\n  async function optimisticallyMarkFlowNotStarted(flowId: string) {\n    if (userFlowStatesData) {\n      const flowState = userFlowStatesData.find((state) => state.flowId === flowId)\n      if (flowState && flowState.flowState !== NOT_STARTED_FLOW) {\n        flowState.flowState = NOT_STARTED_FLOW\n        flowState.lastStepId = UNKNOWN_STEP_ID\n        // Update all sets to NOT_STARTED_STEP\n        Object.keys(flowState.stepStates).forEach((stepId) => {\n          flowState.stepStates[stepId].actionType = NOT_STARTED_STEP\n          flowState.stepStates[stepId].createdAt = new Date().toISOString()\n        })\n        await mutateUserFlowState(\n          { ...data, data: userFlowStatesData },\n          {\n            optimisticData: { ...data, data: userFlowStatesData },\n            revalidate: false,\n            rollbackOnError: false,\n          }\n        )\n        resetOpenFlowState(flowId)\n      }\n    }\n  }\n\n  async function optimisticallyMarkStepNotStarted(flowId: string, stepId: string) {\n    if (userFlowStatesData) {\n      const flowState = userFlowStatesData.find((state) => state.flowId === flowId)\n      if (flowState && flowState.stepStates[stepId] !== NOT_STARTED_STEP) {\n        flowState.stepStates[stepId] = NOT_STARTED_STEP\n      }\n      await mutateUserFlowState(\n        { ...data, data: userFlowStatesData },\n        {\n          optimisticData: { ...data, data: userFlowStatesData },\n          revalidate: false,\n          rollbackOnError: false,\n        }\n      )\n    }\n  }\n\n  return {\n    userFlowStatesData,\n    isLoadingUserFlowStateData: !hasFinishedInitialLoad,\n    mutateUserFlowState,\n    optimisticallyMarkFlowCompleted,\n    optimisticallyMarkFlowNotStarted,\n    optimisticallyMarkStepCompleted,\n    optimisticallyMarkStepNotStarted,\n    optimisticallyMarkStepStarted,\n    error,\n  }\n}\n","import { useContext } from 'react'\nimport { FrigadeContext } from '../FrigadeProvider'\n\nexport function useFlowOpens() {\n  const {\n    openFlowStates,\n    setOpenFlowStates,\n    hasActiveFullPageFlow,\n    setCompletedFlowsToKeepOpenDuringSession,\n    completedFlowsToKeepOpenDuringSession,\n  } = useContext(FrigadeContext)\n\n  function getOpenFlowState(flowId: string, defaultValue = false) {\n    return openFlowStates[flowId] ?? defaultValue\n  }\n\n  function setOpenFlowState(flowId: string, isOpen: boolean) {\n    setOpenFlowStates((prev) => ({ ...prev, [flowId]: isOpen }))\n  }\n\n  function resetOpenFlowState(flowId: string) {\n    setOpenFlowStates((prev) => {\n      const { [flowId]: _, ...rest } = prev\n      return { ...rest }\n    })\n  }\n\n  function setKeepCompletedFlowOpenDuringSession(flowId: string) {\n    if (completedFlowsToKeepOpenDuringSession.includes(flowId)) {\n      return\n    }\n    setCompletedFlowsToKeepOpenDuringSession((prev) => [...prev, flowId])\n  }\n\n  function shouldKeepCompletedFlowOpenDuringSession(flowId: string): boolean {\n    return completedFlowsToKeepOpenDuringSession.includes(flowId)\n  }\n\n  function hasOpenModals(currentFlowId?: string) {\n    return (\n      Object.entries(openFlowStates).some(\n        ([flowId, isOpen]) => isOpen && flowId != currentFlowId\n      ) || hasActiveFullPageFlow\n    )\n  }\n\n  return {\n    getOpenFlowState,\n    setOpenFlowState,\n    resetOpenFlowState,\n    hasOpenModals,\n    setKeepCompletedFlowOpenDuringSession,\n    shouldKeepCompletedFlowOpenDuringSession,\n  }\n}\n","const regex = /user.flow\\(([^\\)]+)\\) == '?COMPLETED_FLOW'?/gm\n\nexport const getSubFlowFromCompletionCriteria = (completionCriteria: string) => {\n  const flowMatch = regex.exec(completionCriteria)\n  if (flowMatch === null) return null\n\n  /**\n   *  Use the grouped regex match to\n   *  - match on full completion criteria for a 'Flow' completion\n   *  - get the flowId slug from within the completion criteria\n   */\n  let flow = null\n  flowMatch.forEach((match, _) => {\n    let trimmed = replaceAll(match, \"'\", '')\n    if (trimmed.startsWith('flow_')) {\n      flow = trimmed\n    }\n  })\n  return flow\n}\n\nexport const replaceAll = function (target, search, replacement) {\n  return target.replace(new RegExp(search, 'g'), replacement)\n}\n","import React, { useCallback, useContext, useEffect } from 'react'\nimport { FrigadeContext } from '../FrigadeProvider'\nimport { useCheckHasInitiatedAPI, useConfig, useGracefulFetch } from './common'\nimport { useUserFlowStates } from './user-flow-states'\nimport { EntityProperties } from '../FrigadeForm/types'\n\ninterface AddPropertyToUserDTO {\n  readonly foreignId: string\n  readonly properties?: { [key: string]: string | boolean | number | null }\n  readonly events?: UserEvent[]\n}\n\ninterface UserEvent {\n  readonly event: string\n  readonly properties?: { [key: string]: string | boolean | number | null }\n}\n\nexport const GUEST_PREFIX = 'guest_'\n\nexport function useUser() {\n  const { userId, organizationId, setUserId, setUserProperties, shouldGracefullyDegrade } =\n    useContext(FrigadeContext)\n  const { config, apiUrl } = useConfig()\n  const { mutateUserFlowState } = useUserFlowStates()\n  const gracefullyFetch = useGracefulFetch()\n  const { verifySDKInitiated } = useCheckHasInitiatedAPI()\n  // Use local storage to mark if user has already been registered in frigade\n  useEffect(() => {\n    // Check if user is not a guest\n    if (userId && !organizationId) {\n      // Check if userid begins with the guest prefix\n      if (userId.startsWith(GUEST_PREFIX)) {\n        return\n      }\n      const userRegisteredKey = `frigade-user-registered-${userId}`\n      // Check if user has already been registered in frigade\n      if (!localStorage.getItem(userRegisteredKey)) {\n        // Register user in frigade\n        gracefullyFetch(`${apiUrl}users`, {\n          ...config,\n          method: 'POST',\n          body: JSON.stringify({ foreignId: userId }),\n        })\n        // Mark user as registered in frigade\n        localStorage.setItem(userRegisteredKey, 'true')\n      }\n    }\n  }, [userId, shouldGracefullyDegrade, organizationId])\n\n  const addPropertiesToUser = useCallback(\n    async (properties: EntityProperties) => {\n      if (!verifySDKInitiated()) {\n        return\n      }\n      const data: AddPropertyToUserDTO = {\n        foreignId: userId,\n        properties,\n      }\n      await gracefullyFetch(`${apiUrl}users`, {\n        ...config,\n        method: 'POST',\n        body: JSON.stringify(data),\n      })\n      setUserProperties((userProperties) => ({ ...userProperties, ...properties }))\n      mutateUserFlowState()\n    },\n    [userId, config, shouldGracefullyDegrade, mutateUserFlowState]\n  )\n\n  const trackEventForUser = useCallback(\n    async (event: string, properties?: EntityProperties) => {\n      if (!verifySDKInitiated()) {\n        return\n      }\n      const eventData: UserEvent = {\n        event,\n        properties,\n      }\n      const data: AddPropertyToUserDTO = {\n        foreignId: userId,\n        events: [eventData],\n      }\n      await gracefullyFetch(`${apiUrl}users`, {\n        ...config,\n        method: 'POST',\n        body: JSON.stringify(data),\n      })\n      mutateUserFlowState()\n    },\n    [userId, config, mutateUserFlowState]\n  )\n\n  return { userId, setUserId, addPropertiesToUser, trackEventForUser }\n}\n","import React, { CSSProperties, FC, useEffect, useState } from 'react'\n\nimport { DefaultFrigadeFlowProps, StepData } from '../types'\nimport { useFlows } from '../api/flows'\nimport { COMPLETED_FLOW } from '../api/common'\nimport { Modal } from '../components/Modal'\nimport { CornerModal } from '../components/CornerModal'\nimport { CustomFormTypeProps, FormInputProps } from './types'\nimport { useTheme } from '../hooks/useTheme'\nimport { FormContent } from './FormContent'\nimport { RenderInlineStyles } from '../components/RenderInlineStyles'\nimport { useFlowOpens } from '../api/flow-opens'\n\nexport type FrigadeFormType = 'inline' | 'modal' | 'large-modal' | 'corner-modal'\n\nexport interface FrigadeFormProps extends DefaultFrigadeFlowProps {\n  /**\n   * @ignore\n   */\n  title?: string\n  /**\n   * @ignore\n   */\n  subtitle?: string\n  type?: FrigadeFormType\n  /**\n   * Map of custom components. The key must match the `type` property of the step defined in `flow-data.yml`\n   */\n  customStepTypes?: { [key: string]: (params: CustomFormTypeProps) => React.ReactNode }\n  /**\n   * Map of custom form components. Can only be used with a step of type `multiInput` (defined in `flow-data.yml`).\n   * The key must match the `type` property of the input defined in `flow-data.yml`\n   */\n  customFormElements?: { [key: string]: (params: FormInputProps) => React.ReactNode }\n  visible?: boolean\n  setVisible?: (visible: boolean) => void\n  onComplete?: () => void\n  /**\n   * Whether to show a dismiss button to exit out of the form. Applicable only for modal forms.\n   */\n  dismissible?: boolean\n  /**\n   * If true, the form can be repeated multiple times. Default is false. Useful for e.g. contact/support forms.\n   */\n  repeatable?: boolean\n  /**\n   * If true, the user will be excited from the flow when the form is dismissed. Default is false.\n   */\n  endFlowOnDismiss?: boolean\n  /**\n   * Indicates the position of the modal if the form type is a modal. Default is center.\n   */\n  modalPosition?: 'top-left' | 'top-right' | 'bottom-left' | 'bottom-right' | 'center'\n  /**\n   * Show a pagination indicator at the bottom of the form. Default is false.\n   */\n  showPagination?: boolean\n  /**\n   * Whether to allow the user to navigate back to previous steps. Default is false.\n   */\n  allowBackNavigation?: boolean\n  /**\n   * @ignore\n   */\n  showFrigadeBranding?: boolean\n  /**\n   * This function is called when the user submits data in a step.\n   * If it returns a string, the flow will not proceed to the next step and the string will be displayed as an error message.\n   */\n  validationHandler?: (\n    step: StepData,\n    index: number,\n    nextStep?: StepData,\n    allFormData?: any,\n    stepSpecificFormData?: object\n  ) => Promise<string | null | undefined>\n}\n\nexport const FrigadeForm: FC<FrigadeFormProps> = ({\n  flowId,\n  customStepTypes = {},\n  type = 'inline',\n  visible,\n  setVisible,\n  customVariables,\n  customFormElements,\n  onComplete,\n  appearance,\n  hideOnFlowCompletion = true,\n  onStepCompletion,\n  onButtonClick,\n  dismissible = true,\n  endFlowOnDismiss = false,\n  modalPosition = 'center',\n  repeatable = false,\n  onDismiss,\n  showPagination = false,\n  allowBackNavigation = false,\n  validationHandler,\n  showFrigadeBranding = false,\n}) => {\n  const {\n    getFlow,\n    getFlowSteps,\n    isLoading,\n    targetingLogicShouldHideFlow,\n    getFlowStatus,\n    getCurrentStepIndex,\n    markFlowCompleted,\n    markFlowNotStarted,\n  } = useFlows()\n  const selectedStep = getCurrentStepIndex(flowId)\n  const { mergeAppearanceWithDefault } = useTheme()\n  const [hasFinishedInitialLoad, setHasFinishedInitialLoad] = useState(false)\n  const { setOpenFlowState, getOpenFlowState, hasOpenModals } = useFlowOpens()\n\n  appearance = mergeAppearanceWithDefault(appearance)\n\n  const [showModal, setShowModal] =\n    visible !== undefined && setVisible !== undefined\n      ? [visible, setVisible]\n      : [getOpenFlowState(flowId, true), (value) => setOpenFlowState(flowId, value)]\n\n  useEffect(() => {\n    if (!hasFinishedInitialLoad && !isLoading) {\n      setHasFinishedInitialLoad(true)\n      if (getFlowStatus(flowId) === COMPLETED_FLOW && repeatable) {\n        markFlowNotStarted(flowId)\n      }\n      setHasFinishedInitialLoad(true)\n    }\n  }, [hasFinishedInitialLoad, setHasFinishedInitialLoad, isLoading])\n\n  if (isLoading) {\n    return null\n  }\n  const flow = getFlow(flowId)\n  if (!flow) {\n    return null\n  }\n\n  if (targetingLogicShouldHideFlow(flow)) {\n    return null\n  }\n\n  const steps = getFlowSteps(flowId)\n  if (!steps) {\n    return null\n  }\n\n  if (visible !== undefined && visible === false) {\n    return null\n  }\n\n  if (getFlowStatus(flowId) === COMPLETED_FLOW && hideOnFlowCompletion) {\n    return null\n  }\n\n  if ((type == 'modal' || type == 'corner-modal') && hasOpenModals(flowId)) {\n    return null\n  }\n\n  const handleClose = () => {\n    setShowModal(false)\n    if (onDismiss) {\n      onDismiss()\n    }\n    if (endFlowOnDismiss === true) {\n      markFlowCompleted(flowId)\n    }\n  }\n\n  if ((modalPosition == 'center' && type === 'modal') || type === 'large-modal') {\n    const overrideStyle: CSSProperties = {\n      padding: '24px',\n    }\n    if (type === 'large-modal') {\n      overrideStyle.width = '85%'\n      overrideStyle.height = '90%'\n      overrideStyle.maxHeight = '800px'\n      overrideStyle.minHeight = '500px'\n      overrideStyle.padding = '0'\n    } else {\n      overrideStyle.width = '400px'\n    }\n    return (\n      <Modal\n        appearance={appearance}\n        onClose={handleClose}\n        visible={showModal}\n        style={overrideStyle}\n        dismissible={dismissible}\n        showFrigadeBranding={showFrigadeBranding}\n      >\n        <RenderInlineStyles appearance={appearance} />\n        <FormContent\n          appearance={appearance}\n          steps={steps}\n          selectedStep={selectedStep}\n          customStepTypes={customStepTypes}\n          customVariables={customVariables}\n          onButtonClick={onButtonClick}\n          onStepCompletion={onStepCompletion}\n          flowId={flowId}\n          type={type}\n          hideOnFlowCompletion={hideOnFlowCompletion}\n          onComplete={onComplete}\n          setVisible={setVisible}\n          setShowModal={setShowModal}\n          onDismiss={onDismiss}\n          showPagination={showPagination}\n          customFormElements={customFormElements}\n          allowBackNavigation={allowBackNavigation}\n          validationHandler={validationHandler}\n        />\n      </Modal>\n    )\n  }\n\n  if (type === 'modal' && modalPosition !== 'center') {\n    return (\n      <CornerModal appearance={appearance} onClose={handleClose} visible={showModal}>\n        <RenderInlineStyles appearance={appearance} />\n        <FormContent\n          appearance={appearance}\n          steps={steps}\n          selectedStep={selectedStep}\n          customStepTypes={customStepTypes}\n          customVariables={customVariables}\n          onButtonClick={onButtonClick}\n          onStepCompletion={onStepCompletion}\n          flowId={flowId}\n          type={type}\n          hideOnFlowCompletion={hideOnFlowCompletion}\n          onComplete={onComplete}\n          setVisible={setVisible}\n          setShowModal={setShowModal}\n          onDismiss={onDismiss}\n          showPagination={showPagination}\n          customFormElements={customFormElements}\n          allowBackNavigation={allowBackNavigation}\n          validationHandler={validationHandler}\n        />\n      </CornerModal>\n    )\n  }\n\n  return (\n    <>\n      <RenderInlineStyles appearance={appearance} />\n      <FormContent\n        appearance={appearance}\n        steps={steps}\n        selectedStep={selectedStep}\n        customStepTypes={customStepTypes}\n        customVariables={customVariables}\n        onButtonClick={onButtonClick}\n        onStepCompletion={onStepCompletion}\n        flowId={flowId}\n        type={type}\n        hideOnFlowCompletion={hideOnFlowCompletion}\n        onComplete={onComplete}\n        setVisible={setVisible}\n        setShowModal={setShowModal}\n        onDismiss={onDismiss}\n        showPagination={showPagination}\n        customFormElements={customFormElements}\n        allowBackNavigation={allowBackNavigation}\n        validationHandler={validationHandler}\n      />\n    </>\n  )\n}\n\nexport default FrigadeForm\n","import React, { FC, useEffect } from 'react'\nimport styled from 'styled-components'\n\nimport { ModalBackground } from './ModalBackground'\nimport { Close } from '../Icons/Close'\nimport { getClassName, getCustomClassOverrides, styleOverridesToCSS } from '../../shared/appearance'\nimport { Appearance } from '../../types'\nimport { Portal } from 'react-portal'\nimport { PoweredByFrigade } from '../branding/PoweredByFrigade'\nimport { PoweredByFrigadeModalRibbon } from '../branding/styled'\n\nconst ModalContainer = styled.div<{ appearance; maxWidth }>`\n  ${(props) => getCustomClassOverrides(props)} {\n    // Anything inside this block will be ignored if the user provides a custom class\n    background-color: ${(props) => props.appearance?.theme?.colorBackground};\n    /* Mobile */\n    @media (max-width: 500px) {\n      width: 90%;\n      height: 90%;\n      top: 50%;\n      left: 50%;\n    }\n\n    width: ${(props) => props.width ?? '1000px'};\n    z-index: 1500;\n    border-radius: ${(props) => props.appearance?.theme?.borderRadius ?? 8}px;\n    ${(props) => styleOverridesToCSS(props)}\n  }\n\n  padding: 32px;\n\n  position: fixed;\n  left: 50%;\n  top: 50%;\n  transform: translate(-50%, -50%);\n  max-height: 90%;\n\n  display: flex;\n  flex-direction: column;\n  box-shadow: 0px 4px 12px rgba(0, 0, 0, 0.1);\n  animation-duration: 0.15s;\n  animation-timing-function: cubic-bezier(0, 0, 0.2, 1);\n  animation-name: fadeIn;\n  box-sizing: border-box;\n\n  @keyframes fadeIn {\n    0% {\n      opacity: 0;\n    }\n    100% {\n      opacity: 1;\n    }\n  }\n`\n\nconst ModalHeader = styled.div`\n  position: relative;\n  flex: 0 1 auto;\n`\n\nconst ModalClose = styled.div<{ appearance }>`\n  position: absolute;\n  top: 24px;\n  right: 24px;\n  cursor: pointer;\n  z-index: 1501;\n  ${(props) => getCustomClassOverrides(props)} {\n    // Anything inside this block will be ignored if the user provides a custom class\n    color: ${(props) => props.appearance?.theme?.colorText};\n  }\n`\n\nconst Body = styled.div`\n  overflow: scroll;\n  flex: 1 1;\n  display: flex;\n  ::-webkit-scrollbar {\n    display: none;\n  }\n`\n\ninterface ModalProps {\n  onClose: () => void\n  visible: boolean\n  headerContent?: React.ReactNode\n  children: React.ReactNode\n  style?: React.CSSProperties\n  appearance?: Appearance\n  dismissible?: boolean // defaults to true\n  showFrigadeBranding?: boolean\n}\n\nexport const Modal: FC<ModalProps> = ({\n  onClose,\n  visible,\n  headerContent = null,\n  style = null,\n  children,\n  appearance,\n  dismissible = true,\n  showFrigadeBranding = false,\n}) => {\n  // If user presses escape key, close modal\n  useEffect(() => {\n    const handleEscape = (e: KeyboardEvent) => {\n      if (e.key === 'Escape') {\n        onClose()\n      }\n    }\n    document.addEventListener('keydown', handleEscape)\n    if (visible) {\n      document.body.style.overflow = 'hidden'\n    } else {\n      document.body.style.overflow = 'unset'\n    }\n\n    return () => {\n      document.body.style.overflow = 'unset'\n      document.removeEventListener('keydown', handleEscape)\n    }\n  }, [onClose, visible])\n\n  if (!visible) return <></>\n\n  return (\n    <Portal>\n      <ModalBackground\n        appearance={appearance}\n        onClose={() => {\n          if (dismissible) {\n            onClose()\n          }\n        }}\n      />\n      <ModalContainer\n        appearance={appearance}\n        className={getClassName('modalContainer', appearance)}\n        styleOverrides={style}\n      >\n        {dismissible && (\n          <ModalClose\n            className={getClassName('modalClose', appearance)}\n            onClick={() => onClose()}\n            appearance={appearance}\n          >\n            <Close />\n          </ModalClose>\n        )}\n        {headerContent && <ModalHeader>{headerContent}</ModalHeader>}\n        <Body>{children}</Body>\n\n        {showFrigadeBranding && (\n          <PoweredByFrigadeModalRibbon\n            appearance={appearance}\n            className={getClassName('poweredByFrigadeRibbon', appearance)}\n          >\n            <PoweredByFrigade appearance={appearance} />\n          </PoweredByFrigadeModalRibbon>\n        )}\n      </ModalContainer>\n    </Portal>\n  )\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport { getClassName, getCustomClassOverrides } from '../../shared/appearance'\n\nconst Background = styled.div`\n  display: flex;\n  justify-content: center;\n  position: fixed;\n  top: 0;\n  left: 0;\n  bottom: 0;\n  right: 0;\n  ${(props) => getCustomClassOverrides(props)} {\n    background-color: rgba(0, 0, 0, 0.6);\n    z-index: 1400;\n  }\n  animation-duration: 0.15s;\n  animation-timing-function: cubic-bezier(0, 0, 0.2, 1);\n  animation-name: fadeIn;\n\n  @keyframes fadeIn {\n    0% {\n      opacity: 0;\n    }\n    100% {\n      opacity: 1;\n    }\n  }\n`\n\nexport const ModalBackground = ({ onClose, appearance }) => {\n  return (\n    <Background\n      className={getClassName('modalBackground', appearance)}\n      onClick={() => onClose()}\n    ></Background>\n  )\n}\n","import { Appearance } from '../types'\n\nexport const CSS_CLASS_PREFIX = 'fr-'\nexport const CUSTOM_CSS_STYLES_PREFIX = 'cfr-'\nconst defaultClass = '.fr-element'\n\nexport function getClassName(className: string, appearance?: Appearance) {\n  const defaultClass = `${CSS_CLASS_PREFIX}${className}`\n  if (!appearance) {\n    return defaultClass\n  }\n\n  if (appearance.styleOverrides && appearance.styleOverrides[className]) {\n    if (typeof appearance.styleOverrides[className] === 'string') {\n      // It's a class name\n      return defaultClass + ' ' + appearance.styleOverrides[className]\n    } else if (typeof appearance.styleOverrides[className] === 'object') {\n      // It's a style object\n      return defaultClass + ' ' + CUSTOM_CSS_STYLES_PREFIX + className\n    }\n  }\n\n  return defaultClass\n}\n\nexport function getCustomClassOverrides(props: any) {\n  if (!props.className) {\n    return ''\n  }\n  if (props.className.indexOf(CUSTOM_CSS_STYLES_PREFIX) !== -1) {\n    return ''\n  }\n\n  // Remove any extra spaces from props.customClasses. Only allow one space per class.\n  const customClasses = props.className.replace(/\\s+/g, ' ')\n  const customClassesArray = customClasses.split(' ')\n  if (customClassesArray.length == 1 && customClassesArray[0].startsWith(CSS_CLASS_PREFIX)) {\n    return ''\n  }\n  return `:not(${customClassesArray\n    .map((className: string) => {\n      return `.${className}`\n    })\n    .join(', ')})`\n}\n\nexport function toKebabKey(key: string) {\n  return key.replace(/([a-z0-9]|(?=[A-Z]))([A-Z])/g, '$1-$2').toLowerCase()\n}\n\nexport function styleOverridesToCSS(props: any) {\n  return props?.styleOverrides\n    ? Object.keys(props.styleOverrides)\n        .map((key) => `${toKebabKey(key)}: ${props.styleOverrides[key]};`)\n        .join(' ')\n    : ''\n}\n\nexport function mergeClasses(...classes: string[]) {\n  return classes.filter(Boolean).join(' ')\n}\n\nexport function ucFirst(str: string) {\n  return str.charAt(0).toUpperCase() + str.slice(1)\n}\n","import React from 'react'\nimport styled from 'styled-components'\n\nconst CloseContainer = styled.div`\n  :hover {\n    opacity: 0.8;\n  }\n`\n\nexport const Close = () => (\n  <CloseContainer>\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" fill=\"none\" viewBox=\"0 0 20 20\">\n      <path\n        stroke=\"currentColor\"\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n        strokeWidth=\"1.5\"\n        d=\"M5 15L15 5M5 5l10 10\"\n      ></path>\n    </svg>\n  </CloseContainer>\n)\n","import React from 'react'\nimport FrigadeLogo from '../Icons/FrigadeLogo'\nimport { Appearance } from '../../types'\nimport { PoweredByFrigadeContainer } from './styled'\nimport { getClassName } from '../../shared/appearance'\n\nexport function PoweredByFrigade({ appearance }: { appearance: Appearance }) {\n  return (\n    <PoweredByFrigadeContainer\n      className={getClassName('poweredByFrigadeContainer', appearance)}\n      appearance={appearance}\n    >\n      Powered by &nbsp;\n      <FrigadeLogo />\n    </PoweredByFrigadeContainer>\n  )\n}\n","import React, { CSSProperties } from 'react'\n\nfunction FrigadeLogo({ style, className }: { style?: CSSProperties; className?: string }) {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width=\"54\"\n      height=\"14\"\n      fill=\"none\"\n      viewBox=\"0 0 54 14\"\n      style={style}\n      className={className}\n    >\n      <path\n        fill=\"currentColor\"\n        d=\"M16.293 3.476v1.036h1.593v1.256h-1.593v5.098h-1.41V5.768H14V4.512h.883V3.244c0-.67.294-1.744 1.777-1.744.515 0 .969.049 1.361.146l-.233 1.232a5.939 5.939 0 00-.833-.073c-.442 0-.662.22-.662.67zm6.534.975V5.83c-.846 0-1.63.159-2.342.476v4.56h-1.41V4.513h1.263l.086.61c.846-.451 1.655-.67 2.403-.67zm2.505-.951c-.331.33-.944.33-1.287 0a.93.93 0 01-.246-.659c0-.268.086-.487.246-.646.343-.33.956-.33 1.287 0 .343.33.343.964 0 1.305zm.061 7.366h-1.41V4.512h1.41v6.354zm6.928-5.756c.246.146.368.402.368.756v4.976c0 1.804-.858 2.658-2.672 2.658-.92 0-1.753-.146-2.514-.439l.417-1.073c.674.22 1.336.33 1.974.33.98 0 1.385-.379 1.385-1.403v-.171c-.588.134-1.09.207-1.52.207-.907 0-1.655-.305-2.231-.902-.576-.598-.87-1.39-.87-2.354 0-.963.294-1.756.87-2.354.576-.61 1.324-.914 2.231-.914 1.005 0 1.864.232 2.562.683zm-2.488 4.634a5.15 5.15 0 001.446-.22V5.951a3.695 3.695 0 00-1.446-.292c-1.08 0-1.778.841-1.778 2.048 0 1.22.699 2.037 1.778 2.037zm7.34-5.317c1.52 0 2.28.878 2.28 2.634v3.805h-1.275l-.073-.524c-.601.414-1.288.621-2.084.621-1.263 0-2.06-.658-2.06-1.731 0-1.269 1.25-2.025 3.408-2.025.135 0 .503.013.662.013v-.171c0-1.012-.343-1.451-1.115-1.451-.675 0-1.435.158-2.256.475l-.466-1.012c1.017-.427 2.01-.634 2.979-.634zm-1.839 4.756c0 .427.343.695 1.017.695.528 0 1.251-.22 1.68-.512V8.22h-.441c-1.508 0-2.256.317-2.256.963zm9.953-4.549v-2.83h1.41v7.72c0 .354-.123.598-.368.757-.71.45-1.57.67-2.562.67-.907 0-1.655-.305-2.231-.902-.577-.61-.87-1.39-.87-2.354 0-.963.293-1.756.87-2.354.576-.61 1.324-.914 2.23-.914.43 0 .933.073 1.521.207zM43.84 9.72c.503 0 .981-.098 1.447-.293V5.854a5.15 5.15 0 00-1.447-.22c-1.078 0-1.777.817-1.777 2.037s.699 2.049 1.777 2.049zM54 7.866v.439h-4.573c.184.963.858 1.512 1.827 1.512.613 0 1.275-.146 1.986-.451l.466 1.024c-.87.378-1.729.573-2.575.573-.931 0-1.692-.304-2.268-.902-.576-.61-.87-1.402-.87-2.366 0-.975.294-1.768.87-2.366.576-.597 1.324-.902 2.244-.902.968 0 1.691.33 2.17.975.478.647.723 1.464.723 2.464zm-4.61-.586h3.298c-.086-1.073-.613-1.731-1.581-1.731-.969 0-1.582.695-1.717 1.731z\"\n      ></path>\n      <path\n        fill=\"currentColor\"\n        fillRule=\"evenodd\"\n        d=\"M1.196 1.229A4.009 4.009 0 014.08 0l4.092.027C9.183.027 10 .867 10 1.904c0 .6-.273 1.133-.7 1.478-.31.25-.7.399-1.126.4h-.001l-4.09-.027h-.002a4.804 4.804 0 00-2.614.77A4.986 4.986 0 000 5.974v-1.78C0 3.036.456 1.988 1.196 1.23zm4.525 4.65a4.282 4.282 0 00-1.184 2.513l3.637.023c.131 0 .259-.015.382-.042h.002c.81-.178 1.42-.908 1.44-1.788v-.046a1.9 1.9 0 00-.533-1.328 1.813 1.813 0 00-.908-.508h-.002l-.002-.001a1.68 1.68 0 00-.366-.042A4.084 4.084 0 005.72 5.88zm-4.525-.016A4.235 4.235 0 000 8.829C0 10.997 1.601 12.78 3.654 13V9.265h-.005l.005-.439v-.437h.023a5.175 5.175 0 011.439-3.13 5.05 5.05 0 01.72-.614l-1.754-.011H4.08c-.787 0-1.521.229-2.144.625a4.11 4.11 0 00-.74.603z\"\n        clipRule=\"evenodd\"\n      ></path>\n    </svg>\n  )\n}\n\nexport default FrigadeLogo\n","import styled from 'styled-components'\nimport { TooltipContainer } from '../Tooltips/styled'\n\nexport const PoweredByFrigadeModalRibbon = styled.div`\n  background-color: ${(props) => props.appearance?.theme.colorBackground};\n  position: absolute;\n  bottom: -47px;\n  left: 0;\n  width: 100%;\n  height: 40px;\n  display: inline-flex;\n  align-items: center;\n  justify-content: center;\n  border-radius: ${(props) => props.appearance?.theme.borderRadius}px;\n`\n\nexport const PoweredByFrigadeTooltipRibbon = styled(TooltipContainer)`\n  background-color: ${(props) => props.appearance?.theme.colorBackground};\n  position: absolute;\n  bottom: -60px;\n  left: 0;\n  width: 100%;\n  height: 40px;\n  display: inline-flex;\n  align-items: center;\n  justify-content: center;\n  border-radius: ${(props) => props.appearance?.theme.borderRadius}px;\n  padding: 0;\n  z-index: ${(props) => props.zIndex};\n`\n\nexport const PoweredByFrigadeContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  font-style: normal;\n  font-weight: 500;\n  font-size: 12px;\n  line-height: 18px;\n  color: ${(props) => props.appearance?.theme?.colorTextSecondary};\n`\n","import styled from 'styled-components'\nimport { Appearance } from '../../types'\nimport { getCustomClassOverrides } from '../../shared/appearance'\n\nexport const TooltipContainer = styled.div<{ maxWidth: number; appearance: Appearance }>`\n  ${(props) => getCustomClassOverrides(props)} {\n    background: ${(props) => props.appearance.theme.colorBackground};\n  }\n\n  box-shadow: 0px 6px 25px rgba(0, 0, 0, 0.06);\n  border-radius: ${(props) => props.appearance.theme.borderRadius}px;\n  max-width: ${(props) => props.maxWidth}px;\n  min-width: 300px;\n  padding: 22px 22px 12px;\n  z-index: ${(props) => props.zIndex};\n`\n\nexport const TooltipDismissContainer = styled.div`\n  display: block;\n  cursor: pointer;\n  position: absolute;\n  top: 12px;\n  right: 12px;\n`\n\nexport const TooltipImageContainer = styled.img`\n  ${(props) => getCustomClassOverrides(props)} {\n    display: block;\n    width: 100%;\n    height: auto;\n    min-height: 200px;\n    margin-top: ${(props) => (props.dismissible ? '24px' : '0px')};\n    margin-bottom: 16px;\n  }\n`\n\nexport const TooltipVideoContainer = styled.div`\n  ${(props) => getCustomClassOverrides(props)} {\n    display: block;\n    width: 100%;\n    height: auto;\n    margin-top: ${(props) => (props.dismissible ? '24px' : '0px')};\n    margin-bottom: 16px;\n  }\n`\n\nexport const TooltipFooter = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  align-content: center;\n`\n\nexport const TooltipStepCountContainer = styled.div`\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n  justify-content: center;\n`\n\nexport const TooltipCTAContainer = styled.div`\n  display: flex;\n  flex: 2;\n  flex-shrink: 1;\n  gap: 8px;\n  height: 64px;\n  ${(props) => getCustomClassOverrides(props)} {\n    flex-direction: row;\n    justify-content: ${(props) => (props.showStepCount ? 'flex-end' : 'flex-start')};\n    align-content: center;\n    align-items: center;\n  }\n`\n\nexport const TooltipStepCounter = styled.p`\n  ${(props) => getCustomClassOverrides(props)} {\n    font-style: normal;\n    font-weight: 600;\n    font-size: 15px;\n    line-height: 22px;\n    color: #808080;\n  }\n  margin: 0;\n`\n","import React, { FC, useEffect } from 'react'\nimport styled from 'styled-components'\nimport { Portal } from 'react-portal'\nimport { Appearance } from '../../types'\nimport { getClassName, getCustomClassOverrides } from '../../shared/appearance'\nimport { Close } from '../Icons/Close'\n\nconst CornerModalContainer = styled.div`\n  ${(props) => getCustomClassOverrides(props)} {\n    // Anything inside this block will be ignored if the user provides a custom class\n    background: ${(props) => props.appearance?.theme?.colorBackground};\n    position: fixed;\n    display: flex;\n    flex-direction: column;\n    align-items: flex-end;\n    z-index: 1500;\n    box-shadow: 0px 4px 12px rgba(0, 0, 0, 0.1);\n    border-radius: 12px;\n    width: 350px;\n    padding: 24px;\n  }\n  right: 0;\n  bottom: 0;\n  margin-right: 28px;\n  margin-bottom: 28px;\n`\n\nconst CornerModalHeader = styled.div`\n  position: relative;\n  flex: 1;\n`\n\nconst CornerModalClose = styled.div`\n  position: absolute;\n  top: 24px;\n  right: 24px;\n  cursor: pointer;\n  z-index: 1501;\n  ${(props) => getCustomClassOverrides(props)} {\n    // Anything inside this block will be ignored if the user provides a custom class\n    color: ${(props) => props.appearance?.theme?.colorText};\n  }\n`\n\nconst Body = styled.div`\n  overflow: scroll;\n  flex: 5;\n  ::-webkit-scrollbar {\n    display: none;\n  }\n`\n\ninterface CornerModalProps {\n  onClose: () => void\n  visible: boolean\n  headerContent?: React.ReactNode\n  children: React.ReactNode\n  style?: React.CSSProperties\n  appearance?: Appearance\n}\n\nexport const CornerModal: FC<CornerModalProps> = ({\n  onClose,\n  visible,\n  headerContent = null,\n  children,\n  appearance,\n}) => {\n  // If user presses escape key, close cornerModal\n  useEffect(() => {\n    const handleEscape = (e: KeyboardEvent) => {\n      if (e.key === 'Escape') {\n        onClose()\n      }\n    }\n    document.addEventListener('keydown', handleEscape)\n    if (visible) {\n      document.body.style.overflow = 'hidden'\n    } else {\n      document.body.style.overflow = 'unset'\n    }\n\n    return () => {\n      document.body.style.overflow = 'unset'\n      document.removeEventListener('keydown', handleEscape)\n    }\n  }, [onClose, visible])\n\n  if (!visible) return <></>\n\n  return (\n    <Portal>\n      <CornerModalContainer\n        appearance={appearance}\n        className={getClassName('cornerModalContainer', appearance)}\n      >\n        <CornerModalClose\n          className={getClassName('cornerModalClose', appearance)}\n          onClick={() => onClose()}\n        >\n          <Close />\n        </CornerModalClose>\n        {headerContent && <CornerModalHeader>{headerContent}</CornerModalHeader>}\n        <Body>{children}</Body>\n      </CornerModalContainer>\n    </Portal>\n  )\n}\n","import { useContext } from 'react'\nimport { FrigadeContext } from '../FrigadeProvider'\nimport { Appearance } from '../types'\n\nexport function useTheme() {\n  const { defaultAppearance } = useContext(FrigadeContext)\n\n  function mergeAppearanceWithDefault(appearance?: Appearance): Appearance {\n    const _appearance = JSON.parse(JSON.stringify(defaultAppearance))\n\n    if (!appearance) {\n      return _appearance\n    }\n\n    return {\n      styleOverrides: Object.assign(\n        _appearance.styleOverrides ?? {},\n        appearance.styleOverrides ?? {}\n      ),\n      theme: Object.assign(_appearance.theme, appearance.theme ?? {}),\n    }\n  }\n\n  return { mergeAppearanceWithDefault }\n}\n","import React, { useContext, useEffect, useState } from 'react'\nimport styled from 'styled-components'\nimport {\n  CustomFormTypeProps,\n  FormInputProps,\n  FormInputType,\n  FormValidationError,\n} from '../../../FrigadeForm/types'\nimport { TextField } from './form-components/TextField'\nimport { MultipleChoice } from './form-components/MultipleChoice'\nimport { MultipleChoiceList } from './form-components/MultipleChoiceList'\nimport { TitleSubtitle } from '../../TitleSubtitle/TitleSubtitle'\nimport { getClassName } from '../../../shared/appearance'\nimport { useUser } from '../../../api/users'\nimport { Warning } from '../../Icons/Warning'\nimport { AnimatePresence, motion } from 'framer-motion'\nimport { FrigadeContext } from '../../../FrigadeProvider'\n\ninterface MultiInputStepProps {\n  data?: FormInputType[]\n}\n\nconst MultiInputContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-end;\n  padding-bottom: 14px;\n  overflow: visible;\n`\n\nconst MultiInputValidationError = styled(motion.div)`\n  color: ${(props) => props.appearance?.theme?.colorTextError};\n  font-size: 12px;\n  margin-bottom: 12px;\n  display: flex;\n  align-items: center;\n`\n\nconst MultiInputValidationErrorIcon = styled.div`\n  margin-right: 4px;\n  display: inline-flex;\n`\n\nconst MultiInput = styled.div`\n  padding-left: 1px;\n  padding-right: 1px;\n`\n\nconst DEFAULT_INPUT_TYPES: { [key: string]: (params: FormInputProps) => React.ReactNode } = {\n  text: TextField,\n  multipleChoice: MultipleChoice,\n  multipleChoiceList: MultipleChoiceList,\n}\n\nexport function MultiInputStepType({\n  flowId,\n  stepData,\n  canContinue,\n  setCanContinue,\n  onSaveData,\n  appearance,\n  customFormElements,\n}: CustomFormTypeProps) {\n  const formElements = stepData.props as MultiInputStepProps\n  // Create map storing data from individual stepids\n  // use state\n\n  const [formValidationErrors, setFormValidationErrors] = useState<FormValidationError[]>([])\n  // Create map of inputs that have been touched as to not show error messages until they have been touched\n  const [touchedInputs, setTouchedInputs] = useState<string[]>([])\n  const { userId } = useUser()\n  const [allFormData, setAllFormData] = useState(loadFromLocalStorage() || {})\n  const { readonly } = useContext(FrigadeContext)\n\n  // Merge DEFAULT_INPUT_TYPES and customFormElements\n  const mergedInputTypes = { ...DEFAULT_INPUT_TYPES, ...customFormElements }\n\n  useEffect(() => {\n    setCanContinue(formValidationErrors.length === 0)\n  }, [formValidationErrors, setCanContinue])\n\n  function saveDataFromInputs(input: FormInputType, data: object) {\n    const newData = { ...allFormData, [input.id]: data }\n    setAllFormData(newData)\n    onSaveData(newData)\n\n    if (window && window.localStorage && !readonly) {\n      window.localStorage.setItem(getLocalStorageKey(), JSON.stringify(newData))\n    }\n  }\n\n  function loadFromLocalStorage() {\n    if (window && window.localStorage) {\n      const data = window.localStorage.getItem(getLocalStorageKey())\n      if (data) {\n        return JSON.parse(data)\n      }\n    }\n    return {}\n  }\n\n  function getLocalStorageKey() {\n    return `frigade-multiInputStepTypeData-${flowId}-${stepData.id}-${userId}`\n  }\n\n  return (\n    <MultiInput className={getClassName('multiInput', appearance)}>\n      <TitleSubtitle appearance={appearance} title={stepData.title} subtitle={stepData.subtitle} />\n      <MultiInputContainer className={getClassName('multiInputContainer', appearance)}>\n        {formElements.data?.map((input: FormInputType) => {\n          const err = formValidationErrors.reverse().find((error) => error.id === input.id)?.message\n          return mergedInputTypes[input.type] ? (\n            <span\n              key={input.id}\n              data-field-id={input.id}\n              className={getClassName('multiInputField', appearance)}\n            >\n              {mergedInputTypes[input.type]({\n                formInput: input,\n                customFormTypeProps: {\n                  flowId,\n                  stepData,\n                  canContinue,\n                  setCanContinue,\n                  onSaveData,\n                  appearance,\n                },\n                onSaveInputData: (data) => {\n                  if (\n                    !touchedInputs.includes(input.id) &&\n                    // Ensure not empty string\n                    data &&\n                    data?.text !== ''\n                  ) {\n                    setTouchedInputs((prev) => [...prev, input.id])\n                  }\n                  saveDataFromInputs(input, data)\n                },\n                inputData: allFormData[input.id],\n                setFormValidationErrors: (errors) => {\n                  setFormValidationErrors((prev) => {\n                    if (errors.length === 0) {\n                      return prev.filter((error) => error.id !== input.id)\n                    }\n                    return [...prev, ...errors]\n                  })\n                },\n              })}\n              <AnimatePresence>\n                {err && touchedInputs.includes(input.id) && (\n                  <MultiInputValidationError\n                    initial={{ opacity: 0, height: 0, marginBottom: 0 }}\n                    animate={{ opacity: 1, height: 'auto', marginBottom: 12 }}\n                    exit={{ opacity: 0, height: 0, marginBottom: 0 }}\n                    key={input.id}\n                    style={{ overflow: 'hidden' }}\n                    transition={{ duration: 0.1, ease: 'easeInOut', delay: 0.5 }}\n                    appearance={appearance}\n                    className={getClassName('multiInputValidationError', appearance)}\n                  >\n                    <MultiInputValidationErrorIcon\n                      appearance={appearance}\n                      className={getClassName('multiInputValidationErrorIcon', appearance)}\n                    >\n                      <Warning />\n                    </MultiInputValidationErrorIcon>\n                    {err}\n                  </MultiInputValidationError>\n                )}\n              </AnimatePresence>\n            </span>\n          ) : null\n        })}\n      </MultiInputContainer>\n    </MultiInput>\n  )\n}\n","import React, { useEffect, useState } from 'react'\n\nimport styled from 'styled-components'\nimport { FormInputProps, FormInputType } from '../../../../../FrigadeForm/types'\nimport { getClassName, getCustomClassOverrides } from '../../../../../shared/appearance'\nimport { Label } from '../shared/Label'\nimport { SubLabel } from '../shared/SubLabel'\nimport { getErrorsFromValidationResult } from '../shared/validation'\n\ninterface TextFieldProps extends FormInputType {\n  id: string\n  title?: string\n  placeholder?: string\n  multiline?: boolean\n}\n\nconst TextInputWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n`\n\nexport const TextInput = styled.input`\n  ${(props) => getCustomClassOverrides(props)} {\n    // Anything inside this block will be ignored if the user provides a custom class\n    border: 1px solid ${(props) => props.appearance?.theme?.colorBorder};\n    font-size: 14px;\n    ::placeholder {\n      color: ${(props) => props.appearance?.theme?.colorTextDisabled};\n      font-size: 14px;\n    }\n    border-radius: 6px;\n  }\n  width: 100%;\n  height: 40px;\n  box-sizing: border-box;\n  padding: 0 10px;\n  margin-bottom: 10px;\n`\nconst TextArea = styled.textarea`\n  ${(props) => getCustomClassOverrides(props)} {\n    // Anything inside this block will be ignored if the user provides a custom class\n    border: 1px solid ${(props) => props.appearance?.theme?.colorBorder};\n    font-size: 14px;\n    padding: 10px;\n    ::placeholder {\n      color: #c7c7c7;\n      font-size: 14px;\n    }\n    border-radius: 6px;\n  }\n  width: 100%;\n  min-height: 70px;\n  box-sizing: border-box;\n  margin-bottom: 10px;\n`\n\nexport function TextField({\n  formInput,\n  customFormTypeProps,\n  onSaveInputData,\n  setFormValidationErrors,\n  inputData,\n}: FormInputProps) {\n  const input = formInput as TextFieldProps\n  const [data, setData] = useState(inputData?.text || '')\n  const [hasLoaded, setHasLoaded] = useState(false)\n  let InputComponent = TextInput\n  useEffect(() => {\n    if (data === '' && !hasLoaded) {\n      setHasLoaded(true)\n      handleDataChange('')\n    }\n  }, [])\n\n  function handleDataChange(value: string) {\n    setData(value)\n    onSaveInputData({ text: value })\n    if (input.required === true && value.trim() === '') {\n      setFormValidationErrors([\n        {\n          id: input.id,\n          message: `${input.title ?? `Field`} is required`,\n        },\n      ])\n      return\n    }\n    const validationError = getErrorsFromValidationResult(value, input.validation)\n    if (validationError) {\n      setFormValidationErrors([\n        {\n          id: input.id,\n          message: validationError,\n        },\n      ])\n      return\n    }\n    setFormValidationErrors([])\n  }\n\n  if (input.multiline) {\n    InputComponent = TextArea\n  }\n\n  function getType() {\n    switch (input?.validation?.type) {\n      case 'email':\n        return 'email'\n      case 'number':\n        return 'number'\n      case 'password':\n        return 'password'\n    }\n\n    return null\n  }\n\n  return (\n    <TextInputWrapper>\n      <Label\n        title={input.title}\n        required={input.required}\n        appearance={customFormTypeProps.appearance}\n      />\n      <InputComponent\n        className={getClassName('inputComponent', customFormTypeProps.appearance)}\n        value={data}\n        onChange={(e) => {\n          handleDataChange(e.target.value)\n        }}\n        appearance={customFormTypeProps.appearance}\n        placeholder={input.placeholder}\n        type={getType()}\n      ></InputComponent>\n      <SubLabel title={input.subtitle} appearance={customFormTypeProps.appearance} />\n    </TextInputWrapper>\n  )\n}\n","import styled from 'styled-components'\nimport { getCustomClassOverrides } from '../../../../../shared/appearance'\n\nexport const FormLabel = styled.label`\n  ${(props) => getCustomClassOverrides(props)} {\n    font-size: 14px;\n    line-height: 20px;\n    margin-bottom: 5px;\n    margin-top: 10px;\n  }\n  display: flex;\n`\n\nexport const FormSubLabel = styled.label`\n  ${(props) => getCustomClassOverrides(props)} {\n    font-size: 12px;\n    line-height: 20px;\n    margin-bottom: 5px;\n  }\n  display: flex;\n`\n\nexport const RequiredSymbol = styled.span`\n  font-weight: 400;\n  font-size: 14px;\n  line-height: 22px;\n  color: ${(props) => props.appearance?.theme?.colorTextError};\n  display: flex;\n  margin-right: 5px;\n  margin-top: 10px;\n`\n\nexport const LabelWrapper = styled.div`\n  display: flex;\n  align-items: flex-start;\n  justify-content: left;\n  margin-bottom: 10px;\n`\n","import { FormLabel, LabelWrapper, RequiredSymbol } from './styled'\nimport { getClassName } from '../../../../../shared/appearance'\nimport React from 'react'\nimport { Appearance, DefaultAppearance } from '../../../../../types'\n\nexport function Label({\n  title,\n  required,\n  appearance = DefaultAppearance,\n}: {\n  title?: string\n  required: boolean\n  appearance?: Appearance\n}) {\n  if (!title) {\n    return null\n  }\n\n  return (\n    <LabelWrapper>\n      {required ? (\n        <RequiredSymbol\n          className={getClassName('formLabelRequired', appearance)}\n          appearance={appearance}\n        >\n          *\n        </RequiredSymbol>\n      ) : null}\n      <FormLabel className={getClassName('formLabel', appearance)}>{title}</FormLabel>\n    </LabelWrapper>\n  )\n}\n","import React, { CSSProperties } from 'react'\n\nexport interface StepData {\n  /**\n   * Unique identifier for the step.\n   */\n  id: string\n  /**\n   * Name of the step when shown in a list view\n   */\n  stepName?: string\n  /**\n   * Title of the step\n   */\n  title?: string\n  /**\n   * Subtitle of the step\n   */\n  subtitle?: string\n  /**\n   * Primary button title. If omitted, the primary button will not be shown.\n   */\n  primaryButtonTitle?: string\n  /**\n   * Primary button URI.\n   */\n  primaryButtonUri?: string\n  /**\n   * Primary button URI target (either _blank or _self)\n   */\n  primaryButtonUriTarget?: string\n  /**\n   * Secondary button title. If omitted, the secondary button will not be shown.\n   */\n  secondaryButtonTitle?: string\n  /**\n   * Secondary button URI.\n   */\n  secondaryButtonUri?: string\n  /**\n   * Secondary button URI target (either _blank or _self)\n   */\n  secondaryButtonUriTarget?: string\n  /**\n   * Text on button if a back button is present\n   */\n  backButtonTitle?: string\n  /**\n   * If true, the step will be marked as completed when the secondary button is clicked.\n   */\n  skippable?: boolean\n  /**\n   * @deprecated use primaryButtonUri instead\n   */\n  url?: string\n  /**\n   * @deprecated use primaryButtonUriTarget instead\n   */\n  urlTarget?: string\n  type?: string\n  /**\n   * Video url to be shown for components supporting video.\n   */\n  videoUri?: string\n  /**\n   * Image url to be shown for components supporting image.\n   */\n  imageUri?: string | null\n  /**\n   * Automatically mark the step as completed when the primary button is clicked. Default is false.\n   */\n  autoMarkCompleted?: boolean\n  complete: boolean\n  /**\n   * Whether the step is blocked (can't be accessed yet)\n   */\n  blocked?: boolean\n  /**\n   * Whether the step is hidden (not shown in the list view)\n   */\n  hidden?: boolean\n  StepContent?: React.ReactNode\n  /**\n   * Handler for when the primary button is clicked.\n   */\n  handlePrimaryButtonClick?: () => void\n  /**\n   * Handler for when the secondary button is clicked.\n   */\n  handleSecondaryButtonClick?: () => void\n  ctaActionType?: 'complete'\n  imageStyle?: CSSProperties\n  props?: any\n  /**\n   * Criteria that needs to be met for the step to complete\n   */\n  completionCriteria?: string\n  /**\n   * Criteria that needs to be met for the step to start\n   */\n  startCriteria?: string\n  progress?: number\n  /**\n   * Whether the step is dismissible (for instance, tooltips or other non-essential steps)\n   */\n  dismissible?: boolean\n  /**\n   * Whether to show a highlight in the page where the step is shown. Typically used in tooltips for creating small pings.\n   */\n  showHighlight?: boolean\n}\n\nexport interface DefaultFrigadeFlowProps {\n  flowId: string\n  style?: CSSProperties\n  className?: string\n  /**\n   * The appearance of the flow. See https://docs.frigade.com/sdk/styling\n   */\n  appearance?: Appearance\n  /**\n   * Dynamic variables to use in flow-data.yml. See https://docs.frigade.com/flows/dynamic-variables\n   */\n  customVariables?: { [key: string]: string | number | boolean }\n  hideOnFlowCompletion?: boolean\n  /**\n   * Handler for when a step is completed.\n   * @param step\n   * @param index\n   * @param nextStep\n   * @param allFormData All form data collected so far (only applicable to FrigadeForms)\n   * @param stepSpecificFormData Form data collected for the finished step (only applicable to FrigadeForms)\n   */\n  onStepCompletion?: (\n    step: StepData,\n    index: number,\n    nextStep?: StepData,\n    allFormData?: any,\n    stepSpecificFormData?: any\n  ) => boolean\n  /**\n   * Handler for when a primary or secondary CTA is clicked (regardless if step is completed or not).\n   * Return true if your app performs an action (e.g. open other modal or page transition).\n   * @param step\n   * @param index\n   * @param cta\n   */\n  onButtonClick?: (\n    step: StepData,\n    index?: number,\n    cta?: 'primary' | 'secondary' | 'link',\n    nextStep?: StepData\n  ) => boolean\n\n  onDismiss?: () => void\n  onComplete?: () => void\n}\n\nexport interface Appearance {\n  /**\n   * Overrides of individual components and classes.\n   * This map can either be className(s) or CSSProperties.\n   */\n  styleOverrides?: {\n    [key: string]: CSSProperties | string\n  }\n  /**\n   * The base theme to use with Frigade components.\n   */\n  theme?: BaseTheme\n}\n\nexport interface BaseTheme {\n  /**\n   * The base theme color used on CTAs and other primary elements.\n   */\n  colorPrimary?: string\n  /**\n   * Secondary color, used for CTAs and other secondary elements.\n   */\n  colorSecondary?: string\n\n  colorBackground?: string\n  colorBackgroundSecondary?: string\n  colorText?: string\n  colorTextOnPrimaryBackground?: string\n  colorTextSecondary?: string\n  colorTextDisabled?: string\n  colorTextError?: string\n  colorBorder?: string\n  fontSize?: string | number\n  fontSmoothing?: string\n  fontWeight?: string | number\n  borderRadius?: number\n  modalContainer?: CSSProperties\n}\n\nexport const DefaultAppearance: Appearance = {\n  theme: {\n    colorPrimary: '#000000',\n    colorText: '#000000',\n    colorBackground: '#ffffff',\n    colorBackgroundSecondary: '#d2d2d2',\n    colorTextOnPrimaryBackground: '#ffffff',\n    colorTextSecondary: '#505050',\n    colorTextDisabled: '#C7C7C7',\n    colorBorder: '#E5E5E5',\n    colorTextError: '#c00000',\n    borderRadius: 20,\n  },\n}\n","import { FormSubLabel, LabelWrapper } from './styled'\nimport { getClassName } from '../../../../../shared/appearance'\nimport React from 'react'\nimport { Appearance } from '../../../../../types'\n\nexport function SubLabel({ title, appearance }: { title?: string; appearance: Appearance }) {\n  if (!title) {\n    return null\n  }\n\n  return (\n    <LabelWrapper>\n      <FormSubLabel className={getClassName('formSubLabel', appearance)}>{title}</FormSubLabel>\n    </LabelWrapper>\n  )\n}\n","import { InputValidation } from '../../../../../FrigadeForm/types'\nimport { z } from 'zod'\n\nexport function getErrorsFromValidationResult(\n  value?: string,\n  validation?: InputValidation\n): string | null {\n  try {\n    if (validation) {\n      if (validation.type == 'number') {\n        let validator = z.number()\n        if (validation.props) {\n          for (const validationProp of validation.props) {\n            if (validationProp.requirement == 'min') {\n              validator = validator.min(\n                Number(validationProp.value),\n                validationProp.message ?? 'Value is too small'\n              )\n            } else if (validationProp.requirement == 'max') {\n              validator = validator.max(\n                Number(validationProp.value),\n                validationProp.message ?? 'Value is too large'\n              )\n            } else if (validationProp.requirement == 'positive') {\n              validator = validator.positive(validationProp.message ?? 'Value must be positive')\n            } else if (validationProp.requirement == 'negative') {\n              validator = validator.nonpositive(validationProp.message ?? 'Value must be negative')\n            }\n          }\n        }\n        validator.parse(Number(value))\n      }\n      if (validation.type == 'string') {\n        let validator = z.string()\n        if (validation.props) {\n          for (const validationProp of validation.props) {\n            if (validationProp.requirement == 'min') {\n              validator = validator.min(\n                Number(validationProp.value),\n                validationProp.message ?? 'Value is too short'\n              )\n            } else if (validationProp.requirement == 'max') {\n              validator = validator.max(\n                Number(validationProp.value),\n                validationProp.message ?? 'Value is too long'\n              )\n            } else if (validationProp.requirement == 'regex') {\n              validator = validator.regex(\n                new RegExp(String(validationProp.value)),\n                validationProp.message ?? 'Value does not match requirements'\n              )\n            }\n          }\n        }\n        validator.parse(value)\n      }\n\n      return\n    }\n  } catch (e) {\n    if (e instanceof z.ZodError) {\n      if (e.issues && e.issues.length > 0) {\n        return e.issues[0].message\n      }\n      return null\n    }\n    console.error('Frigade Form validation failed for rule ', validation, e)\n  }\n\n  return null\n}\n","import React, { useEffect, useState } from 'react'\n\nimport styled from 'styled-components'\nimport { FormInputProps, FormInputType } from '../../../../../FrigadeForm/types'\nimport { getClassName, getCustomClassOverrides } from '../../../../../shared/appearance'\nimport { Label } from '../shared/Label'\nimport { TextInput } from '../TextField'\nimport { SubLabel } from '../shared/SubLabel'\n\nconst NULL_VALUE = ''\n\ninterface MultipleChoiceProps extends FormInputType {\n  id: string\n  title?: string\n  placeholder?: string\n  defaultValue?: string\n  requireSelection?: boolean\n  props: {\n    options?: MultipleChoiceOption[]\n  }\n}\n\ninterface MultipleChoiceOption {\n  id: string\n  title: string\n  isOpenEnded: boolean\n  openEndedLabel?: string\n}\n\nconst MultipleChoiceWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  -webkit-appearance: none;\n  appearance: none;\n`\n\nconst MultipleChoiceSelect = styled.select`\n  ${(props) => getCustomClassOverrides(props)} {\n    // Anything inside this block will be ignored if the user provides a custom class\n    border: 1px solid ${(props) => props.appearance?.theme?.colorBorder};\n    font-size: 14px;\n    border-radius: 6px;\n  }\n  width: 100%;\n  height: 40px;\n  box-sizing: border-box;\n\n  padding: 0 10px;\n  margin-bottom: 10px;\n  color: ${(props) =>\n    props.value == ''\n      ? props.appearance?.theme?.colorTextDisabled\n      : props.appearance?.theme?.colorText};\n\n  appearance: none;\n  background-image: url(\"data:image/svg+xml;utf8,<svg xmlns='http://www.w3.org/2000/svg' fill='none' viewBox='0 0 20 20'><path stroke='%236b7280' stroke-linecap='round' stroke-linejoin='round' stroke-width='1.5' d='M6 8l4 4 4-4'/></svg>\");\n  background-position: right 0.5rem center;\n  background-repeat: no-repeat;\n  background-size: 1.5em 1.5em;\n  -webkit-print-color-adjust: exact;\n`\n\nexport function MultipleChoice({\n  formInput,\n  customFormTypeProps,\n  onSaveInputData,\n  inputData,\n  setFormValidationErrors,\n}: FormInputProps) {\n  const input = formInput as MultipleChoiceProps\n  const [data, setData] = useState(inputData?.choice?.[0] || '')\n  const [hasLoaded, setHasLoaded] = useState(false)\n\n  useEffect(() => {\n    if (data === '' && !hasLoaded) {\n      setHasLoaded(true)\n      if (input.requireSelection) {\n        setData(NULL_VALUE)\n        return\n      }\n      if (\n        input.defaultValue &&\n        input.props.options?.find((option) => option.id === input.defaultValue)\n      ) {\n        // Find input.props.options with id == defaultValue\n        const defaultValue = input.props.options?.find((option) => option.id === input.defaultValue)\n        setData(defaultValue.id)\n        onSaveInputData({ choice: [defaultValue.id] })\n      } else {\n        setData(input.props.options?.[0].id || '')\n        onSaveInputData({ choice: [input.props.options?.[0].id || ''] })\n      }\n    }\n  }, [])\n\n  useEffect(() => {\n    if (input.requireSelection && data === NULL_VALUE) {\n      setFormValidationErrors([\n        {\n          message: 'Please select an option',\n          id: input.id,\n        },\n      ])\n    } else {\n      setFormValidationErrors([])\n    }\n  }, [data])\n\n  return (\n    <MultipleChoiceWrapper>\n      <Label\n        title={input.title}\n        required={false} // MultipleChoice is always required as it has a default value\n        appearance={customFormTypeProps.appearance}\n      />\n      <MultipleChoiceSelect\n        value={data}\n        onChange={(e) => {\n          setData(e.target.value)\n          onSaveInputData({ choice: [e.target.value] })\n        }}\n        placeholder={input.placeholder}\n        appearance={customFormTypeProps.appearance}\n        className={getClassName('multipleChoiceSelect', customFormTypeProps.appearance)}\n      >\n        {input.requireSelection && (\n          <option key=\"null-value\" value={NULL_VALUE} disabled>\n            {input.placeholder ?? `Select an option`}\n          </option>\n        )}\n        {input.props.options?.map((option) => {\n          return (\n            <option key={option.id} value={option.id}>\n              {option.title}\n            </option>\n          )\n        })}\n      </MultipleChoiceSelect>\n      {/*// If selected data is option.isOpenEnded is true, render an input field*/}\n      {input.props.options?.find((option) => option.id === data)?.isOpenEnded && (\n        <>\n          <Label\n            title={\n              input.props.options?.find((option) => option.id === data)?.openEndedLabel ??\n              `Please specify`\n            }\n            required={false}\n            appearance={customFormTypeProps.appearance}\n          />\n          <TextInput\n            type=\"text\"\n            placeholder=\"Enter your answer here\"\n            onChange={(e) => {\n              onSaveInputData({ choice: [e.target.value] })\n            }}\n            appearance={customFormTypeProps.appearance}\n          />\n        </>\n      )}\n      <SubLabel title={input.subtitle} appearance={customFormTypeProps.appearance} />\n    </MultipleChoiceWrapper>\n  )\n}\n","import React, { useEffect, useState } from 'react'\n\nimport styled from 'styled-components'\nimport { FormInputProps, MultipleChoiceListProps } from '../../../../../FrigadeForm/types'\nimport { getClassName, getCustomClassOverrides } from '../../../../../shared/appearance'\nimport { Label } from '../shared/Label'\nimport { SubLabel } from '../shared/SubLabel'\nimport { CheckBox } from '../../../../CheckBox'\n\nconst MultipleChoiceListWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  -webkit-appearance: none;\n  appearance: none;\n`\n\nconst MultipleChoiceListItem = styled.button`\n  ${(props) => getCustomClassOverrides(props)} {\n    // Anything inside this block will be ignored if the user provides a custom class\n    border: 1px solid ${(props) => props.appearance?.theme?.colorBorder};\n    font-size: 14px;\n    // Selector for when selected=true\n    &[data-selected='true'] {\n      border: 1px solid ${(props) => props.appearance.theme.colorPrimary};\n      background-color: ${(props) => props.appearance.theme.colorPrimary}1a;\n    }\n\n    :hover {\n      border: 1px solid ${(props) => props.appearance.theme.colorPrimary};\n    }\n    text-align: left;\n    border-radius: 6px;\n  }\n  display: inline-flex;\n  justify-content: space-between;\n  align-items: center;\n  cursor: pointer;\n  width: 100%;\n  height: 60px;\n  padding: 0 18px;\n  margin-bottom: 10px;\n`\n\nexport function MultipleChoiceList({\n  formInput,\n  customFormTypeProps,\n  onSaveInputData,\n  inputData,\n  setFormValidationErrors,\n}: FormInputProps) {\n  const input = formInput as MultipleChoiceListProps\n  const [selectedIds, setSelectedIds] = useState<string[]>(inputData?.choice || [])\n  const [hasLoaded, setHasLoaded] = useState(false)\n\n  useEffect(() => {\n    if (selectedIds.length == 0 && !hasLoaded) {\n      setHasLoaded(true)\n      onSaveInputData({ choice: [] })\n    }\n  }, [])\n\n  useEffect(() => {\n    onSaveInputData({ choice: selectedIds })\n  }, [selectedIds])\n\n  useEffect(() => {\n    // Set errors if inputData does not meet min/max requirements and if field is required\n    if (\n      input.required &&\n      (selectedIds.length < input.props.minChoices || selectedIds.length > input.props.maxChoices)\n    ) {\n      setFormValidationErrors([\n        {\n          message: ``,\n          id: input.id,\n        },\n      ])\n    } else {\n      setFormValidationErrors([])\n    }\n  }, [selectedIds])\n\n  return (\n    <MultipleChoiceListWrapper>\n      <Label\n        title={input.title}\n        required={input.required}\n        appearance={customFormTypeProps.appearance}\n      />\n      {input.props.options?.map((option) => {\n        return (\n          <MultipleChoiceListItem\n            appearance={customFormTypeProps.appearance}\n            className={getClassName('multipleChoiceListItem', customFormTypeProps.appearance)}\n            key={option.id}\n            value={option.id}\n            data-selected={selectedIds.includes(option.id)}\n            onClick={() => {\n              // If the option is already selected, remove it from the selectedIds\n              if (selectedIds.includes(option.id)) {\n                setSelectedIds(selectedIds.filter((id) => id !== option.id))\n                return\n              }\n              // Select the input if we are still under maxChoices\n              if (selectedIds.length < input.props.maxChoices) {\n                setSelectedIds([...selectedIds, option.id])\n              } else {\n                if (selectedIds.length == 1 && input.props.maxChoices == 1) {\n                  // deselect the input if we are at maxChoices and minChoices is 1\n                  setSelectedIds([option.id])\n                }\n              }\n            }}\n          >\n            {option.title}\n            <CheckBox\n              type=\"round\"\n              primaryColor={customFormTypeProps.appearance.theme.colorPrimary}\n              value={selectedIds.includes(option.id)}\n              appearance={customFormTypeProps.appearance}\n            />\n          </MultipleChoiceListItem>\n        )\n      })}\n      <SubLabel title={input.subtitle} appearance={customFormTypeProps.appearance} />\n    </MultipleChoiceListWrapper>\n  )\n}\n","import React, { CSSProperties, FC } from 'react'\nimport { ProgressRing } from '../Progress/ProgressRing'\nimport { getClassName, mergeClasses, styleOverridesToCSS } from '../../shared/appearance'\nimport { Appearance, DefaultAppearance } from '../../types'\nimport styled from 'styled-components'\n\nconst CheckIcon = ({ color = '#FFFFFF' }) => (\n  <svg width={10} height={8} viewBox=\"0 0 10 8\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path\n      d=\"M1 4.34815L3.4618 7L3.4459 6.98287L9 1\"\n      stroke={color}\n      strokeWidth=\"1.5\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n    />\n  </svg>\n)\n\nconst BASE_CHECKBOX_STYLES_SQUARE: CSSProperties = {\n  width: '22px',\n  height: '22px',\n  borderRadius: '8px',\n  display: 'flex',\n  justifyContent: 'center',\n  alignItems: 'center',\n}\n\nconst BASE_CHECKBOX_STYLES_ROUND: CSSProperties = {\n  width: '22px',\n  height: '22px',\n  borderRadius: '40px',\n  display: 'flex',\n  justifyContent: 'center',\n  alignItems: 'center',\n}\n\nconst BASE_CHECKBOX_STYLES_SQUARE__CHECKED = {\n  border: '1px solid #000000',\n  color: '#FFFFFF',\n}\n\nconst BASE_CHECKBOX_STYLES_SQUARE__UNCHECKED = {\n  border: '1px solid #E6E6E6',\n}\n\nconst BASE_CHECKBOX_STYLES_ROUND__CHECKED = {\n  color: '#FFFFFF',\n}\n\nconst BASE_CHECKBOX_STYLES_ROUND__UNCHECKED = {\n  border: '3px solid #D9D9D9',\n}\n\nconst getBaseStyle = (type: CheckBoxType): CSSProperties => {\n  if (type === 'square') return BASE_CHECKBOX_STYLES_SQUARE\n  else return BASE_CHECKBOX_STYLES_ROUND\n}\n\nconst getStateStyle = (type: CheckBoxType, checked: boolean): CSSProperties => {\n  if (type === 'square')\n    return checked ? BASE_CHECKBOX_STYLES_SQUARE__CHECKED : BASE_CHECKBOX_STYLES_SQUARE__UNCHECKED\n  return checked ? BASE_CHECKBOX_STYLES_ROUND__CHECKED : BASE_CHECKBOX_STYLES_ROUND__UNCHECKED\n}\n\nexport type CheckBoxType = 'square' | 'round'\n\nexport interface CheckBoxProps {\n  value: boolean\n  type?: CheckBoxType\n  primaryColor?: string\n  progress?: number // progress percentage our of 1. e.g. 0.5\n  appearance?: Appearance\n  className?: string\n  style?: React.CSSProperties\n}\n\nconst CheckIconContainer = styled.div`\n  ${(props) => styleOverridesToCSS(props)}\n`\n\nexport const CheckBox: FC<CheckBoxProps> = ({\n  value,\n  type = 'square',\n  primaryColor = '#000000',\n  progress,\n  appearance = DefaultAppearance,\n  style,\n  className,\n}) => {\n  let checkBoxStyle = getBaseStyle(type as CheckBoxType)\n  let stateStyle = getStateStyle(type as CheckBoxType, value)\n\n  if (value === true) {\n    checkBoxStyle = {\n      ...checkBoxStyle,\n      ...stateStyle,\n      backgroundColor: primaryColor,\n      borderColor: type === 'square' ? primaryColor : 'none',\n    }\n  } else {\n    checkBoxStyle = {\n      ...checkBoxStyle,\n      ...stateStyle,\n    }\n  }\n\n  if (value !== true && type === 'round' && progress !== undefined && progress !== 1) {\n    return <ProgressRing fillColor={primaryColor} percentage={progress} size={22} />\n  }\n\n  return (\n    <CheckIconContainer\n      styleOverrides={checkBoxStyle}\n      style={style}\n      role=\"checkbox\"\n      className={mergeClasses(\n        getClassName('checkIconContainer', appearance),\n        getClassName(\n          value ? 'checkIconContainerChecked' : 'checkIconContainerUnchecked',\n          appearance\n        ),\n        value ? 'checkIconContainerChecked' : 'checkIconContainerUnchecked',\n        className\n      )}\n    >\n      {value && <CheckIcon color={'#FFFFFF'} />}\n    </CheckIconContainer>\n  )\n}\n","import React, { FC } from 'react'\nimport { motion } from 'framer-motion'\n\nconst Circle: FC<{ color: string; percentage?: number; size: number }> = ({\n  color,\n  percentage,\n  size,\n}) => {\n  const r = size * 0.5 - 2\n  const circum = 2 * Math.PI * r\n  const strokePct = (1 - percentage) * circum // where stroke will start, e.g. from 15% to 100%.\n\n  const transition = {\n    duration: 0.3,\n    delay: 0,\n    ease: 'easeIn',\n  }\n\n  const variants = {\n    hidden: {\n      strokeDashoffset: circum,\n      transition,\n    },\n    show: {\n      strokeDashoffset: strokePct,\n      transition,\n    },\n  }\n\n  return (\n    <motion.circle\n      r={r}\n      cx={size * 0.5}\n      cy={size * 0.5}\n      fill=\"transparent\"\n      stroke={strokePct !== circum ? color : ''}\n      strokeWidth={'3px'}\n      strokeDasharray={circum}\n      strokeDashoffset={percentage ? strokePct : 0}\n      variants={variants}\n      transition={transition}\n      initial=\"hidden\"\n      animate=\"show\"\n    ></motion.circle>\n  )\n}\n\ninterface ProgressRingProps {\n  fillColor: string\n  size: number\n  bgColor?: string\n  percentage: number\n  className?: string\n  style?: React.CSSProperties\n  children?: React.ReactNode\n}\n\nconst ProgressRing: FC<ProgressRingProps> = ({\n  fillColor,\n  size,\n  percentage,\n  children,\n  bgColor = '#D9D9D9',\n  className,\n  style,\n}) => {\n  return (\n    <svg style={style} className={className} width={size} height={size} overflow=\"visible\">\n      <g transform={`rotate(-90 ${`${size * 0.5} ${size * 0.5}`})`}>\n        <Circle color={bgColor} size={size} />\n        <Circle color={fillColor} percentage={percentage} size={size} />\n      </g>\n      {children}\n    </svg>\n  )\n}\n\nexport default ProgressRing\n","import React from 'react'\n\nimport { Appearance } from '../../types'\nimport { getClassName, getCustomClassOverrides, ucFirst } from '../../shared/appearance'\nimport styled from 'styled-components'\nimport { sanitize } from '../../shared/sanitizer'\n\nconst HeaderTitle = styled.h1`\n  ${(props) => getCustomClassOverrides(props)} {\n    font-style: normal;\n    font-weight: 600;\n    font-size: ${(props) => (props.size == 'small' ? '15px' : '18px')};\n    line-height: ${(props) => (props.size == 'small' ? '20px' : '22px')};\n    display: flex;\n    align-items: center;\n    margin-bottom: 4px;\n    color: ${(props) => props.appearance.theme.colorText};\n  }\n`\n\nconst HeaderSubtitle = styled.h2`\n  ${(props) => getCustomClassOverrides(props)} {\n    font-style: normal;\n    font-weight: 400;\n    font-size: 15px;\n    line-height: 20px;\n    color: ${(props) => props.appearance.theme.colorTextSecondary};\n  }\n`\n\nexport function TitleSubtitle({\n  appearance,\n  title,\n  subtitle,\n  size = 'medium',\n  classPrefix = '',\n}: {\n  appearance: Appearance\n  title: string\n  subtitle?: string\n  size?: 'small' | 'medium' | 'large'\n  classPrefix?: string\n}) {\n  return (\n    <>\n      <HeaderTitle\n        appearance={appearance}\n        className={getClassName(\n          `${classPrefix}${classPrefix ? ucFirst(size) : size}Title`,\n          appearance\n        )}\n        dangerouslySetInnerHTML={sanitize(title)}\n        size={size}\n      />\n      {subtitle && (\n        <HeaderSubtitle\n          appearance={appearance}\n          className={getClassName(\n            `${classPrefix}${classPrefix ? ucFirst(size) : size}Subtitle`,\n            appearance\n          )}\n          dangerouslySetInnerHTML={sanitize(subtitle)}\n          size={size}\n        />\n      )}\n    </>\n  )\n}\n","import DOMPurify from 'dompurify'\n\nexport function sanitize(dirty: string) {\n  return {\n    __html: DOMPurify.sanitize(dirty, {\n      ALLOWED_TAGS: ['b', 'i', 'a', 'span', 'div', 'p', 'pre', 'u', 'br', 'img'],\n      ALLOWED_ATTR: ['style', 'class', 'target', 'id', 'href', 'alt', 'src'],\n    }),\n  }\n}\n","import * as React from 'react'\n\nexport const Warning = (props) => (\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    width={12}\n    height={12}\n    aria-hidden=\"true\"\n    viewBox=\"0 0 16 16\"\n    {...props}\n  >\n    <path\n      fill=\"currentColor\"\n      fillRule=\"evenodd\"\n      d=\"m10.115 1.308 5.635 11.269A2.365 2.365 0 0 1 13.634 16H2.365A2.365 2.365 0 0 1 .25 12.577L5.884 1.308a2.365 2.365 0 0 1 4.231 0zM8 10.5a1.5 1.5 0 1 0 0 3 1.5 1.5 0 0 0 0-3zM8 9c.552 0 1-.32 1-.714V4.714C9 4.32 8.552 4 8 4s-1 .32-1 .714v3.572C7 8.68 7.448 9 8 9z\"\n    />\n  </svg>\n)\n","import styled from 'styled-components'\n\nexport const FormCTAContainer = styled.div`\n  align-items: center;\n  display: flex;\n  justify-content: ${(props) => (props.showBackButton ? 'space-between' : 'flex-end')};\n  padding-top: 14px;\n`\n\nexport const FormCTAError = styled.div`\n  color: ${(props) => props.appearance.theme.colorTextError};\n  font-size: 12px;\n`\n\nexport const CTAWrapper = styled.div`\n  display: flex;\n  gap: 12px;\n`\nexport const FormContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  flex: 1 1;\n`\n\nexport const FormContainerMain = styled.div`\n  display: flex;\n  // If type is set to large-modal, use padding 60px horizontal, 80px vertical\n  // Otherwise, use 4px padding\n  flex-direction: column;\n  flex-grow: 1;\n  flex-basis: 0;\n  position: relative;\n`\n\nexport const FormContainerWrapper = styled.div`\n  padding: ${(props) => (props.type === 'large-modal' ? '50px' : '0px')};\n  position: relative;\n  overflow-y: auto;\n`\n\nexport const FormContainerSidebarImage = styled.div`\n  display: flex;\n  align-self: stretch;\n  flex-grow: 1;\n  flex-basis: 0;\n  // If props.image is set, use it as the background image\n  background-image: ${(props) => (props.image ? `url(${props.image})` : 'none')};\n  // scale background image to fit\n  background-size: contain;\n  background-position: center;\n  border-top-right-radius: ${(props) => props.appearance.theme.borderRadius}px;\n  border-bottom-right-radius: ${(props) => props.appearance.theme.borderRadius}px;\n`\n","import React, { FC } from 'react'\nimport { FrigadeFormType } from '.'\nimport { Button } from '../components/Button'\nimport { getClassName } from '../shared/appearance'\nimport { Appearance, StepData } from '../types'\nimport { CTAWrapper, FormCTAContainer, FormCTAError } from './styled'\n\ninterface FormFooterProps {\n  step: StepData\n  canContinue: boolean\n  appearance: Appearance\n  onPrimaryClick: () => void\n  onSecondaryClick: () => void\n  onBack: () => void\n  formType: FrigadeFormType\n  steps: StepData[]\n  selectedStep: number\n  allowBackNavigation: boolean\n  errorMessage?: string\n}\n\nexport const FormFooter: FC<FormFooterProps> = ({\n  step,\n  canContinue,\n  appearance,\n  onPrimaryClick,\n  onSecondaryClick,\n  formType,\n  selectedStep,\n  steps,\n  onBack,\n  allowBackNavigation,\n  errorMessage,\n}) => {\n  const buttonType = formType === 'inline' ? 'inline' : 'full-width'\n\n  const showBackButton = steps.length > 1 && selectedStep != 0 && allowBackNavigation\n  return (\n    <>\n      {errorMessage && (\n        <FormCTAError appearance={appearance} className={getClassName('formCTAError', appearance)}>\n          {errorMessage}\n        </FormCTAError>\n      )}\n      <FormCTAContainer\n        showBackButton={showBackButton}\n        className={getClassName('formCTAContainer', appearance)}\n      >\n        {showBackButton && (\n          <Button\n            title={step.backButtonTitle ?? '←'}\n            onClick={onBack}\n            secondary={true}\n            withMargin={false}\n            type={buttonType}\n            appearance={appearance}\n            style={{ width: '90px', maxWidth: '90px' }}\n            classPrefix=\"back\"\n          />\n        )}\n        <CTAWrapper className={getClassName('ctaWrapper', appearance)}>\n          {step.secondaryButtonTitle ? (\n            <Button\n              title={step.secondaryButtonTitle}\n              onClick={onSecondaryClick}\n              secondary={true}\n              withMargin={false}\n              type={buttonType}\n              appearance={appearance}\n            />\n          ) : null}{' '}\n          {step.primaryButtonTitle ? (\n            <Button\n              disabled={!canContinue}\n              withMargin={false}\n              title={step.primaryButtonTitle}\n              onClick={onPrimaryClick}\n              type={buttonType}\n              appearance={appearance}\n            />\n          ) : null}\n        </CTAWrapper>\n      </FormCTAContainer>\n    </>\n  )\n}\n","import React, { CSSProperties, FC } from 'react'\nimport styled from 'styled-components'\nimport { Appearance } from '../../types'\nimport {\n  getClassName,\n  getCustomClassOverrides,\n  styleOverridesToCSS,\n  ucFirst,\n} from '../../shared/appearance'\n\ninterface ButtonProps {\n  onClick?: () => void\n  title?: string\n  style?: CSSProperties\n  textStyle?: CSSProperties\n  disabled?: boolean\n  type?: 'full-width' | 'inline'\n  secondary?: boolean\n  appearance?: Appearance\n  withMargin?: boolean\n  size?: 'small' | 'medium' | 'large'\n  classPrefix?: string\n}\n\nconst ButtonContainer = styled.button`\n  justify-content: center;\n  align-content: center;\n  ${(props) => getCustomClassOverrides(props)} {\n    display: flex;\n    // Anything inside this block will be ignored if the user provides a custom class\n    width: ${(props) => (props.type === 'full-width' ? '100%' : 'auto')};\n    // Only add margin if prop withMargin is true\n    ${(props) => (props.withMargin ? 'margin: 16px 0px 16px 0px;' : '')}\n\n    border: 1px solid ${(props) => props.appearance?.theme?.colorPrimary};\n    color: ${(props) =>\n      props.secondary\n        ? props.appearance?.theme?.colorPrimary\n        : props.appearance?.theme?.colorTextOnPrimaryBackground};\n    background-color: ${(props) =>\n      props.secondary\n        ? props.appearance?.theme?.colorBackground\n        : props?.appearance?.theme?.colorPrimary};\n    border-radius: ${(props) => props.appearance?.theme?.borderRadius}px;\n    padding: ${(props) => (props.size == 'small' ? '6px 14px 6px 14px' : '8px 20px 8px 20px')};\n    font-size: ${(props) => (props.size == 'small' ? '14px' : '15px')};\n    line-height: 20px;\n    font-weight: 500;\n    ${(props) => styleOverridesToCSS(props)}\n  }\n\n  font-family: inherit;\n\n  cursor: pointer;\n  :hover {\n    opacity: 0.8;\n  }\n  :disabled {\n    opacity: 0.3;\n    cursor: not-allowed;\n  }\n`\n\nexport const MultipleButtonContainer = styled.div`\n  ${(props) => getCustomClassOverrides(props)} {\n    display: flex;\n    flex-direction: row;\n    justify-content: flex-start;\n    margin-top: 8px;\n\n    & > * {\n      margin-right: 8px;\n    }\n  }\n`\n\nexport const Button: FC<ButtonProps> = ({\n  onClick,\n  title,\n  style,\n  disabled,\n  type = 'inline',\n  size = 'medium',\n  secondary = false,\n  appearance,\n  withMargin = true,\n  classPrefix = '',\n}) => {\n  function getClassNameWithPrefix() {\n    const name = secondary ? 'buttonSecondary' : 'button'\n    if (classPrefix === '') {\n      return name\n    }\n\n    return `${classPrefix}${ucFirst(name)}`\n  }\n\n  return (\n    <ButtonContainer\n      secondary={secondary}\n      appearance={appearance}\n      disabled={disabled}\n      onClick={onClick}\n      styleOverrides={style}\n      type={type}\n      withMargin={withMargin}\n      size={size}\n      className={getClassName(getClassNameWithPrefix(), appearance)}\n    >\n      {title ?? `Continue`}\n    </ButtonContainer>\n  )\n}\n","import React, { FC } from 'react'\nimport styled from 'styled-components'\n\nimport { useTheme } from '../hooks/useTheme'\nimport { Appearance } from '../types'\n\nconst Wrapper = styled.div`\n  text-align: center;\n`\n\ninterface FormPaginationProps {\n  stepCount: number\n  currentStep: number\n  appearance: Appearance\n  className?: string\n}\n\nexport const FormPagination: FC<FormPaginationProps> = ({\n  stepCount = 0,\n  currentStep = 0,\n  className,\n  appearance,\n}) => {\n  const { theme } = useTheme().mergeAppearanceWithDefault(appearance)\n\n  return (\n    <Wrapper className={className}>\n      <svg\n        width={16 * stepCount - 8}\n        height={8}\n        viewBox={`0 0 ${16 * stepCount - 8} 8`}\n        fill=\"none\"\n      >\n        {Array(stepCount)\n          .fill(null)\n          .map((_, idx) => (\n            <rect\n              key={idx}\n              x={16 * idx}\n              y={0}\n              width={8}\n              height={8}\n              rx={4}\n              fill={currentStep === idx ? theme.colorPrimary : '#E6E6E6'}\n            />\n          ))}\n      </svg>\n    </Wrapper>\n  )\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport { CustomFormTypeProps } from '../../../FrigadeForm/types'\nimport { useCTAClickSideEffects } from '../../../hooks/useCTAClickSideEffects'\n\ninterface Link {\n  title?: string\n  uri?: string\n  uriTarget?: string\n  imageUri?: string\n}\n\n// create flex that wraps if not enoug space\nconst LinkContainer = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  align-content: center;\n  justify-content: center;\n`\n\nconst Link = styled.div`\n  align-content: center;\n  align-items: center;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  flex-grow: 1;\n  box-shadow: 0px 4px 12px rgba(0, 0, 0, 0.1);\n  border-radius: 8px;\n  margin: 15px;\n  padding: 20px;\n  flex-basis: 255px;\n  flex-grow: 0;\n  flex-shrink: 0;\n`\n\nconst LinkIcon = styled.img`\n  width: 78px;\n  height: auto;\n`\n\nconst LinkTitle = styled.button`\n  font-style: normal;\n  font-weight: 600;\n  font-size: 13px;\n  line-height: 16px;\n\n  display: flex;\n  align-items: center;\n  text-align: center;\n  border: 1px solid;\n  border-radius: 100px;\n  padding: 8px 12px;\n  margin-top: 16px;\n`\n\nconst HeaderTitle = styled.h1`\n  font-weight: 700;\n  font-size: 28px;\n  line-height: 34px;\n`\n\nconst HeaderSubtitle = styled.h2`\n  font-style: normal;\n  font-weight: 400;\n  font-size: 16px;\n  line-height: 24px;\n  color: #7e7e7e;\n  margin-top: 12px;\n  margin-bottom: 16px;\n  max-width: 70%;\n`\n\nexport function LinkCollectionStepType({ stepData, appearance }: CustomFormTypeProps) {\n  const { handleUrl } = useCTAClickSideEffects()\n\n  return (\n    <div>\n      <HeaderTitle>{stepData.title}</HeaderTitle>\n      <HeaderSubtitle>{stepData.subtitle}</HeaderSubtitle>\n      <LinkContainer>\n        {stepData.props?.links?.map((link: Link) => (\n          <Link key={link.title}>\n            <LinkIcon src={link.imageUri} />\n            <LinkTitle\n              style={{\n                borderColor: appearance.theme.colorPrimary,\n                color: appearance.theme.colorPrimary,\n              }}\n              onClick={() => {\n                if (link.uri) {\n                  handleUrl(link.uri, link.uriTarget ?? '_blank')\n                }\n              }}\n            >\n              {link.title}\n            </LinkTitle>\n          </Link>\n        ))}\n      </LinkContainer>\n    </div>\n  )\n}\n","import { StepData } from '../types'\nimport { FrigadeContext } from '../FrigadeProvider'\nimport { useContext } from 'react'\n\nexport function useCTAClickSideEffects() {\n  const context = useContext(FrigadeContext)\n\n  function primaryCTAClickSideEffects(step: StepData) {\n    handleUrl(step.primaryButtonUri, step.primaryButtonUriTarget)\n  }\n\n  function secondaryCTAClickSideEffects(step: StepData) {\n    handleUrl(step.secondaryButtonUri, step.secondaryButtonUriTarget)\n  }\n\n  function handleUrl(url?: string, target?: string) {\n    if (!url) {\n      return\n    }\n    // Check if url starts with http -- if so, default to _blank otherwise default to _self\n    let updatedTarget = url.startsWith('http') ? '_blank' : '_self'\n\n    if (target && target !== '_blank') {\n      updatedTarget = '_self'\n    }\n    context.navigate(url, updatedTarget)\n  }\n\n  return {\n    primaryCTAClickSideEffects,\n    secondaryCTAClickSideEffects,\n    handleUrl,\n  }\n}\n","import React, { useEffect } from 'react'\nimport styled from 'styled-components'\nimport { CustomFormTypeProps, FormInputType } from '../../../FrigadeForm/types'\nimport { getClassName, getCustomClassOverrides } from '../../../shared/appearance'\nimport { TitleSubtitle } from '../../TitleSubtitle/TitleSubtitle'\nimport { VideoCard } from '../../Video/VideoCard'\n\ninterface CallToActionStepProps {\n  data?: FormInputType[]\n}\n\n// create flex that wraps if not enoug space\nconst CallToActionStepContainer = styled.div`\n  ${(props) => getCustomClassOverrides(props)} {\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n  }\n`\n\nconst CallToActionImage = styled.img`\n  ${(props) => getCustomClassOverrides(props)} {\n    width: 100%;\n    height: auto;\n    max-height: 250px;\n    margin-bottom: 24px;\n  }\n`\n\nconst CallToActionTextContainer = styled.div`\n  ${(props) => getCustomClassOverrides(props)} {\n    margin-bottom: 24px;\n  }\n`\n\nconst CallToActionVideo = styled.div`\n  ${(props) => getCustomClassOverrides(props)} {\n    width: 100%;\n    height: auto;\n    max-height: 250px;\n    margin-bottom: 24px;\n  }\n`\n\nexport function CallToActionStepType({\n  stepData,\n  appearance,\n  setCanContinue,\n}: CustomFormTypeProps) {\n  useEffect(() => {\n    setCanContinue(true)\n  }, [])\n\n  return (\n    <CallToActionStepContainer className={getClassName('callToActionContainer', appearance)}>\n      <CallToActionTextContainer className={getClassName('callToActionTextContainer', appearance)}>\n        <TitleSubtitle\n          appearance={appearance}\n          title={stepData.title}\n          subtitle={stepData.subtitle}\n        />\n      </CallToActionTextContainer>\n      {stepData.imageUri && (\n        <CallToActionImage\n          className={getClassName('callToActionImage', appearance)}\n          src={stepData.imageUri}\n        />\n      )}\n      {!stepData.imageUri && stepData.videoUri && (\n        <CallToActionVideo\n          appearance={appearance}\n          className={getClassName('callToActionVideo', appearance)}\n        >\n          <VideoCard appearance={appearance} videoUri={stepData.videoUri} />\n        </CallToActionVideo>\n      )}\n    </CallToActionStepContainer>\n  )\n}\n","import React, { CSSProperties } from 'react'\n\nexport const Play = ({\n  style,\n  className,\n}: {\n  color?: string\n  style?: CSSProperties\n  className?: string\n}) => (\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    fill=\"none\"\n    viewBox=\"0 0 24 24\"\n    strokeWidth={1.5}\n    stroke=\"currentColor\"\n    className={className}\n    style={style}\n  >\n    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M21 12a9 9 0 11-18 0 9 9 0 0118 0z\" />\n    <path\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      d=\"M15.91 11.672a.375.375 0 010 .656l-5.603 3.113a.375.375 0 01-.557-.328V8.887c0-.286.307-.466.557-.327l5.603 3.112z\"\n    />\n  </svg>\n)\n","import { Play } from '../Icons/Play'\nimport { Appearance } from '../../types'\nimport React, { useRef, useState } from 'react'\nimport styled from 'styled-components'\nimport { getClassName } from '../../shared/appearance'\n\nconst Video = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: flex-start;\n  flex-direction: column;\n  width: 100%;\n  height: 100%;\n  position: relative;\n`\n\nconst PlayIconWrapper = styled.div`\n  position: absolute;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  height: 100%;\n  cursor: pointer;\n  :hover {\n    opacity: 0.6;\n  }\n  z-index: 10;\n\n  > svg {\n    width: 40px;\n    height: 40px;\n    color: ${(props) => props.appearance.theme.colorBackground};\n    box-shadow: 0px 6px 25px rgba(0, 0, 0, 0.06);\n    border-radius: 50%;\n  }\n`\nconst VideoSource = styled.video`\n  width: 100%;\n  height: 100%;\n  border-radius: ${(props) => props.appearance.theme.borderRadius}px;\n`\nconst YouTubeVideoSource = styled.iframe`\n  width: 100%;\n  height: 100%;\n  min-height: 260px;\n  border-radius: ${(props) => props.appearance.theme.borderRadius}px;\n`\n\nexport function VideoCard({ appearance, videoUri }: { appearance: Appearance; videoUri: string }) {\n  // Create ref to use with videoplayer\n\n  const ref = useRef<any>()\n\n  const [isPlaying, setIsPlaying] = useState(false)\n\n  if (videoUri.includes('youtube')) {\n    let videoId = videoUri.split('v=')[1]\n    const ampersandPosition = videoId.indexOf('&')\n    if (ampersandPosition !== -1) {\n      videoId = videoId.substring(0, ampersandPosition)\n    }\n    return (\n      <YouTubeVideoSource\n        width=\"100%\"\n        height=\"100%\"\n        src={`https://www.youtube.com/embed/${videoId}`}\n        frameBorder=\"0\"\n        allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n        allowFullScreen\n        appearance={appearance}\n      />\n    )\n  }\n\n  return (\n    <Video className={getClassName('videoPlayerWrapper', appearance)} appearance={appearance}>\n      {!isPlaying && (\n        <PlayIconWrapper\n          onClick={() => {\n            setIsPlaying(true)\n            ref.current.play()\n          }}\n          appearance={appearance}\n        >\n          <Play />\n        </PlayIconWrapper>\n      )}\n      <VideoSource\n        appearance={appearance}\n        controls={isPlaying}\n        ref={ref}\n        play={isPlaying}\n        src={videoUri}\n      />\n    </Video>\n  )\n}\n","import React, { useEffect, useState } from 'react'\nimport { CheckBox } from '../../CheckBox'\nimport { getClassName } from '../../../shared/appearance'\nimport {\n  ItemIcon,\n  SelectItem,\n  SelectItemLeft,\n  SelectItemText,\n  SelectListHeader,\n  SelectListSelectionContainer,\n  SelectListSubtitle,\n  SelectListTitle,\n} from './styled'\nimport { CustomFormTypeProps, MultipleChoiceProps } from '../../../FrigadeForm/types'\n\nexport const SelectListStepType = ({\n  stepData,\n  setCanContinue,\n  onSaveData,\n  appearance,\n}: CustomFormTypeProps) => {\n  const multipleChoiceProps = stepData.props as MultipleChoiceProps\n  const [selectedIds, setSelectedIds] = useState<string[]>([])\n  const [hasLoaded, setHasLoaded] = useState(false)\n  const [lastStepId, setLastStepId] = useState(stepData.id)\n\n  useEffect(() => {\n    if (selectedIds.length == 0 && !hasLoaded) {\n      setHasLoaded(true)\n      onSaveData({ choice: [] })\n    }\n  }, [hasLoaded])\n\n  useEffect(() => {\n    if (lastStepId !== stepData.id) {\n      setLastStepId(stepData.id)\n      setSelectedIds([])\n    }\n  }, [stepData])\n\n  useEffect(() => {\n    onSaveData({ choice: selectedIds })\n    if (selectedIds.length >= multipleChoiceProps.minChoices) {\n      setCanContinue(true)\n    } else {\n      setCanContinue(false)\n    }\n  }, [selectedIds])\n\n  return (\n    <SelectListSelectionContainer className={getClassName('selectListContainer', appearance)}>\n      <SelectListHeader>\n        <SelectListTitle className={getClassName('selectListTitle', appearance)}>\n          {stepData.title}\n        </SelectListTitle>\n        <SelectListSubtitle\n          appearance={appearance}\n          className={getClassName('selectListSubtitle', appearance)}\n        >\n          {stepData.subtitle}\n        </SelectListSubtitle>\n      </SelectListHeader>\n      {multipleChoiceProps.options.map((option, idx) => {\n        const isSelected = selectedIds.includes(option.id)\n        return (\n          <SelectItem\n            key={`select-item-${idx}`}\n            onClick={() => {\n              // If the option is already selected, remove it from the selectedIds\n              if (selectedIds.includes(option.id)) {\n                setSelectedIds(selectedIds.filter((id) => id !== option.id))\n                return\n              }\n              // Select the input if we are still under maxChoices\n              if (selectedIds.length < multipleChoiceProps.maxChoices) {\n                setSelectedIds([...selectedIds, option.id])\n              } else {\n                if (selectedIds.length == 1 && multipleChoiceProps.maxChoices == 1) {\n                  // deselect the input if we are at maxChoices and minChoices is 1\n                  setSelectedIds([option.id])\n                }\n              }\n            }}\n            hideBottomBorder={idx === multipleChoiceProps.options.length - 1}\n            className={getClassName('selectListSelectItem', appearance)}\n          >\n            <SelectItemLeft className={getClassName('selectListItemImage', appearance)}>\n              {option.imageUri && <ItemIcon src={option.imageUri} alt={`select-icon-${idx}`} />}\n              <SelectItemText\n                appearance={appearance}\n                className={getClassName('selectListSelectItemText', appearance)}\n              >\n                {option.title}\n              </SelectItemText>\n            </SelectItemLeft>\n            <CheckBox\n              appearance={appearance}\n              value={isSelected}\n              primaryColor={appearance.theme.colorPrimary}\n            />\n          </SelectItem>\n        )\n      })}\n    </SelectListSelectionContainer>\n  )\n}\n","import styled from 'styled-components'\n\nexport const SelectListSelectionContainer = styled.div`\n  width: auto;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  padding: 4px;\n`\n\nexport const SelectListHeader = styled.div`\n  width: 100%;\n  text-align: left;\n`\n\nexport const SelectListTitle = styled.h1<{ appearance }>`\n  font-style: normal;\n  font-weight: 700;\n  font-size: 32px;\n  line-height: 38px;\n  color: ${(props) => props.appearance?.theme?.colorText};\n`\n\nexport const SelectListSubtitle = styled.h1<{ appearance }>`\n  font-style: normal;\n  font-weight: 400;\n  font-size: 16px;\n  line-height: 27px;\n  margin-top: 16px;\n  margin-bottom: 16px;\n  color: ${(props) => props.appearance?.theme?.colorTextSecondary};\n`\n\nexport const SelectItem = styled.div<{ hideBottomBorder }>`\n  padding-top: 12px;\n  padding-bottom: 12px;\n  flex-direction: row;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  align-content: center;\n  cursor: pointer;\n  border-bottom: ${(props) => (props.hideBottomBorder ? 'none' : '1px solid #D8D8D8')};\n  width: 100%;\n`\n\nexport const SelectItemLeft = styled.div`\n  padding-top: 10px;\n  padding-bottom: 10px;\n  flex-direction: row;\n  display: flex;\n  justify-content: flex-start;\n`\n\nexport const ItemIcon = styled.img`\n  width: 42px;\n  height: 42px;\n  margin-right: 12px;\n`\n\nexport const SelectItemText = styled.p`\n  font-style: normal;\n  font-weight: 500;\n  font-size: 17px;\n  line-height: 21px;\n  color: ${(props) => props.appearance?.theme?.colorText};\n  display: flex;\n  align-self: center;\n`\n","import { MultiInputStepType } from '../components/Forms/MultiInputStepType/MultiInputStepType'\nimport { Appearance, DefaultFrigadeFlowProps, StepData } from '../types'\nimport {\n  FormContainer,\n  FormContainerMain,\n  FormContainerSidebarImage,\n  FormContainerWrapper,\n} from './styled'\nimport { getClassName } from '../shared/appearance'\nimport { FormFooter } from './FormFooter'\nimport { FormPagination } from './FormPagination'\nimport { LinkCollectionStepType } from '../components/Forms/LinkCollectionStepType'\nimport { CallToActionStepType } from '../components/Forms/CallToActionStepType/CallToActionStepType'\nimport { SelectListStepType } from '../components/Forms/SelectListStepType/SelectListStepType'\nimport { useCTAClickSideEffects } from '../hooks/useCTAClickSideEffects'\nimport { FrigadeFormType } from './index'\nimport React, { FC, useEffect, useState } from 'react'\nimport { CustomFormTypeProps, FormInputProps } from './types'\nimport { useFlows } from '../api/flows'\nimport { AnimatePresence, motion } from 'framer-motion'\n\nconst AnimationWrapper = ({ children, id, shouldWrap = false }) => {\n  return (\n    <>\n      {shouldWrap ? (\n        <AnimatePresence initial={false}>\n          <motion.div\n            key={id}\n            initial={{\n              opacity: 1,\n              y: '100%',\n            }}\n            animate={{\n              opacity: 1,\n              y: 0,\n            }}\n            exit={{\n              opacity: 0,\n              y: '-100%',\n            }}\n            transition={{ duration: 0.5, ease: 'easeInOut' }}\n            style={{\n              width: '100%',\n              height: '100%',\n              position: 'absolute',\n              top: 0,\n              left: 0,\n              zIndex: 1,\n              overflowY: 'auto',\n            }}\n          >\n            {children}\n          </motion.div>\n        </AnimatePresence>\n      ) : (\n        children\n      )}\n    </>\n  )\n}\n\ninterface FormContentProps extends DefaultFrigadeFlowProps {\n  appearance: Appearance\n  steps: StepData[]\n  selectedStep: number\n  customStepTypes?: { [key: string]: (params: CustomFormTypeProps) => React.ReactNode }\n  type: FrigadeFormType\n  setShowModal: (showModal: boolean) => void\n  setVisible?: (visible: boolean) => void\n  showPagination?: boolean\n  customFormElements?: { [key: string]: (params: FormInputProps) => React.ReactNode }\n  allowBackNavigation: boolean\n  validationHandler?: (\n    step: StepData,\n    index: number,\n    nextStep?: StepData,\n    allFormData?: any,\n    stepSpecificFormData?: object\n  ) => Promise<string | null | undefined>\n}\nexport const FormContent: FC<FormContentProps> = ({\n  appearance,\n  steps,\n  selectedStep,\n  customStepTypes,\n  customVariables,\n  onButtonClick,\n  onStepCompletion,\n  flowId,\n  type,\n  hideOnFlowCompletion,\n  onComplete,\n  setVisible,\n  setShowModal,\n  onDismiss,\n  showPagination = false,\n  customFormElements,\n  allowBackNavigation,\n  validationHandler,\n}) => {\n  const DEFAULT_CUSTOM_STEP_TYPES = {\n    linkCollection: LinkCollectionStepType,\n    multiInput: MultiInputStepType,\n    callToAction: CallToActionStepType,\n    selectList: SelectListStepType,\n  }\n\n  const mergedCustomStepTypes = { ...DEFAULT_CUSTOM_STEP_TYPES, ...customStepTypes }\n  const { primaryCTAClickSideEffects, secondaryCTAClickSideEffects } = useCTAClickSideEffects()\n\n  const [canContinue, setCanContinue] = useState(false)\n  const [formData, setFormData] = useState({})\n  const [isSaving, setIsSaving] = useState(false)\n  const [hasSetInitialHash, setHasSetInitialHash] = useState(false)\n  const [errorMessage, setErrorMessage] = useState<string | null | undefined>(null)\n\n  const currentStep = steps[selectedStep] ?? null\n  const {\n    markStepCompleted,\n    markStepStarted,\n    isLoading,\n    updateCustomVariables,\n    markFlowCompleted,\n  } = useFlows()\n\n  useEffect(() => {\n    updateCustomVariables(customVariables)\n  }, [customVariables, isLoading])\n\n  useEffect(() => {\n    if (window && allowBackNavigation && !hasSetInitialHash) {\n      window.location.hash = steps[selectedStep].id\n      setHasSetInitialHash(true)\n    }\n  }, [allowBackNavigation, hasSetInitialHash, setHasSetInitialHash])\n\n  useEffect(() => {\n    if (\n      window &&\n      window?.location?.hash &&\n      window.location.hash.replace('#', '') !== steps[selectedStep].id\n    ) {\n      const stepIdToGoTo = window.location.hash.replace('#', '')\n      const newStepIndex = steps.findIndex((step) => step.id === stepIdToGoTo)\n      if (newStepIndex !== -1) {\n        markStepStarted(flowId, steps[newStepIndex].id)\n      }\n    }\n  }, [window?.location?.hash, markStepStarted, selectedStep, steps])\n\n  function getDataPayload() {\n    const data = formData[steps[selectedStep].id] ?? {}\n    return {\n      data: data,\n      stepId: steps[selectedStep].id,\n      customVariables: customVariables,\n    }\n  }\n\n  function handleStepCompletionHandlers(step: StepData, cta: 'primary' | 'secondary', idx: number) {\n    const maybeNextStep = selectedStep + 1 < steps.length ? steps[selectedStep + 1] : null\n    if (onStepCompletion) {\n      onStepCompletion(step, idx, maybeNextStep, formData, getDataPayload())\n    }\n    if (onButtonClick) {\n      return onButtonClick(step, selectedStep, cta, maybeNextStep)\n    }\n    return true\n  }\n\n  function updateData(step: StepData, data: object) {\n    setFormData((prevState) => {\n      let newObj = {}\n      newObj[step.id] = data\n      return {\n        ...prevState,\n        ...newObj,\n      }\n    })\n  }\n\n  function FormContainerSidebar(props: { selectedStep: StepData }) {\n    if (props.selectedStep.imageUri) {\n      return (\n        <FormContainerSidebarImage\n          image={props.selectedStep.imageUri}\n          appearance={appearance}\n          className={getClassName('formContainerSidebarImage', appearance)}\n        />\n      )\n    }\n    return null\n  }\n\n  const formFooter = (\n    <FormFooter\n      step={steps[selectedStep]}\n      canContinue={canContinue && !isSaving}\n      formType={type}\n      selectedStep={selectedStep}\n      appearance={appearance}\n      onPrimaryClick={async () => {\n        setIsSaving(true)\n        if (validationHandler) {\n          const validationError = await validationHandler(\n            steps[selectedStep],\n            selectedStep,\n            steps[selectedStep + 1],\n            formData,\n            getDataPayload()\n          )\n          if (validationError) {\n            setErrorMessage(validationError)\n            setIsSaving(false)\n            return\n          } else {\n            setErrorMessage(null)\n          }\n        }\n        const payload = { ...getDataPayload() }\n        await markStepCompleted(flowId, steps[selectedStep].id, payload)\n        if (selectedStep + 1 < steps.length) {\n          await markStepStarted(flowId, steps[selectedStep + 1].id)\n        }\n        const shouldClose = handleStepCompletionHandlers(\n          steps[selectedStep],\n          'primary',\n          selectedStep\n        )\n        if (selectedStep + 1 >= steps.length) {\n          if (onComplete) {\n            onComplete()\n          }\n          if (onDismiss) {\n            onDismiss()\n          }\n          if (hideOnFlowCompletion && shouldClose) {\n            if (setVisible) {\n              setVisible(false)\n            }\n            setShowModal(false)\n          }\n          await markFlowCompleted(flowId)\n        }\n        primaryCTAClickSideEffects(steps[selectedStep])\n        setIsSaving(false)\n        // Set hash to stepid\n        if (window && allowBackNavigation && selectedStep + 1 < steps.length) {\n          window.location.hash = steps[selectedStep + 1].id\n        }\n      }}\n      onSecondaryClick={() => {\n        handleStepCompletionHandlers(steps[selectedStep], 'secondary', selectedStep)\n        secondaryCTAClickSideEffects(steps[selectedStep])\n      }}\n      onBack={async () => {\n        if (selectedStep - 1 >= 0) {\n          setIsSaving(true)\n          await markStepStarted(flowId, steps[selectedStep - 1].id)\n          setIsSaving(false)\n        }\n      }}\n      steps={steps}\n      allowBackNavigation={allowBackNavigation}\n      errorMessage={errorMessage}\n    />\n  )\n\n  return (\n    <>\n      <FormContainer className={getClassName('formContainer', appearance)}>\n        <FormContainerMain>\n          <AnimationWrapper id={selectedStep} shouldWrap={type === 'large-modal'}>\n            <FormContainerWrapper\n              key={currentStep.id}\n              type={type}\n              className={getClassName('formContent', appearance)}\n            >\n              {steps.map((step) => {\n                const StepComponent = mergedCustomStepTypes[step.type]\n\n                if (currentStep.id !== step.id) {\n                  return null\n                }\n\n                return (\n                  <StepComponent\n                    key={step.id}\n                    stepData={step}\n                    canContinue={canContinue}\n                    setCanContinue={setCanContinue}\n                    onSaveData={(data) => {\n                      updateData(step, data)\n                    }}\n                    appearance={appearance}\n                    customFormElements={customFormElements}\n                    flowId={flowId}\n                  />\n                )\n              })}\n              {showPagination && (\n                <FormPagination\n                  className={getClassName('formPagination', appearance)}\n                  appearance={appearance}\n                  stepCount={steps.length}\n                  currentStep={selectedStep}\n                />\n              )}\n              {formFooter}\n            </FormContainerWrapper>\n          </AnimationWrapper>\n        </FormContainerMain>\n        {type == 'large-modal' && <FormContainerSidebar selectedStep={steps[selectedStep]} />}\n      </FormContainer>\n    </>\n  )\n}\n","import React from 'react'\nimport { Appearance } from '../types'\nimport { createGlobalStyle } from 'styled-components'\nimport { CUSTOM_CSS_STYLES_PREFIX, toKebabKey } from '../shared/appearance'\n\nexport function RenderInlineStyles({ appearance }: { appearance?: Appearance }) {\n  if (!appearance || !appearance.styleOverrides) {\n    return <></>\n  }\n  const inlineStyles = Object.entries(appearance.styleOverrides).filter(([_, value]) => {\n    return typeof value === 'object'\n  })\n\n  if (inlineStyles.length === 0) {\n    return <></>\n  }\n\n  const GlobalStyleComponent = createGlobalStyle`\n${(props) =>\n  props.inlineStyles\n    .map(([key, value]) => {\n      return `.${CUSTOM_CSS_STYLES_PREFIX}${key}.${CUSTOM_CSS_STYLES_PREFIX}${key} { ${Object.entries(\n        value\n      )\n        .map(([key, value]) => {\n          let kebabKey = toKebabKey(key)\n\n          return `${kebabKey}: ${value};`\n        })\n        .join(' ')} }`\n    })\n    .join(' ')}`\n\n  return <GlobalStyleComponent inlineStyles={inlineStyles} />\n}\n","import React, { useCallback, useContext, useEffect } from 'react'\nimport { FrigadeContext } from '../FrigadeProvider'\nimport { useCheckHasInitiatedAPI, useConfig, useGracefulFetch } from './common'\nimport { useUserFlowStates } from './user-flow-states'\nimport { GUEST_PREFIX } from './users'\nimport { EntityProperties } from '../FrigadeForm/types'\n\ninterface AddPropertyToOrganizationDTO {\n  readonly foreignUserId: string\n  readonly foreignUserGroupId: string\n  readonly properties?: { [key: string]: string | boolean | number | null }\n  readonly events?: OrganizationEvent[]\n}\n\ninterface OrganizationEvent {\n  readonly event: string\n  readonly properties?: { [key: string]: string | boolean | number | null }\n}\n\nexport function useOrganization() {\n  const { organizationId, userId, setOrganizationId } = useContext(FrigadeContext)\n  const { mutateUserFlowState } = useUserFlowStates()\n  const { config, apiUrl } = useConfig()\n  const gracefullyFetch = useGracefulFetch()\n  const { verifySDKInitiated } = useCheckHasInitiatedAPI()\n\n  useEffect(() => {\n    // Check if user is not a guest\n\n    if (userId && organizationId) {\n      // Check if userid begins with the guest prefix\n      if (userId.startsWith(GUEST_PREFIX)) {\n        return\n      }\n      const userRegisteredKey = `frigade-user-group-registered-${userId}-${organizationId}`\n      // Check if user has already been registered in frigade\n      if (!localStorage.getItem(userRegisteredKey)) {\n        // Register user in frigade\n        gracefullyFetch(`${apiUrl}userGroups`, {\n          ...config,\n          method: 'POST',\n          body: JSON.stringify({ foreignUserId: userId, foreignUserGroupId: organizationId }),\n        })\n        // Mark user as registered in frigade\n        localStorage.setItem(userRegisteredKey, 'true')\n      }\n    }\n  }, [userId, organizationId])\n\n  const addPropertiesToOrganization = useCallback(\n    async (properties: EntityProperties) => {\n      if (!verifySDKInitiated()) {\n        return\n      }\n      if (!organizationId || !userId) {\n        console.error(\n          'Cannot add properties to organization: Organization ID and User ID must both be set.',\n          { organizationId, userId }\n        )\n        return\n      }\n\n      const data: AddPropertyToOrganizationDTO = {\n        foreignUserId: userId,\n        foreignUserGroupId: organizationId,\n        properties,\n      }\n      await gracefullyFetch(`${apiUrl}userGroups`, {\n        ...config,\n        method: 'POST',\n        body: JSON.stringify(data),\n      })\n      mutateUserFlowState()\n    },\n    [organizationId, userId, config, mutateUserFlowState]\n  )\n\n  const trackEventForOrganization = useCallback(\n    async (event: string, properties?: EntityProperties) => {\n      if (!verifySDKInitiated()) {\n        return\n      }\n      if (!organizationId || !userId) {\n        console.error(\n          'Cannot track event for organization: Organization ID and User ID must both be set.',\n          { organizationId, userId }\n        )\n        return\n      }\n      const eventData: OrganizationEvent = {\n        event,\n        properties,\n      }\n      const data: AddPropertyToOrganizationDTO = {\n        foreignUserId: userId,\n        foreignUserGroupId: organizationId,\n        events: [eventData],\n      }\n      await gracefullyFetch(`${apiUrl}userGroups`, {\n        ...config,\n        method: 'POST',\n        body: JSON.stringify(data),\n      })\n      mutateUserFlowState()\n    },\n    [organizationId, userId, config, mutateUserFlowState]\n  )\n\n  return {\n    organizationId,\n    setOrganizationId,\n    addPropertiesToOrganization,\n    trackEventForOrganization,\n  }\n}\n","import structuredClone from 'core-js-pure/actual/structured-clone'\n\nfunction isObject(obj) {\n  return typeof obj === 'object' && obj !== null && !Array.isArray(obj)\n}\n\nexport function deepmerge(...args) {\n  const target = args.shift()\n\n  // Recurse to the right until we've merged all the way back to a single target and source\n  const source = args.length === 1 ? args[0] : deepmerge(...args)\n\n  if (!isObject(target) || !isObject(source)) {\n    throw new Error('deepmerge can only merge Objects')\n  }\n\n  const result = structuredClone(target)\n\n  Object.entries(source).forEach(([key, value]) => {\n    // Is value an Object, i.e. are we at risk of passing by reference?\n    if (isObject(value)) {\n      // Does key already exist in result?\n      if (result[key] !== undefined) {\n        // Deepmerge it on\n        Object.assign(result, { [key]: deepmerge(result[key], structuredClone(value)) })\n      } else {\n        // Else clone value onto result\n        Object.assign(result, { [key]: structuredClone(value) })\n      }\n    } else if (Array.isArray(value)) {\n      // Does key already exist in result?\n      if (result[key] !== undefined) {\n        // Clone and spread onto existing\n        // TODO: This only shallow-merges arrays. Add ability to deep merge here, so nested structures aren't overwritten\n        Object.assign(result, { [key]: [...result[key], ...structuredClone(value)] })\n      } else {\n        // Else spread array onto result\n        Object.assign(result, { [key]: structuredClone(value) })\n      }\n    } else {\n      // Assign value onto result\n      Object.assign(result, { [key]: value })\n    }\n  })\n\n  return result\n}\n","import { deepmerge } from './deepmerge'\n\nconst THEME_MAP = {\n  // { oldThemeKey: 'path.to.new.theme.token' }\n  colorPrimary: 'colors.primary.background',\n  colorText: 'colors.neutral.foreground',\n  colorBackground: 'colors.neutral.background',\n  colorBackgroundSecondary: 'colors.secondary.background',\n  colorTextOnPrimaryBackground: 'colors.primary.foreground',\n  colorTextSecondary: 'colors.secondary.foreground',\n  colorTextDisabled: 'colors.gray700',\n  colorBorder: 'colors.gray800',\n  colorTextError: 'colors.negative.foreground',\n  borderRadius: 'radii.lg',\n}\n\n// Convert appearance.theme prop (old) to theme tokens for overrides prop (new)\nfunction themeToTokens(theme) {\n  if (!theme) return undefined\n\n  const overrides = {}\n\n  Object.entries(theme).forEach(([key, value]) => {\n    if (THEME_MAP[key]) {\n      // Step 1: 'foo.bar.baz' -> ['foo', 'bar', 'baz']\n      const levels = THEME_MAP[key].split('.')\n\n      // Step 2: ['foo', 'bar', 'baz'] -> { foo: { bar: { baz: value } } }\n      let currentLevel = overrides\n      levels.forEach((nextLevel, i) => {\n        if (!currentLevel[nextLevel]) {\n          currentLevel[nextLevel] = i === levels.length - 1 ? value : {}\n        }\n\n        currentLevel = currentLevel[nextLevel]\n      })\n    }\n  })\n\n  return overrides\n}\n\nfunction styleOverridesToCSS(styleOverrides) {\n  // Walk overrides and convert them to CSS descendent selectors\n  // ...that's pretty much it?\n  if (!styleOverrides) return undefined\n\n  // We don't want to reference the original object\n  const copiedOverrides = deepmerge({}, styleOverrides)\n\n  const css = {}\n\n  Object.keys(copiedOverrides).forEach((oldSelector) => {\n    const newSelector = `.fr-${oldSelector}`\n\n    css[newSelector] = copiedOverrides[oldSelector]\n  })\n\n  return css\n}\n\nexport function appearanceToOverrides(appearance) {\n  const { theme, styleOverrides } = appearance\n\n  const overrides = themeToTokens(theme)\n  const css = styleOverridesToCSS(styleOverrides)\n\n  return {\n    overrides,\n    css,\n  }\n}\n","import styled from 'styled-components'\nimport { compose, variant } from 'styled-system'\n\nimport { Box } from '../Box'\n\nexport const buttonVariants = {\n  Primary: {\n    backgroundColor: 'primary.background',\n    color: 'primary.foreground',\n\n    '&:hover': {\n      backgroundColor: 'blue400',\n    },\n  },\n  Secondary: {\n    backgroundColor: 'white',\n    border: '1px solid',\n    borderColor: 'gray800',\n    color: 'neutral.foreground',\n\n    '&:hover': {\n      backgroundColor: 'blue900',\n    },\n  },\n  Link: {\n    backgroundColor: 'transparent',\n    color: 'primary.inverted',\n  },\n  Plain: {\n    backgroundColor: 'transparent',\n    color: 'neutral.foreground',\n  },\n} as const\n\nexport const buttonSizes = {\n  sm: {\n    paddingX: 4,\n    paddingY: 1,\n  },\n  md: {\n    paddingX: 6,\n    paddingY: 2,\n  },\n}\n\nexport const StyledButton = styled(Box)(\n  () => ({\n    whiteSpace: 'nowrap',\n  }),\n  compose(\n    variant({\n      scale: 'components.Button',\n      variants: 'components.Button',\n    }),\n    variant({\n      prop: 'size',\n      variants: buttonSizes,\n    })\n  )\n)\n\n// export type ButtonVariant = keyof typeof buttonVariants\n// export type ButtonSize = keyof typeof buttonSizes\n","import React, { ComponentPropsWithoutRef, CSSProperties, ElementType, ReactNode } from 'react'\nimport styled, { ThemeProvider, useTheme } from 'styled-components'\nimport {\n  border,\n  BorderProps,\n  color,\n  ColorProps,\n  compose,\n  get,\n  LayoutProps,\n  shadow,\n  ShadowProps,\n  space,\n  SpaceProps,\n  system,\n  typography,\n  TypographyProps,\n} from 'styled-system'\nimport { deepmerge } from '../../shared/deepmerge'\n\ninterface Overrides extends Record<string, Overrides | CSSProperties> {}\n\n// Drop the size property from layout props, it conflicts with our own size prop\n// SEE: https://github.com/styled-system/styled-system/blob/master/packages/layout/src/index.js\nconst layoutWithoutSize = {\n  width: {\n    property: 'width',\n    scale: 'sizes',\n    transform: (n, scale) =>\n      get(scale, n, !(typeof n === 'number' && !isNaN(n)) || n > 1 ? n : n * 100 + '%'),\n  },\n  height: {\n    property: 'height',\n    scale: 'sizes',\n  },\n  minWidth: {\n    property: 'minWidth',\n    scale: 'sizes',\n  },\n  minHeight: {\n    property: 'minHeight',\n    scale: 'sizes',\n  },\n  maxWidth: {\n    property: 'maxWidth',\n    scale: 'sizes',\n  },\n  maxHeight: {\n    property: 'maxHeight',\n    scale: 'sizes',\n  },\n  overflow: true,\n  overflowX: true,\n  overflowY: true,\n  display: true,\n  verticalAlign: true,\n}\n\nexport type BoxProps<T extends ElementType = 'div'> = {\n  as?: T\n  css?: Record<string, any> // TODO: Fix any\n  children?: ReactNode\n  overrides?: Overrides\n} & BorderProps &\n  ColorProps &\n  Exclude<LayoutProps, 'size'> &\n  ShadowProps &\n  SpaceProps &\n  TypographyProps &\n  ComponentPropsWithoutRef<T>\n\nconst StyledBox = styled('div')(\n  ({ css }) => css,\n  compose(border, color, shadow, space, typography, system(layoutWithoutSize))\n)\n\nexport const Box = <T extends React.ElementType = 'div'>({\n  as,\n  children,\n  overrides,\n  ...rest\n}: BoxProps<T>) => {\n  const theme = useTheme()\n\n  const styleResetProps = {\n    border: 'none',\n    boxSizing: 'border-box',\n    m: 0,\n    p: 0,\n  }\n\n  const renderBox = () => (\n    <StyledBox as={as} {...styleResetProps} {...rest}>\n      {children}\n    </StyledBox>\n  )\n\n  if (overrides !== undefined) {\n    const newTheme = deepmerge(theme, overrides)\n\n    return <ThemeProvider theme={newTheme}>{renderBox()}</ThemeProvider>\n  }\n\n  return renderBox()\n}\n","import styled from 'styled-components'\nimport { variant, system } from 'styled-system'\n\nimport { Box } from '../Box'\n\nexport const textVariants = {\n  Display1: {\n    fontSize: '5xl',\n    fontWeight: 'bold',\n    letterSpacing: 'md',\n    lineHeight: '4xl',\n  },\n  Display2: {\n    fontSize: '4xl',\n    fontWeight: 'bold',\n    letterSpacing: 'md',\n    lineHeight: '3xl',\n  },\n  H1: {\n    fontSize: '3xl',\n    fontWeight: 'bold',\n    letterSpacing: 'md',\n    lineHeight: '2xl',\n  },\n  H2: {\n    fontSize: '2xl',\n    fontWeight: 'bold',\n    letterSpacing: 'md',\n    lineHeight: 'xl',\n  },\n  H3: {\n    fontSize: 'xl',\n    fontWeight: 'bold',\n    letterSpacing: 'md',\n    lineHeight: 'lg',\n  },\n  H4: {\n    fontSize: 'lg',\n    fontWeight: 'bold',\n    letterSpacing: 'md',\n    lineHeight: 'md',\n  },\n  Body1: {\n    fontSize: 'md',\n    fontWeight: 'regular',\n    letterSpacing: 'md',\n    lineHeight: 'md',\n  },\n  Body2: {\n    fontSize: 'sm',\n    fontWeight: 'regular',\n    letterSpacing: 'md',\n    lineHeight: 'md',\n  },\n  Caption: {\n    fontSize: 'xs',\n    fontWeight: 'regular',\n    letterSpacing: 'md',\n    lineHeight: 'sm',\n  },\n} as const\n\nexport const fontWeights = {\n  regular: 400,\n  semibold: 600,\n  bold: 700,\n}\n\nexport const StyledText = styled(Box)(\n  variant({\n    scale: 'components.Text',\n    variants: 'components.Text',\n  }),\n  system({\n    fontWeight: {\n      property: 'fontWeight',\n      scale: 'fontWeights',\n    },\n  })\n)\n","import { buttonVariants } from '../components/Button/Button.styles'\nimport { textVariants } from '../components/Text/Text.styles'\n\nconst SPACE_VALUE = 4\nconst SPACE_UNIT = 'px'\nconst SPACE_SCALE_EXTENT = 20\n\n// Fill an array with SPACE_SCALE_EXTENT multiples of SPACE_VALUE\nconst spaceScale = Object.fromEntries(\n  Array.from(Array(SPACE_SCALE_EXTENT + 1), (_, i) => {\n    // Just a cute lil' 0.5 space would you look at this tiny guy over here\n    if (i === 0) {\n      return [0.5, `${0.5 * SPACE_VALUE}${SPACE_UNIT}`]\n    }\n\n    return [i, `${i * SPACE_VALUE}${SPACE_UNIT}`]\n  })\n)\n\nconst palette = {\n  black: '#0F1114',\n  gray100: '#14161A',\n  gray200: '#181B20',\n  gray300: '#1F2329',\n  gray400: '#2E343D',\n  gray500: '#4C5766',\n  gray600: '#5A6472',\n  gray700: '#C5CBD3',\n  gray800: '#E2E5E9',\n  gray900: '#F1F2F4',\n  white: '#ffffff',\n  blue400: '#015AC6',\n  blue500: '#0171F8',\n  blue800: '#DBECFF',\n  blue900: '#F5F9FF',\n  green400: '#009E37',\n  green500: '#00D149',\n  green800: '#DBFFE8',\n  transparent: '#FFFFFF00',\n\n  // This color isn't in the Design System yet, but it's used in old components\n  red500: '#c00000',\n}\n\nexport const tokens = {\n  colors: {\n    ...palette,\n\n    neutral: {\n      foreground: palette.gray300,\n    },\n    primary: {\n      background: palette.blue500,\n      foreground: palette.white,\n      inverted: palette.blue500,\n    },\n    negative: {\n      foreground: palette.red500,\n    },\n  },\n  fonts: {\n    default: 'TT Interphases Pro, sans-serif',\n  },\n  fontSizes: {\n    xs: '12px',\n    sm: '14px',\n    md: '16px',\n    lg: '18px',\n    xl: '20px',\n    '2xl': '24px',\n    '3xl': '30px',\n    '4xl': '36px',\n    '5xl': '48px',\n  },\n  fontWeights: {\n    regular: 400,\n    semibold: 500,\n    bold: 700,\n  },\n  letterSpacings: {\n    md: '0.02em',\n  },\n  lineHeights: {\n    xs: '18px',\n    sm: '22px',\n    md: '24px',\n    lg: '26px',\n    xl: '30px',\n    '2xl': '38px',\n    '3xl': '46px',\n    '4xl': '60px',\n  },\n  radii: {\n    md: '8px',\n    lg: '20px',\n    round: '50%',\n  },\n  shadows: {\n    md: '0px 4px 20px rgba(0, 0, 0, 0.06)',\n  },\n  space: spaceScale,\n  components: {\n    Button: buttonVariants,\n    Text: textVariants,\n  },\n}\n","import React, { CSSProperties } from 'react'\nimport { FrigadeChecklist } from '../../FrigadeChecklist'\nimport { HeroChecklistProps } from '../Checklists/HeroChecklist'\nimport { StepData } from '../../types'\n\nexport interface FrigadeHeroChecklistProps extends HeroChecklistProps {\n  flowId: string\n  title?: string\n  subtitle?: string\n  primaryColor?: string\n\n  onCompleteStep?: (index: number, stepData: StepData) => void\n  style?: CSSProperties\n  // Optional props\n  initialSelectedStep?: number\n\n  className?: string\n}\n\nexport const FrigadeHeroChecklist: React.FC<FrigadeHeroChecklistProps> = (props) => {\n  return <FrigadeChecklist type=\"inline\" {...props} />\n}\n","import React, { CSSProperties, useEffect, useState } from 'react'\n\nimport { useFlows } from '../api/flows'\nimport { HeroChecklist, HeroChecklistProps } from '../components/Checklists/HeroChecklist'\nimport { StepData } from '../types'\nimport { COMPLETED_FLOW, COMPLETED_STEP } from '../api/common'\nimport { useFlowOpens } from '../api/flow-opens'\nimport { RenderInlineStyles } from '../components/RenderInlineStyles'\n\nimport { ChecklistWithGuide } from '../components/Checklists/ChecklistWithGuide'\nimport { useCTAClickSideEffects } from '../hooks/useCTAClickSideEffects'\nimport { useTheme } from '../hooks/useTheme'\nimport { useMediaQuery } from '../hooks/useMediaQuery'\nimport { CondensedChecklist } from '../components/Checklists/CondensedChecklist'\nimport { Modal } from '../components/Modal'\nimport { CarouselChecklist } from '../components/Checklists/CarouselChecklist'\n\nexport interface FrigadeChecklistProps extends HeroChecklistProps {\n  flowId: string\n  title?: string\n  subtitle?: string\n\n  style?: CSSProperties\n  // Optional props\n  /** @ignore */\n  initialSelectedStep?: number\n\n  className?: string\n  type?: 'inline' | 'modal'\n  checklistStyle?: 'with-guide' | 'default' | 'condensed' | 'carousel'\n\n  visible?: boolean\n  setVisible?: (visible: boolean) => void\n\n  onDismiss?: () => void\n\n  /**\n   * See https://docs.frigade.com/flows/dynamic-variables\n   */\n  customVariables?: { [key: string]: string | number | boolean }\n\n  /**\n   * Flow ID referencing the flow of a guide/link collection to attach to this Checklist\n   */\n  guideFlowId?: string\n  /**\n   * Title for the guide (if attached)\n   */\n  guideTitle?: string\n\n  autoExpandFirstIncompleteStep?: boolean\n  autoExpandNextStep?: boolean\n}\n\nexport const FrigadeChecklist: React.FC<FrigadeChecklistProps> = ({\n  flowId,\n  title,\n  subtitle,\n  style,\n  initialSelectedStep,\n  className,\n  type = 'inline',\n  onDismiss,\n  visible,\n  customVariables,\n  onStepCompletion,\n  onButtonClick,\n  appearance,\n  hideOnFlowCompletion,\n  setVisible,\n  customStepTypes,\n  checklistStyle = 'default',\n  autoExpandFirstIncompleteStep,\n  autoExpandNextStep,\n  ...guideProps\n}) => {\n  const {\n    getFlow,\n    getFlowSteps,\n    markStepCompleted,\n    getStepStatus,\n    getNumberOfStepsCompleted,\n    isLoading,\n    targetingLogicShouldHideFlow,\n    updateCustomVariables,\n    getFlowMetadata,\n    isStepBlocked,\n    getFlowStatus,\n    hasActiveFullPageFlow,\n    setHasActiveFullPageFlow,\n  } = useFlows()\n  const { primaryCTAClickSideEffects, secondaryCTAClickSideEffects } = useCTAClickSideEffects()\n  const { getOpenFlowState, setOpenFlowState } = useFlowOpens()\n  const [selectedStep, setSelectedStep] = useState(initialSelectedStep || 0)\n  const [finishedInitialLoad, setFinishedInitialLoad] = useState(false)\n  const showModal = visible === undefined ? getOpenFlowState(flowId) : visible\n  const isModal = type === 'modal'\n  const { mergeAppearanceWithDefault } = useTheme()\n  const { isLarge } = useMediaQuery()\n\n  appearance = mergeAppearanceWithDefault(appearance)\n\n  useEffect(() => {\n    updateCustomVariables(customVariables)\n  }, [customVariables, isLoading])\n\n  useEffect(() => {\n    if (visible !== undefined) {\n      if (isModal && visible === true) {\n        setHasActiveFullPageFlow(true)\n      } else if (isModal && visible === false) {\n        setHasActiveFullPageFlow(false)\n      }\n    }\n  }, [visible, setVisible, hasActiveFullPageFlow])\n\n  if (isLoading) {\n    return null\n  }\n\n  const flow = getFlow(flowId)\n  if (!flow) {\n    return null\n  }\n\n  if (targetingLogicShouldHideFlow(flow)) {\n    return null\n  }\n\n  const steps = getFlowSteps(flowId)\n  if (!steps) {\n    return null\n  }\n\n  if (hideOnFlowCompletion === true && getFlowStatus(flowId) === COMPLETED_FLOW) {\n    return null\n  }\n\n  const metaData = getFlowMetadata(flowId)\n  if (metaData?.title) {\n    title = metaData.title\n  }\n  if (metaData?.subtitle) {\n    subtitle = metaData.subtitle\n  }\n\n  if (\n    !finishedInitialLoad &&\n    initialSelectedStep === undefined &&\n    getNumberOfStepsCompleted(flowId) > 0\n  ) {\n    const firstIncompleteStep = steps.findIndex((step) => step.complete === false)\n    setSelectedStep(firstIncompleteStep > -1 ? firstIncompleteStep : steps.length - 1)\n    setFinishedInitialLoad(true)\n  }\n\n  function goToNextStepIfPossible() {\n    if (selectedStep + 1 >= steps.length) {\n      // If modal, close it\n      if (isModal) {\n        setOpenFlowState(flowId, false)\n      }\n      return\n    }\n    // Double check next step is not blocked\n    if (isStepBlocked(flowId, steps[selectedStep + 1].id)) {\n      return\n    }\n\n    setSelectedStep(selectedStep + 1)\n  }\n\n  function handleStepCompletionHandlers(\n    step: StepData,\n    cta: 'primary' | 'secondary' | 'link',\n    idx: number\n  ) {\n    const maybeNextStep = selectedStep + 1 < steps.length ? steps[selectedStep + 1] : null\n    if (onButtonClick) {\n      const completion = onButtonClick(step, selectedStep, cta, maybeNextStep)\n      if (completion === true && isModal) {\n        handleClose()\n      }\n    }\n    if (onStepCompletion) {\n      onStepCompletion(step, idx, maybeNextStep)\n    }\n    if (!onStepCompletion && !onButtonClick && (step.primaryButtonUri || step.secondaryButtonUri)) {\n      if (isModal) {\n        handleClose()\n      }\n    }\n  }\n\n  function getSteps() {\n    return steps.map((step: StepData, idx: number) => {\n      return {\n        ...step,\n        handleSecondaryButtonClick: () => {\n          // Default to skip behavior for secondary click but allow for override\n          goToNextStepIfPossible()\n          secondaryCTAClickSideEffects(step)\n          if (step.skippable === true) {\n            markStepCompleted(flowId, step.id, { skipped: true })\n          }\n          handleStepCompletionHandlers(step, 'secondary', idx)\n        },\n        handlePrimaryButtonClick: () => {\n          if (\n            (!step.completionCriteria &&\n              (step.autoMarkCompleted || step.autoMarkCompleted === undefined)) ||\n            (step.completionCriteria && step.autoMarkCompleted === true)\n          ) {\n            markStepCompleted(flowId, step.id)\n            goToNextStepIfPossible()\n          }\n          handleStepCompletionHandlers(step, 'primary', idx)\n          primaryCTAClickSideEffects(step)\n          // If step is done, try to go to next step\n          if (getStepStatus(flowId, step.id) === COMPLETED_STEP) {\n            goToNextStepIfPossible()\n          }\n        },\n      }\n    })\n  }\n\n  function CommonDom() {\n    return <RenderInlineStyles appearance={appearance} />\n  }\n\n  const commonProps = {\n    steps: getSteps(),\n    title,\n    subtitle,\n    primaryColor: appearance.theme.colorPrimary,\n    appearance,\n    customStepTypes,\n    type,\n    className,\n    autoExpandFirstIncompleteStep,\n    autoExpandNextStep,\n  }\n\n  function handleClose() {\n    setOpenFlowState(flowId, false)\n    if (onDismiss) {\n      onDismiss()\n    }\n    if (setVisible) {\n      setVisible(false)\n    }\n  }\n\n  function getCarouselChecklist() {\n    return (\n      <>\n        <CommonDom />\n        <CarouselChecklist\n          flowId={flowId}\n          appearance={appearance}\n          customVariables={customVariables}\n          className={className}\n        />\n      </>\n    )\n  }\n\n  function getCondensedChecklist() {\n    return (\n      <>\n        <CommonDom />\n        <CondensedChecklist\n          visible={showModal}\n          onClose={() => {\n            handleClose()\n          }}\n          selectedStep={selectedStep}\n          setSelectedStep={setSelectedStep}\n          autoExpandNextStep={true}\n          appearance={appearance}\n          {...commonProps}\n        />\n      </>\n    )\n  }\n\n  function getChecklistWithGuide() {\n    if (!isLarge) {\n      return getCondensedChecklist()\n    }\n\n    const guideFlowId = guideProps.guideFlowId\n    let guideFlowSteps\n    if (guideFlowId) {\n      const guideFlow = getFlow(guideFlowId)\n      if (guideFlow) {\n        guideFlowSteps = getFlowSteps(guideFlowId)\n      }\n    }\n\n    return (\n      <>\n        <CommonDom />\n        <ChecklistWithGuide\n          visible={showModal}\n          stepsTitle={metaData.stepsTitle ? metaData.stepsTitle : 'Your quick start guide'}\n          onClose={() => {\n            handleClose()\n          }}\n          selectedStep={selectedStep}\n          setSelectedStep={setSelectedStep}\n          guideData={guideFlowSteps}\n          guideTitle={guideProps.guideTitle ?? 'Guide'}\n          appearance={appearance}\n          title={title}\n          subtitle={subtitle}\n          onGuideButtonClick={(step) => {\n            handleStepCompletionHandlers(step, 'link', 0)\n          }}\n          customStepTypes={customStepTypes}\n          {...commonProps}\n        />\n      </>\n    )\n  }\n\n  function getDefaultChecklist() {\n    if (!isLarge) {\n      return getCondensedChecklist()\n    }\n\n    const checklist = (\n      <HeroChecklist\n        flowId={flowId}\n        style={style}\n        selectedStep={selectedStep}\n        setSelectedStep={setSelectedStep}\n        appearance={appearance}\n        type={type}\n        {...commonProps}\n      />\n    )\n\n    if (!isModal) {\n      return (\n        <>\n          <CommonDom />\n          {checklist}\n        </>\n      )\n    }\n\n    return (\n      <Modal\n        onClose={() => {\n          handleClose()\n        }}\n        visible={showModal}\n        appearance={appearance}\n        style={{\n          paddingTop: '0px',\n          padding: '12px',\n          paddingLeft: 0,\n        }}\n      >\n        <CommonDom />\n        {checklist}\n      </Modal>\n    )\n  }\n\n  switch (checklistStyle) {\n    case 'condensed':\n      return getCondensedChecklist()\n    case 'with-guide':\n      return getChecklistWithGuide()\n    case 'default':\n      return getDefaultChecklist()\n    case 'carousel':\n      return getCarouselChecklist()\n    default:\n      return getDefaultChecklist()\n  }\n}\n","import React, { FC, useState } from 'react'\n\nimport styled from 'styled-components'\nimport { StepChecklistItem } from './StepChecklistItem'\nimport { ProgressBar } from '../Checklist/ProgressBar'\nimport { Appearance, DefaultFrigadeFlowProps, StepData } from '../../../types'\nimport {\n  HERO_STEP_CONTENT_TYPE,\n  HeroStepContent,\n} from '../../checklist-step-content/HeroStepContent'\nimport { VIDEO_CAROUSEL_TYPE, VideoCarousel } from '../../checklist-step-content/VideoCarousel'\nimport {\n  CODE_SNIPPET_CONTENT_TYPE,\n  CodeSnippetContent,\n} from '../../checklist-step-content/CodeSnippetContent'\nimport { useTheme } from '../../../hooks/useTheme'\nimport { FrigadeChecklistProps } from '../../../FrigadeChecklist'\nimport { getClassName } from '../../../shared/appearance'\n\nexport interface HeroChecklistProps extends Omit<DefaultFrigadeFlowProps, 'flowId'> {\n  title?: string\n  subtitle?: string\n  /**\n   * @deprecated Use `appearance` instead\n   * @ignore\n   */\n  primaryColor?: string\n  /** @ignore */\n  steps?: StepData[]\n\n  /** @ignore */\n  selectedStep?: number\n  /** @ignore */\n  setSelectedStep?: (index: number) => void\n\n  /**\n   * Map from string to function with StepData returning React.ReactNode\n   */\n  customStepTypes?: Record<string, (stepData: StepData, appearance: Appearance) => React.ReactNode>\n}\n\nconst HeroChecklistContainer = styled.div<{ appearance }>`\n  display: flex;\n  flex-direction: row;\n  min-width: ${(props) => (props.type != 'modal' ? '1000px' : '100%')};\n  background: ${(props) => props.appearance?.theme.colorBackground};\n  box-shadow: ${(props) => (props.type != 'modal' ? '0px 6px 25px rgba(0, 0, 0, 0.06)' : 'none')};\n  border-radius: 8px;\n`\n\nconst HeroChecklistTitle = styled.h1<{ appearance }>`\n  font-size: 24px;\n  font-weight: 600;\n  color: ${(props) => props.appearance?.theme?.colorText};\n`\n\nconst HeroChecklistSubtitle = styled.h2`\n  font-size: 15px;\n  line-height: 28px;\n  color: ${(props) => props.appearance?.theme?.colorTextSecondary ?? '#4d4d4d'};\n  margin: 10px 0px 0px 0px;\n`\n\nconst ChecklistHeader = styled.div`\n  padding-bottom: 16px;\n`\n\nconst ChecklistStepsContainer = styled.div`\n  list-style: none;\n  padding: 0;\n  margin: 0;\n  cursor: pointer;\n  width: 300px;\n`\n\nconst Divider = styled.div`\n  width: 1px;\n  margin: 40px;\n  background: ${(props) => props.appearance?.theme?.colorBorder};\n`\n\nconst HeroChecklistStepContentContainer = styled.div`\n  flex: 2;\n  padding: 2rem;\n`\n\nconst HeroChecklist: FC<FrigadeChecklistProps> = ({\n  title,\n  subtitle,\n  steps = [],\n  style = {},\n  selectedStep,\n  setSelectedStep,\n  className = '',\n  customStepTypes = new Map(),\n  appearance,\n  type,\n}) => {\n  const { mergeAppearanceWithDefault } = useTheme()\n  appearance = mergeAppearanceWithDefault(appearance)\n\n  const DEFAULT_CUSTOM_STEP_TYPES = {\n    [HERO_STEP_CONTENT_TYPE]: HeroStepContent,\n    [VIDEO_CAROUSEL_TYPE]: VideoCarousel,\n    [CODE_SNIPPET_CONTENT_TYPE]: CodeSnippetContent,\n  }\n\n  const mergedCustomStepTypes = {\n    ...DEFAULT_CUSTOM_STEP_TYPES,\n    ...customStepTypes,\n  }\n\n  const [selectedStepInternal, setSelectedStepInternal] = useState(0)\n\n  const selectedStepValue = selectedStep ?? selectedStepInternal\n  const setSelectedStepValue = setSelectedStep ?? setSelectedStepInternal\n\n  const completeCount = steps.filter((s) => s.complete === true).length\n\n  const StepContent = () => {\n    if (!steps[selectedStepValue]?.type || !mergedCustomStepTypes[steps[selectedStepValue].type]) {\n      return mergedCustomStepTypes[HERO_STEP_CONTENT_TYPE]({\n        stepData: steps[selectedStepValue],\n        appearance: appearance,\n      })\n    }\n    return mergedCustomStepTypes[steps[selectedStepValue].type]({\n      stepData: steps[selectedStepValue],\n      appearance: appearance,\n    })\n  }\n\n  return (\n    <HeroChecklistContainer type={type} style={style} className={className} appearance={appearance}>\n      <ChecklistHeader style={{ flex: 1 }}>\n        <ChecklistHeader style={{ padding: '30px 0px 30px 30px', borderBottom: 'none' }}>\n          <HeroChecklistTitle\n            className={getClassName('checklistTitle', appearance)}\n            appearance={appearance}\n          >\n            {title}\n          </HeroChecklistTitle>\n          <HeroChecklistSubtitle\n            className={getClassName('checklistSubtitle', appearance)}\n            appearance={appearance}\n          >\n            {subtitle}\n          </HeroChecklistSubtitle>\n          <ProgressBar\n            total={steps.length}\n            count={completeCount}\n            fillColor={appearance.theme.colorPrimary}\n            style={{ marginTop: '24px' }}\n            appearance={appearance}\n          />\n        </ChecklistHeader>\n        <ChecklistStepsContainer className={getClassName('checklistStepsContainer', appearance)}>\n          {steps.map((s: StepData, idx: number) => {\n            return (\n              <StepChecklistItem\n                data={s}\n                index={idx}\n                key={idx}\n                listLength={steps.length}\n                isSelected={idx === selectedStepValue}\n                primaryColor={appearance.theme.colorPrimary}\n                style={{ justifyContent: 'space-between' }}\n                onClick={() => {\n                  setSelectedStepValue(idx)\n                }}\n              />\n            )\n          })}\n        </ChecklistStepsContainer>\n      </ChecklistHeader>\n      <Divider appearance={appearance} className={getClassName('checklistDivider', appearance)} />\n      <HeroChecklistStepContentContainer>\n        <StepContent />\n      </HeroChecklistStepContentContainer>\n    </HeroChecklistContainer>\n  )\n}\n\nexport default HeroChecklist\n","import React, { CSSProperties, FC } from 'react'\nimport { CheckBoxRow } from '../../CheckBoxRow'\nimport { motion } from 'framer-motion'\nimport { Appearance, StepData } from '../../../types'\nimport { ChecklistStepItem, StepItemSelectedIndicator } from './styled'\nimport { getClassName } from '../../../shared/appearance'\n\ninterface StepItemProps {\n  data: StepData\n  index: number\n  listLength: number\n  isSelected: boolean\n  primaryColor: string\n  style: CSSProperties\n  onClick: () => void\n  appearance?: Appearance\n}\n\nexport const StepChecklistItem: FC<StepItemProps> = ({\n  data,\n  index,\n  isSelected,\n  primaryColor,\n  style,\n  onClick,\n  appearance,\n}) => {\n  return (\n    <div\n      style={{ position: 'relative', paddingLeft: '20px' }}\n      onClick={() => {\n        onClick()\n      }}\n    >\n      {isSelected && (\n        <StepItemSelectedIndicator\n          className={getClassName('checklistStepItemSelectedIndicator', appearance)}\n          as={motion.div}\n          layoutId=\"checklis-step-selected\"\n          style={{ backgroundColor: appearance?.theme?.colorPrimary ?? primaryColor }}\n        ></StepItemSelectedIndicator>\n      )}\n      <ChecklistStepItem\n        className={getClassName('checklistStepItem', appearance)}\n        key={`hero-checklist-step-${index}`}\n        role=\"listitem\"\n      >\n        <CheckBoxRow\n          value={data.complete}\n          labelPosition=\"left\"\n          label={data.stepName ?? data.title}\n          style={style}\n          primaryColor={appearance?.theme?.colorPrimary ?? primaryColor}\n          appearance={appearance}\n        />\n      </ChecklistStepItem>\n    </div>\n  )\n}\n","import React, { CSSProperties, FC } from 'react'\nimport styled from 'styled-components'\nimport { CheckBox, CheckBoxType } from '../CheckBox'\nimport { Appearance } from '../../types'\nimport { getClassName } from '../../shared/appearance'\nimport { RenderInlineStyles } from '../RenderInlineStyles'\n\ninterface CheckBoxRowProps {\n  label?: string\n  value: boolean\n  labelStyle?: CSSProperties\n  labelPosition?: 'left' | 'right'\n  style?: CSSProperties\n  primaryColor?: string\n  secondaryColor?: string\n  checkBoxType?: CheckBoxType\n  appearance?: Appearance\n}\n\nconst Label = styled.span`\n  font-weight: 400;\n  font-size: 15px;\n  line-height: 20px;\n  color: #4d4d4d;\n  display: inline-block;\n  vertical-align: middle;\n  margin-left: 12px;\n  padding-right: 12px;\n`\n\nconst CheckBoxRowContainer = styled.div`\n  flex-direction: row;\n  justify-content: space-between;\n  display: flex;\n  padding-top: 20px;\n  padding-bottom: 20px;\n  border-top: 1px solid ${(props) => props.theme.colorBorder};\n  width: 100%;\n`\n\nexport const CheckBoxRow: FC<CheckBoxRowProps> = ({\n  label,\n  value,\n  labelStyle = {},\n  labelPosition = 'right',\n  style,\n  primaryColor = '#000000',\n  checkBoxType = 'square',\n  appearance,\n}) => {\n  return (\n    <>\n      <CheckBoxRowContainer\n        className={getClassName('checklistStepsContainer', appearance)}\n        appearance={appearance}\n        style={{ ...style }}\n      >\n        {labelPosition === 'left' && label && (\n          <Label className={getClassName('checklistStepLabel', appearance)} style={labelStyle}>\n            {label}\n          </Label>\n        )}\n        <CheckBox\n          appearance={appearance}\n          value={value}\n          type={checkBoxType}\n          primaryColor={primaryColor}\n        />\n        {labelPosition === 'right' && label && (\n          <Label className={getClassName('checklistStepLabel', appearance)} style={labelStyle}>\n            {label}\n          </Label>\n        )}\n      </CheckBoxRowContainer>\n      <RenderInlineStyles appearance={appearance} />\n    </>\n  )\n}\n","import styled from 'styled-components'\n\nexport const HeroChecklistStepContent = styled.div`\n  font-weight: 700;\n  font-size: 18px;\n  line-height: 22px;\n`\n\nexport const HeroChecklistStepTitle = styled.p<{ appearance }>`\n  font-weight: 700;\n  font-size: 18px;\n  line-height: 30px;\n  margin: 20px 0px 0px 0px;\n  color: ${(props) => props.appearance?.theme?.colorText};\n`\n\nexport const HeroChecklistStepSubtitle = styled.p<{ appearance }>`\n  font-weight: 400;\n  font-size: 15px;\n  line-height: 28px;\n  max-width: 540px;\n  margin: 8px 0px 0px 0px;\n  color: ${(props) => props.appearance?.theme?.colorTextSecondary};\n`\n\nexport const StepItemSelectedIndicator = styled.div`\n  width: 4px;\n  position: absolute;\n  left: 0;\n  top: 10%;\n  height: 80%;\n  border-top-right-radius: 8px;\n  border-bottom-right-radius: 8px;\n`\n\nexport const ChecklistStepItem = styled.div`\n  flex-direction: row;\n  justify-content: flex-start;\n`\n","import React, { CSSProperties } from 'react'\nimport { motion } from 'framer-motion'\nimport styled from 'styled-components'\nimport { Appearance } from '../../../types'\nimport { getClassName, styleOverridesToCSS } from '../../../shared/appearance'\n\n// TODO: remove once secondary color is passed from theme\nconst PROGRESS_BAR_COLOR_STYLES = {\n  backgroundColor: '#E6E6E6',\n}\n\nconst ProgressContainer = styled.div`\n  display: flex;\n  flex-direction: ${(props) => (props.textLocation == 'top' ? 'column' : 'row')};\n  justify-content: flex-start;\n  align-items: ${(props) => (props.textLocation == 'top' ? 'flex-end' : 'center')};\n  width: 100%;\n\n  ${(props) => styleOverridesToCSS(props)}\n`\nconst ProgressProgressBar = styled.div`\n  flex-grow: 1;\n  position: relative;\n  ${(props) => (props.textLocation == 'top' ? `width: 100%;` : ``)}\n`\n\nconst StepText = styled.span<{ padding; appearance }>`\n  font-weight: 500;\n  font-size: 15px;\n  line-height: 18px;\n  padding-right: ${(props) => props.padding};\n  color: ${(props) => props.appearance?.theme?.colorTextSecondary};\n  margin-bottom: ${(props) => (props.textLocation == 'top' ? '8px' : '0px')};\n  ${(props) => styleOverridesToCSS(props)}\n`\n\nconst progressBgStyle: CSSProperties = {\n  position: 'relative',\n  left: 0,\n  top: 0,\n  width: '100%',\n  minWidth: '40px',\n  height: '10px',\n  borderRadius: '20px',\n}\n\nconst progressFgStyle: CSSProperties = {\n  position: 'absolute',\n  left: 0,\n  top: 0,\n  height: '10px',\n  borderRadius: '20px',\n}\n\nexport const ProgressBar = ({\n  count,\n  total,\n  fillColor,\n  bgColor = PROGRESS_BAR_COLOR_STYLES.backgroundColor,\n  display = 'count',\n  textLocation = 'left',\n  style = {},\n  textStyle = {},\n  appearance,\n}: {\n  count: number\n  total: number\n  fillColor?: string\n  bgColor?: string\n  display?: 'count' | 'percent' | 'compact'\n  textLocation?: 'top' | 'left'\n  style?: CSSProperties\n  textStyle?: CSSProperties\n  appearance?: Appearance\n}) => {\n  if (total === 0) return <></>\n\n  const fgWidth = count === 0 ? '10px' : `${(count / total) * 100}%`\n  const barHeight = display === 'compact' ? '5px' : '10px'\n  const percentComplete = Math.round((count / total) * 100)\n  let padding = display === 'compact' ? '5px' : '20px'\n\n  let stepText\n  if (display === 'count') {\n    stepText = `${count} of ${total}`\n  } else if (display === 'compact') {\n    stepText = `${percentComplete}%`\n  } else if (display === 'percent') {\n    stepText = `${percentComplete}% complete`\n  }\n  if (textLocation === 'top') {\n    padding = '0px'\n  }\n\n  return (\n    <ProgressContainer\n      className={getClassName('progressBarContainer', appearance)}\n      textLocation={textLocation}\n      styleOverrides={style}\n    >\n      <StepText\n        className={getClassName('progressBarStepText', appearance)}\n        style={{\n          ...textStyle,\n          fontSize: display === 'compact' ? 12 : 15,\n          fontWeight: display === 'compact' ? 400 : 500,\n        }}\n        appearance={appearance}\n        padding={padding}\n        textLocation={textLocation}\n      >\n        {stepText}\n      </StepText>\n      <ProgressProgressBar\n        textLocation={textLocation}\n        className={getClassName('progressBar', appearance)}\n      >\n        <motion.div\n          style={{\n            ...progressFgStyle,\n            width: fgWidth,\n            height: barHeight,\n            backgroundColor: appearance?.theme?.colorPrimary ?? fillColor,\n            zIndex: display == 'compact' ? 1 : 5,\n          }}\n          className={getClassName('progressBarFill', appearance)}\n        />\n        <div\n          className={getClassName('progressBarBackground', appearance)}\n          style={{\n            ...progressBgStyle,\n            height: barHeight,\n            backgroundColor: appearance?.theme?.colorSecondary ?? bgColor,\n          }}\n        />\n      </ProgressProgressBar>\n    </ProgressContainer>\n  )\n}\n","import { HeroChecklistStepContent } from '../Checklists/HeroChecklist/styled'\n\nimport React, { FC } from 'react'\nimport { StepContentProps } from '../../FrigadeForm/types'\nimport styled from 'styled-components'\nimport { TitleSubtitleWithCTA } from './shared/TitleSubtitleWithCTA'\nimport { VideoPlayer } from '../Video/VideoPlayer'\nimport { getClassName } from '../../shared/appearance'\n\nexport const HERO_STEP_CONTENT_TYPE = 'default'\nconst StepImage = styled.img`\n  border-radius: 4px;\n  max-height: 260px;\n  min-height: 200px;\n`\nexport const HeroStepContent: FC<StepContentProps> = ({ stepData, appearance }) => {\n  if (stepData?.StepContent) {\n    const Content: React.ReactNode = stepData.StepContent\n    return <div>{Content}</div>\n  }\n\n  return (\n    <HeroChecklistStepContent className={getClassName('checklistStepContent', appearance)}>\n      {stepData.imageUri ? (\n        <StepImage\n          className={getClassName('checklistStepImage', appearance)}\n          src={stepData.imageUri}\n          style={stepData.imageStyle}\n        />\n      ) : null}\n      {stepData.videoUri ? (\n        <VideoPlayer videoUri={stepData.videoUri} appearance={appearance} />\n      ) : null}\n      <TitleSubtitleWithCTA stepData={stepData} appearance={appearance} />\n    </HeroChecklistStepContent>\n  )\n}\n","import React, { FC } from 'react'\nimport { StepContentProps } from '../../../FrigadeForm/types'\nimport { TitleSubtitle } from './TitleSubtitle'\nimport { CTA } from './CTA'\n\nexport const TitleSubtitleWithCTA: FC<StepContentProps> = ({ stepData, appearance }) => {\n  return (\n    <>\n      <TitleSubtitle stepData={stepData} appearance={appearance} />\n      <CTA stepData={stepData} appearance={appearance} />\n    </>\n  )\n}\n","import React, { FC } from 'react'\n\nimport {\n  HeroChecklistStepSubtitle,\n  HeroChecklistStepTitle,\n} from '../../Checklists/HeroChecklist/styled'\nimport { StepContentProps } from '../../../FrigadeForm/types'\nimport { sanitize } from '../../../shared/sanitizer'\nimport { getClassName } from '../../../shared/appearance'\n\nexport const TitleSubtitle: FC<StepContentProps> = ({ stepData, appearance }) => {\n  return (\n    <>\n      <HeroChecklistStepTitle\n        appearance={appearance}\n        className={getClassName('checklistStepTitle', appearance)}\n        dangerouslySetInnerHTML={sanitize(stepData.title)}\n      />\n      <HeroChecklistStepSubtitle\n        appearance={appearance}\n        className={getClassName('checklistStepSubtitle', appearance)}\n        dangerouslySetInnerHTML={sanitize(stepData.subtitle)}\n      />\n    </>\n  )\n}\n","import React, { FC } from 'react'\nimport { Button, MultipleButtonContainer } from '../../Button'\nimport { StepContentProps } from '../../../FrigadeForm/types'\nimport { getClassName } from '../../../shared/appearance'\n\nexport const CTA: FC<StepContentProps> = ({ stepData, appearance }) => {\n  const handlePrimaryButtonClick = () => {\n    if (stepData.handlePrimaryButtonClick) {\n      stepData.handlePrimaryButtonClick()\n    }\n  }\n\n  const handleSecondaryButtonClick = () => {\n    if (stepData.handleSecondaryButtonClick) {\n      stepData.handleSecondaryButtonClick()\n    }\n  }\n\n  return (\n    <MultipleButtonContainer className={getClassName('ctaContainer', appearance)}>\n      {stepData.secondaryButtonTitle && (\n        <Button\n          appearance={appearance}\n          secondary\n          title={stepData.secondaryButtonTitle}\n          onClick={handleSecondaryButtonClick}\n          style={{\n            width: 'auto',\n            marginRight: '12px',\n          }}\n        />\n      )}\n      <Button\n        appearance={appearance}\n        title={stepData.primaryButtonTitle}\n        onClick={handlePrimaryButtonClick}\n      />\n    </MultipleButtonContainer>\n  )\n}\n","import React from 'react'\nimport { Appearance } from '../../types'\nimport { VideoCard } from './VideoCard'\n\nexport function VideoPlayer(props: { videoUri: string; appearance?: Appearance }) {\n  return <VideoCard appearance={props.appearance} videoUri={props.videoUri} />\n}\n","import React, { FC, useRef, useState } from 'react'\nimport styled from 'styled-components'\nimport { TitleSubtitleWithCTA } from './shared/TitleSubtitleWithCTA'\nimport { StepContentProps } from '../../FrigadeForm/types'\nimport { Play } from '../Icons/Play'\nimport { TitleSubtitle } from './shared/TitleSubtitle'\nimport { CTA } from './shared/CTA'\n\nconst VideoCarouselContainer = styled.div`\n  display: block;\n`\n\nconst VideoList = styled.div`\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n  justify-content: flex-start;\n  gap: 0px;\n  align-items: center;\n  align-content: center;\n  margin-top: 24px;\n  margin-bottom: 24px;\n`\n\nconst Video = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: flex-start;\n  flex-direction: column;\n  margin-right: 16px;\n`\n\nconst VideoSource = styled.video`\n  width: 200px;\n  height: 120px;\n`\n\nconst VideoTitle = styled.div`\n  font-size: 14px;\n  line-height: 20px;\n  text-align: center;\n`\n\nconst PlayIconWrapper = styled.div`\n  position: absolute;\n  width: 200px;\n  height: 120px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  cursor: pointer;\n  :hover {\n    opacity: 0.6;\n  }\n  z-index: 10;\n\n  > svg {\n    width: 40px;\n    height: 40px;\n    color: ${(props) => props.appearance.theme.colorBackground};\n    box-shadow: 0px 6px 25px rgba(0, 0, 0, 0.06);\n    border-radius: 50%;\n  }\n`\n\ninterface VideoMetadata {\n  uri: string\n  thumbnailUri?: string\n  title?: string\n}\n\ninterface VideoCarouselProps {\n  videos: VideoMetadata[]\n}\n\nexport const VIDEO_CAROUSEL_TYPE = 'videoCarousel'\n\nexport const VideoCarousel: FC<StepContentProps> = ({ stepData, appearance }) => {\n  if (!stepData.props?.videos) {\n    return (\n      <VideoCarouselContainer>\n        <TitleSubtitleWithCTA stepData={stepData} appearance={appearance} />\n      </VideoCarouselContainer>\n    )\n  }\n\n  function VideoCard({ video }: { video: VideoMetadata }) {\n    // Create ref to use with videoplayer\n\n    const ref = useRef<any>()\n\n    const [isPlaying, setIsPlaying] = useState(false)\n\n    return (\n      <Video>\n        {!isPlaying && (\n          <PlayIconWrapper\n            onClick={() => {\n              setIsPlaying(true)\n              ref.current.play()\n            }}\n            appearance={appearance}\n          >\n            <Play />\n          </PlayIconWrapper>\n        )}\n        <VideoSource controls={isPlaying} ref={ref} play={isPlaying} src={video.uri} />\n        <VideoTitle>{video.title}</VideoTitle>\n      </Video>\n    )\n  }\n\n  const videoProps = stepData.props as VideoCarouselProps\n\n  if (videoProps.videos) {\n    return (\n      <VideoCarouselContainer>\n        <TitleSubtitle stepData={stepData} appearance={appearance} />\n        <VideoList>\n          {videoProps.videos.map((video: VideoMetadata, idx: number) => (\n            <span key={`${video.uri}-${idx}`}>\n              <VideoCard video={video} />\n            </span>\n          ))}\n        </VideoList>\n        <CTA stepData={stepData} appearance={appearance} />\n      </VideoCarouselContainer>\n    )\n  }\n  return null\n}\n","import React, { FC } from 'react'\nimport styled from 'styled-components'\nimport { TitleSubtitleWithCTA } from './shared/TitleSubtitleWithCTA'\nimport { StepContentProps } from '../../FrigadeForm/types'\nimport { CTA } from './shared/CTA'\nimport { TitleSubtitle } from './shared/TitleSubtitle'\n\nconst CodeSnippetContainer = styled.div`\n  display: block;\n`\n\n// Create a cool code snippet style that is dark background white text\nconst CodeSnippet = styled.pre`\n  display: block;\n  background-color: #2a2a2a;\n  color: #f8f8f8;\n  padding: 16px;\n  border-radius: 6px;\n  font-size: 14px;\n  line-height: 20px;\n  font-family: 'Source Code Pro', monospace;\n  width: 600px;\n  white-space: pre-wrap; /* css-3 */\n  white-space: -moz-pre-wrap; /* Mozilla, since 1999 */\n  white-space: -pre-wrap; /* Opera 4-6 */\n  white-space: -o-pre-wrap; /* Opera 7 */\n  word-wrap: break-word; /* Internet Explorer 5.5+ */\n  margin-bottom: 24px;\n`\nconst CodeSnippetTitle = styled.div`\n  font-size: 15px;\n  line-height: 20px;\n  margin-bottom: 12px;\n  margin-top: 12px;\n`\n\nconst CodeSnippets = styled.div`\n  margin-top: 24px;\n`\n\ninterface CodeSnippetMetadata {\n  code?: string\n  title?: string\n}\n\ninterface CodeSnippetProps {\n  codeSnippets: CodeSnippetMetadata[]\n}\n\nexport const CODE_SNIPPET_CONTENT_TYPE = 'codeSnippet'\n\nexport const CodeSnippetContent: FC<StepContentProps> = ({ stepData, appearance }) => {\n  if (!stepData.props?.codeSnippets) {\n    return (\n      <CodeSnippetContainer>\n        <TitleSubtitleWithCTA stepData={stepData} appearance={appearance} />\n      </CodeSnippetContainer>\n    )\n  }\n\n  const codeProps = stepData.props as CodeSnippetProps\n\n  if (codeProps.codeSnippets) {\n    return (\n      <CodeSnippetContainer>\n        <TitleSubtitle stepData={stepData} appearance={appearance} />\n        <CodeSnippets>\n          {codeProps.codeSnippets.map((codeSnippet, index) => {\n            return (\n              <div key={index}>\n                {codeSnippet.title ? (\n                  <CodeSnippetTitle>{codeSnippet.title}</CodeSnippetTitle>\n                ) : null}\n                {codeSnippet.code ? <CodeSnippet>{codeSnippet.code}</CodeSnippet> : null}\n              </div>\n            )\n          })}\n        </CodeSnippets>\n        <CTA stepData={stepData} appearance={appearance} />\n      </CodeSnippetContainer>\n    )\n  }\n  return null\n}\n","import React, { FC, useState } from 'react'\nimport { Button } from '../../Button'\nimport { CheckBox } from '../../CheckBox'\nimport { Chevron } from '../../Icons/Chevron'\nimport { StepData } from '../../../types'\nimport { ProgressBar } from '../Checklist/ProgressBar'\nimport { StepItemSelectedIndicator } from '../HeroChecklist/styled'\nimport { motion } from 'framer-motion'\nimport {\n  ChecklistContainer,\n  ChecklistSubtitle,\n  ChecklistTitle,\n  ContainerStyle,\n  HeaderContent,\n  MultipleButtonContainer,\n  ProgressBarContainer,\n  ScrollContainer,\n  StepContainer,\n  StepListContainer,\n  StepListItem,\n  StepListItemRight,\n  StepListStepName,\n  StepsBody,\n  StepsContainer,\n  StepsHeader,\n  StepsTitle,\n  StepSubtitle,\n  StepTitle,\n} from './styled'\nimport { CenterVertical } from '../../styled'\nimport { Modal } from '../../Modal'\nimport Guide, { GuideStepData } from '../../Guides/Guide'\nimport { getClassName } from '../../../shared/appearance'\nimport { ChecklistProps } from '../index'\nimport { sanitize } from '../../../shared/sanitizer'\n\nexport interface ChecklistWithGuideProps extends ChecklistProps {\n  // Map from string to function with StepData returning React.ReactNode\n  visible: boolean\n  stepsTitle: string\n\n  guideData?: GuideStepData[]\n  guideTitle?: string\n\n  onGuideButtonClick?: (stepData: StepData) => void\n}\n\nconst ChecklistWithGuide: FC<ChecklistWithGuideProps> = ({\n  steps,\n  title,\n  subtitle,\n  stepsTitle,\n\n  visible,\n  onClose,\n\n  selectedStep,\n  setSelectedStep,\n  customStepTypes,\n\n  appearance,\n\n  guideData,\n  guideTitle,\n\n  onGuideButtonClick,\n}) => {\n  const DefaultStepContent = ({ stepData, handleSecondaryCTAClick, handleCTAClick }) => {\n    if (!stepData) return <></>\n\n    return (\n      <StepContainer\n        className={getClassName('checklistStepContainer', appearance)}\n        data-testid=\"checklistStepContainer\"\n      >\n        <StepTitle\n          appearance={appearance}\n          className={getClassName('checklistStepTitle', appearance)}\n          dangerouslySetInnerHTML={sanitize(stepData.title)}\n        />\n        <StepSubtitle\n          appearance={appearance}\n          className={getClassName('checklistStepSubtitle', appearance)}\n          dangerouslySetInnerHTML={sanitize(stepData.subtitle)}\n        />\n        <MultipleButtonContainer className={getClassName('checklistCTAContainer', appearance)}>\n          {stepData.secondaryButtonTitle && (\n            <Button\n              title={stepData.secondaryButtonTitle}\n              onClick={handleSecondaryCTAClick}\n              appearance={appearance}\n              secondary\n            />\n          )}\n          <Button\n            title={stepData.primaryButtonTitle}\n            onClick={handleCTAClick}\n            appearance={appearance}\n          />\n        </MultipleButtonContainer>\n      </StepContainer>\n    )\n  }\n\n  const DEFAULT_CUSTOM_STEP_TYPES = {\n    default: (stepData: StepData) => {\n      if (steps[selectedStepValue]?.StepContent) {\n        const Content: React.ReactNode = steps[selectedStepValue].StepContent\n        return <div>{Content}</div>\n      }\n      const currentStep = steps[selectedStepValue]\n\n      const handleCTAClick = () => {\n        if (currentStep.handlePrimaryButtonClick) {\n          currentStep.handlePrimaryButtonClick()\n        }\n      }\n\n      const handleSecondaryCTAClick = () => {\n        if (currentStep.handleSecondaryButtonClick) {\n          currentStep.handleSecondaryButtonClick()\n        }\n      }\n\n      return (\n        <DefaultStepContent\n          stepData={stepData}\n          handleCTAClick={handleCTAClick}\n          handleSecondaryCTAClick={handleSecondaryCTAClick}\n        />\n      )\n    },\n  }\n\n  const mergedCustomStepTypes = { ...DEFAULT_CUSTOM_STEP_TYPES, ...customStepTypes }\n\n  const [selectedStepInternal, setSelectedStepInternal] = useState(0)\n\n  const selectedStepValue = selectedStep ?? selectedStepInternal\n  const setSelectedStepValue = setSelectedStep ?? setSelectedStepInternal\n\n  const StepContent = () => {\n    if (!steps) return <></>\n    if (!steps[selectedStepValue]?.type || !mergedCustomStepTypes[steps[selectedStepValue].type]) {\n      return mergedCustomStepTypes['default'](steps[selectedStepValue])\n    }\n    return mergedCustomStepTypes[steps[selectedStepValue].type]({\n      stepData: steps[selectedStepValue],\n      primaryColor: appearance.theme.colorPrimary,\n    })\n  }\n\n  const completeCount = steps.filter((s) => s.complete).length\n\n  if (!visible) return <></>\n\n  if (!appearance.theme.modalContainer) {\n    if (appearance.theme.borderRadius) {\n      ContainerStyle.borderRadius = appearance.theme.borderRadius + 'px'\n    }\n    appearance.theme.modalContainer = ContainerStyle\n  }\n\n  return (\n    <Modal onClose={onClose} visible={visible} appearance={appearance}>\n      <ChecklistContainer>\n        <HeaderContent>\n          <ChecklistTitle\n            appearance={appearance}\n            className={getClassName('checklistTitle', appearance)}\n          >\n            {title}\n          </ChecklistTitle>\n          <ChecklistSubtitle\n            appearance={appearance}\n            className={getClassName('checklistSubtitle', appearance)}\n          >\n            {subtitle}\n          </ChecklistSubtitle>\n        </HeaderContent>\n\n        <ScrollContainer>\n          {steps && steps.length > 0 && (\n            <StepsContainer className={getClassName('stepsContainer', appearance)}>\n              <StepsHeader>\n                <div style={{ flex: 3 }}>\n                  <StepsTitle className={getClassName('stepsTitle', appearance)}>\n                    {stepsTitle}\n                  </StepsTitle>\n                </div>\n                <ProgressBarContainer>\n                  <ProgressBar\n                    fillColor={appearance.theme.colorPrimary}\n                    style={{ width: '100%' }}\n                    count={completeCount}\n                    total={steps.length}\n                    appearance={appearance}\n                  />\n                </ProgressBarContainer>\n              </StepsHeader>\n              <StepsBody>\n                <StepListContainer\n                  className={getClassName('checklistStepListContainer', appearance)}\n                  appearance={appearance}\n                >\n                  {steps.map((stepData: StepData, idx: number) => {\n                    const isSelected = selectedStepValue === idx\n                    return (\n                      <StepListItem\n                        selected={isSelected}\n                        className={getClassName(\n                          `checklistStepListItem${isSelected ? 'Selected' : ''}`,\n                          appearance\n                        )}\n                        key={`checklist-guide-step-${stepData.id ?? idx}`}\n                        disabled={stepData.blocked}\n                        onClick={() => {\n                          if (stepData.blocked) {\n                            return\n                          }\n                          setSelectedStepValue(idx)\n                        }}\n                        title={stepData.blocked ? 'Finish remaining steps to continue' : undefined}\n                      >\n                        {isSelected && (\n                          <StepItemSelectedIndicator\n                            className={getClassName(\n                              'checklistStepItemSelectedIndicator',\n                              appearance\n                            )}\n                            as={motion.div}\n                            layoutId=\"checklist-step-selected\"\n                            style={{\n                              backgroundColor: appearance.theme.colorPrimary,\n                              borderRadius: 0,\n                              height: '100%',\n                              top: '0%',\n                              width: '2px',\n                            }}\n                          ></StepItemSelectedIndicator>\n                        )}\n                        <StepListStepName\n                          selected={isSelected}\n                          className={getClassName(\n                            `checklistStepListStepName${isSelected ? 'Selected' : ''}`,\n                            appearance\n                          )}\n                        >\n                          {stepData.stepName}\n                        </StepListStepName>\n                        <StepListItemRight>\n                          <CheckBox\n                            value={stepData.complete}\n                            type=\"round\"\n                            primaryColor={appearance.theme.colorPrimary}\n                            progress={stepData.progress}\n                            appearance={appearance}\n                          />\n                          <CenterVertical>\n                            <Chevron\n                              style={{ marginLeft: '10px' }}\n                              color={appearance.theme.colorBackgroundSecondary}\n                            />\n                          </CenterVertical>\n                        </StepListItemRight>\n                      </StepListItem>\n                    )\n                  })}\n                </StepListContainer>\n\n                <StepContent />\n              </StepsBody>\n            </StepsContainer>\n          )}\n          {guideData && guideData.length > 0 && (\n            <Guide\n              steps={guideData}\n              title={guideTitle}\n              primaryColor={appearance.theme.colorPrimary}\n              style={{\n                border: 'none',\n                boxShadow: 'none',\n              }}\n              appearance={appearance}\n              onButtonClick={(step) => {\n                if (onGuideButtonClick) {\n                  onGuideButtonClick(step)\n                }\n\n                return true\n              }}\n            />\n          )}\n        </ScrollContainer>\n      </ChecklistContainer>\n    </Modal>\n  )\n}\n\nexport default ChecklistWithGuide\n","import React, { CSSProperties } from 'react'\nimport styled from 'styled-components'\n\nconst ChevronSVG = styled.svg`\n  transition: 'transform 0.35s ease-in-out';\n`\n\nexport const Chevron = ({\n  color = '#323232',\n  style,\n  className,\n}: {\n  color?: string\n  style?: CSSProperties\n  className?: string\n}) => (\n  <ChevronSVG\n    width=\"7\"\n    height=\"10\"\n    viewBox=\"0 0 9 15\"\n    fill=\"none\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n    style={style}\n    className={className}\n  >\n    <path\n      d=\"M1 13L7.5 7L0.999999 1\"\n      stroke={color}\n      strokeWidth=\"2\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n    />\n  </ChevronSVG>\n)\n","import { CSSProperties } from 'react'\nimport styled from 'styled-components'\nimport { getCustomClassOverrides } from '../../../shared/appearance'\n\n// Styles for top level container and text\n\nexport const ContainerStyle: CSSProperties = {\n  boxShadow: '0px 6px 25px rgba(0, 0, 0, 0.06)',\n  padding: '32px',\n  maxHeight: '700px',\n  msOverflowStyle: 'none' /* IE and Edge */,\n  scrollbarWidth: 'none' /* Firefox */,\n  paddingBottom: '12px',\n  minHeight: '610px',\n}\n\nexport const ScrollContainer = styled.div`\n  max-height: 350px;\n  padding-bottom: 40px;\n`\n\nexport const HeaderContent = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin-top: 20px;\n`\n\nexport const ChecklistTitle = styled.h1<{ appearance }>`\n  font-style: normal;\n  font-weight: 600;\n  font-size: 30px;\n  line-height: 36px;\n  margin-bottom: 16px;\n  color: ${(props) => props.appearance?.theme?.colorText};\n`\nexport const ChecklistSubtitle = styled.h2<{ appearance }>`\n  font-weight: 400;\n  font-size: 16px;\n  line-height: 20px;\n  margin-bottom: 16px;\n  padding-left: 1px;\n  color: ${(props) => props.appearance?.theme?.colorTextSecondary};\n`\n\nexport const StepsContainer = styled.div`\n  ${(props) => getCustomClassOverrides(props)} {\n    border: 1px solid #fafafa;\n  }\n  box-shadow: 0px 2px 8px rgba(0, 0, 0, 0.05);\n  border-radius: 14px;\n  display: flex;\n  flex-direction: column;\n  min-height: 240px;\n  overflow: hidden;\n`\n\nexport const StepsHeader = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n`\n\nexport const StepsTitle = styled.p`\n  ${(props) => getCustomClassOverrides(props)} {\n    font-weight: 400;\n    font-size: 10px;\n    line-height: 12px;\n    text-transform: uppercase;\n    color: #8c8c8c;\n    margin: 20px;\n  }\n`\n\nexport const StepsBody = styled.div`\n  display: flex;\n  flex-direction: row;\n`\n\nexport const StepListContainer = styled.div`\n  flex: 1;\n`\n\n// Styles for Step content\n\nexport const StepContainer = styled.div`\n  ${(props) => getCustomClassOverrides(props)} {\n    display: flex;\n    justify-content: center;\n    align-content: center;\n    flex-direction: column;\n    flex: 1;\n    padding-left: 8px;\n    padding-right: 8px;\n  }\n`\n\nexport const StepTitle = styled.p`\n  ${(props) => getCustomClassOverrides(props)} {\n    font-style: normal;\n    font-weight: 600;\n    font-size: 22px;\n    line-height: 26px;\n\n    text-align: center;\n    color: ${(props) => props.appearance.theme.colorText};\n    margin-top: 20px;\n    margin-bottom: 16px;\n  }\n`\n\nexport const StepSubtitle = styled.p`\n  ${(props) => getCustomClassOverrides(props)} {\n    font-weight: 400;\n    font-size: 14px;\n    line-height: 18px;\n    text-align: center;\n    color: ${(props) => props.appearance.theme.colorTextSecondary};\n    margin-bottom: 8px;\n  }\n`\n\nexport const MultipleButtonContainer = styled.div`\n  ${(props) => getCustomClassOverrides(props)} {\n    display: flex;\n    flex-direction: row;\n    justify-content: center;\n    gap: 8px;\n  }\n`\n\nexport const StepListItem = styled.div<{ selected: boolean }>`\n  ${(props) => getCustomClassOverrides(props)} {\n    // Anything inside this block will be ignored if the user provides a custom class\n    background-color: ${(props) => (props.selected ? '#FAFAFA' : '#FFFFFF')};\n    :hover {\n      background-color: #fafafa;\n    }\n  }\n  //Check if attr disabled is true\n  &[disabled] {\n    opacity: 0.3;\n    cursor: not-allowed;\n  }\n\n  padding: 20px;\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  position: relative;\n  cursor: pointer;\n`\n\nexport const StepListStepName = styled.p<{ selected: boolean }>`\n  ${(props) => getCustomClassOverrides(props)} {\n    // Anything inside this block will be ignored if the user provides a custom class\n    color: ${(props) => (props.selected ? '#434343' : '#BFBFBF')};\n  }\n  font-weight: ${(props) => (props.selected ? 500 : 400)};\n  font-size: 14px;\n  line-height: 22px;\n  margin: 0;\n`\n\nexport const StepListItemRight = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: flex-end;\n  align-content: center;\n`\n\nexport const ProgressBarContainer = styled.div`\n  display: flex;\n  flex: 1;\n  flex-direction: row;\n  justify-content: flex-end;\n  align-content: center;\n  align-items: center;\n  margin-right: 20px;\n`\n\nexport const ChecklistContainer = styled.div`\n  display: block;\n  width: 100%;\n`\n","import styled from 'styled-components'\n\nexport const CenterVertical = styled.div`\n  flex-direction: column;\n  justify-content: center;\n  display: flex;\n`","import React, { CSSProperties, FC } from 'react'\nimport { Appearance, DefaultFrigadeFlowProps, StepData } from '../../types'\nimport { motion } from 'framer-motion'\n\nimport {\n  GuideContainer,\n  GuideIcon,\n  GuideIconWrapper,\n  GuideItem,\n  GuideItemLink,\n  GuideItems,\n  GuideItemSubtitle,\n  GuideItemTitle,\n  GuideTitle,\n} from './styled'\nimport { getClassName } from '../../shared/appearance'\nimport { useCTAClickSideEffects } from '../../hooks/useCTAClickSideEffects'\nimport { sanitize } from '../../shared/sanitizer'\n\nexport interface GuideStepData extends StepData {\n  icon?: string\n}\n\ninterface GuideProps extends Pick<DefaultFrigadeFlowProps, 'onButtonClick'> {\n  steps: GuideStepData[]\n  title: string\n  style?: CSSProperties\n  primaryColor?: string\n  appearance: Appearance\n}\n\n/**\n * A guide is essentially a list of links that does not have a state\n */\nconst Guide: FC<GuideProps> = ({\n  steps,\n  style,\n  title,\n  primaryColor,\n  appearance,\n  onButtonClick,\n}) => {\n  const { primaryCTAClickSideEffects } = useCTAClickSideEffects()\n\n  return (\n    <GuideContainer style={style} className={getClassName('guideContainer', appearance)}>\n      <GuideTitle className={getClassName('guideTitle', appearance)}>{title}</GuideTitle>\n      <GuideItems className={getClassName('guideItemContainer', appearance)}>\n        {steps.map((stepData: GuideStepData, idx) => {\n          return (\n            <GuideItem\n              key={`guide-${stepData.id ?? idx}`}\n              as={motion.div}\n              whileHover={{\n                boxShadow: '0px 2px 8px rgba(0, 0, 0, 0.05)',\n                transition: { duration: 0.25 },\n              }}\n              className={getClassName('guideItem', appearance)}\n            >\n              {stepData.icon && (\n                <GuideIconWrapper className={getClassName('guideIcon', appearance)}>\n                  <GuideIcon>{stepData.icon}</GuideIcon>\n                </GuideIconWrapper>\n              )}\n\n              <GuideItemTitle\n                className={getClassName('guideItemTitle', appearance)}\n                dangerouslySetInnerHTML={sanitize(stepData.title)}\n              />\n              <GuideItemSubtitle\n                className={getClassName('guideItemSubtitle', appearance)}\n                dangerouslySetInnerHTML={sanitize(stepData.subtitle)}\n              />\n              <GuideItemLink\n                className={getClassName('guideItemLink', appearance)}\n                color={primaryColor}\n                onClick={() => {\n                  if (stepData.primaryButtonUri) {\n                    primaryCTAClickSideEffects(stepData)\n                  }\n                  if (onButtonClick) {\n                    onButtonClick(stepData)\n                  }\n                }}\n              >\n                {stepData.primaryButtonTitle}\n              </GuideItemLink>\n            </GuideItem>\n          )\n        })}\n      </GuideItems>\n    </GuideContainer>\n  )\n}\n\nexport default Guide\n","import styled from 'styled-components'\nimport { getCustomClassOverrides } from '../../shared/appearance'\n\nexport const GuideContainer = styled.div`\n  border: 1px solid #fafafa;\n  box-shadow: 0px 2px 8px rgba(0, 0, 0, 0.05);\n  border-radius: 14px;\n  padding-top: 20px;\n  display: flex;\n  flex-direction: column;\n  overflow: hidden;\n`\n\nexport const GuideItems = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-between;\n  overflow: hidden;\n  row-gap: 10px;\n`\n\nexport const GuideTitle = styled.div`\n  ${(props) => getCustomClassOverrides(props)} {\n    color: #595959;\n  }\n  text-transform: uppercase;\n  font-weight: 400;\n  font-size: 10px;\n  line-height: 12px;\n  letter-spacing: 0.09em;\n  margin-bottom: 12px;\n`\n\nexport const GuideItem = styled.div`\n  ${(props) => getCustomClassOverrides(props)} {\n    // Anything inside this block will be ignored if the user provides a custom class\n    background: #ffffff;\n    border: 1px solid #fafafa;\n  }\n  border-radius: 14px;\n  padding: 20px;\n  flex-direction: column;\n  align-content: center;\n\n  max-width: 150px;\n  min-width: 200px;\n`\n\nexport const GuideIconWrapper = styled.div`\n  ${(props) => getCustomClassOverrides(props)} {\n    background: radial-gradient(50% 50% at 50% 50%, #ffffff 0%, #f7f7f7 100%);\n  }\n  width: 40px;\n  height: 40px;\n\n  border-radius: 7px;\n  display: flex;\n  justify-content: center;\n  align-content: center;\n  align-items: center;\n`\n\nexport const GuideIcon = styled.div`\n  font-weight: 600;\n  font-size: 20px;\n  line-height: 24px;\n  width: 20px;\n  height: 20px;\n`\n\nexport const GuideItemTitle = styled.div`\n  ${(props) => getCustomClassOverrides(props)} {\n    color: #434343;\n  }\n  font-weight: 600;\n  font-size: 14px;\n  line-height: 17px;\n  margin-top: 12px;\n  margin-bottom: 8px;\n`\n\nexport const GuideItemSubtitle = styled.div`\n  ${(props) => getCustomClassOverrides(props)} {\n    color: #8c8c8c;\n  }\n  font-weight: 400;\n  font-size: 12px;\n  line-height: 14px;\n`\n\nexport const GuideItemLink = styled.a<{ color: string }>`\n  color: ${(props) => props.color};\n  font-size: 12px;\n  line-height: 14px;\n  font-weight: 400;\n  cursor: pointer;\n`\n","import { useEffect, useState } from 'react'\n\nexport const useMediaQuery = () => {\n  const queries = {\n    isSmall: '(max-width: 480px)',\n    isMedium: '(min-width: 481px) AND (max-width: 1023px)',\n    isLarge: '(min-width: 1025px)',\n  }\n\n  const defaultMatches = Object.fromEntries(Object.entries(queries).map(([key]) => [key, false]))\n\n  const [matches, setMatches] = useState(defaultMatches)\n\n  let updateTimeout = null\n  const throttledUpdate = () => {\n    if (updateTimeout !== null) {\n      clearTimeout(updateTimeout)\n    } else {\n      updateMatches()\n    }\n\n    updateTimeout = setTimeout(() => {\n      updateMatches()\n    }, 16)\n  }\n\n  const updateMatches = () => {\n    const freshMatches = Object.fromEntries(\n      Object.entries(queries).map(([key, query]) => {\n        if (!window) {\n          return [key, false]\n        }\n\n        const mediaQuery = window.matchMedia(query)\n\n        mediaQuery.addEventListener('change', throttledUpdate)\n\n        return [key, mediaQuery.matches]\n      })\n    )\n\n    setMatches(freshMatches)\n  }\n\n  useEffect(() => {\n    updateMatches()\n  }, [])\n\n  return matches\n}\n","import React, { FC, useEffect, useState } from 'react'\nimport { StepData } from '../../../types'\nimport { Modal } from '../../Modal'\nimport { ProgressBar } from '../Checklist/ProgressBar'\nimport { CollapsibleStep } from './CollapsibleStep'\n\nimport {\n  ChecklistContainer,\n  CondensedInlineChecklistContainer,\n  HeaderContent,\n  ModalChecklistSubtitle,\n  ModalChecklistTitle,\n} from './styled'\nimport { sanitize } from '../../../shared/sanitizer'\nimport { getClassName, mergeClasses } from '../../../shared/appearance'\nimport { FrigadeChecklistProps } from '../../../FrigadeChecklist'\n\nexport interface CondensedChecklistProps extends Omit<FrigadeChecklistProps, 'flowId'> {\n  autoCollapse?: boolean\n  onClose: () => void\n}\n\nconst CondensedChecklist: FC<CondensedChecklistProps> = ({\n  title,\n  subtitle,\n  steps,\n  onClose,\n  visible,\n  autoExpandFirstIncompleteStep = true,\n  autoCollapse = true,\n  autoExpandNextStep = true,\n  primaryColor = '#000000',\n  selectedStep,\n  setSelectedStep,\n  appearance,\n  type,\n  className,\n  customStepTypes,\n  style,\n}) => {\n  const completeCount = steps.filter((s) => s.complete).length\n  const [collapsedSteps, setCollapsedSteps] = useState<boolean[]>(Array(steps.length).fill(true))\n\n  useEffect(() => {\n    const initCollapsedState = [...collapsedSteps]\n    if (!autoExpandFirstIncompleteStep) return\n    for (let i = 0; i < steps.length; i++) {\n      if (!steps[i].complete) {\n        initCollapsedState[i] = false\n        break\n      }\n    }\n    setCollapsedSteps(initCollapsedState)\n  }, [])\n\n  useEffect(() => {\n    handleStepClick(selectedStep)\n  }, [selectedStep])\n\n  const handleStepClick = (idx: number) => {\n    const newCollapsedState = [...collapsedSteps]\n    if (autoCollapse) {\n      for (let i = 0; i < collapsedSteps.length; ++i) {\n        if (i !== idx) {\n          newCollapsedState[i] = true\n        }\n      }\n    }\n    newCollapsedState[idx] = !newCollapsedState[idx]\n    setCollapsedSteps(newCollapsedState)\n  }\n\n  if (!visible && type == 'modal') return <></>\n\n  const headerContent = (\n    <>\n      <HeaderContent>\n        <ModalChecklistTitle\n          appearance={appearance}\n          className={getClassName('checklistTitle', appearance)}\n          dangerouslySetInnerHTML={sanitize(title)}\n        />\n        <ModalChecklistSubtitle\n          appearance={appearance}\n          className={getClassName('checklistSubtitle', appearance)}\n          dangerouslySetInnerHTML={sanitize(subtitle)}\n        />\n      </HeaderContent>\n      <ProgressBar\n        display=\"percent\"\n        count={completeCount}\n        total={steps.length}\n        fillColor={primaryColor}\n        style={{ margin: '14px 0px 8px 0px' }}\n        appearance={appearance}\n      />\n    </>\n  )\n\n  const checklistContent = (\n    <ChecklistContainer\n      className={mergeClasses(getClassName('checklistContainer', appearance), className)}\n    >\n      {steps.map((step: StepData, idx: number) => {\n        const isCollapsed = collapsedSteps[idx]\n        return (\n          <CollapsibleStep\n            appearance={appearance}\n            stepData={step}\n            collapsed={isCollapsed}\n            key={`modal-checklist-${step.id ?? idx}`}\n            onClick={() => {\n              if (selectedStep === idx) {\n                // Collapse step if needed\n                handleStepClick(idx)\n                return\n              }\n              setSelectedStep(idx)\n            }}\n            onPrimaryButtonClick={() => {\n              if (step.handlePrimaryButtonClick) {\n                step.handlePrimaryButtonClick()\n              }\n              if (!autoExpandNextStep) return\n              // Automatically expand next step\n              if (\n                !step.completionCriteria &&\n                idx < collapsedSteps.length - 1 &&\n                collapsedSteps[idx + 1]\n              ) {\n                setSelectedStep(idx + 1)\n              }\n            }}\n            onSecondaryButtonClick={() => {\n              if (step.handleSecondaryButtonClick) {\n                step.handleSecondaryButtonClick()\n              }\n            }}\n            customStepTypes={customStepTypes}\n          />\n        )\n      })}\n    </ChecklistContainer>\n  )\n\n  if (type === 'inline') {\n    return (\n      <CondensedInlineChecklistContainer\n        appearance={appearance}\n        className={mergeClasses(getClassName('checklistInlineContainer', appearance), className)}\n        style={style}\n      >\n        {headerContent}\n        {checklistContent}\n      </CondensedInlineChecklistContainer>\n    )\n  }\n\n  return (\n    <>\n      <Modal\n        onClose={onClose}\n        visible={visible}\n        appearance={appearance}\n        style={{ maxWidth: '600px' }}\n        headerContent={headerContent}\n      >\n        {checklistContent}\n      </Modal>\n    </>\n  )\n}\n\nexport default CondensedChecklist\n","import React, { FC } from 'react'\nimport { Appearance, StepData } from '../../../../types'\nimport { CheckBoxRow } from '../../../CheckBoxRow'\nimport { Chevron } from '../../../Icons/Chevron'\nimport { Button, MultipleButtonContainer } from '../../../Button'\nimport { AnimatePresence, motion } from 'framer-motion'\n\nimport {\n  CollapseChevronContainer,\n  HeaderLeft,\n  StepContainer,\n  StepHeader,\n  StepImage,\n  StepMediaContainer,\n  StepSubtitle,\n  StepTitle,\n} from './styled'\nimport { sanitize } from '../../../../shared/sanitizer'\nimport { getClassName } from '../../../../shared/appearance'\nimport { VideoCard } from '../../../Video/VideoCard'\n\ninterface CollapsibleStepProps {\n  stepData: StepData\n  collapsed: boolean\n  onClick: () => void\n  onSecondaryButtonClick: () => void\n  onPrimaryButtonClick: () => void\n  appearance?: Appearance\n  // Map from string to function with StepData returning React.ReactNode\n  customStepTypes?: Record<string, (stepData: StepData, appearance: Appearance) => React.ReactNode>\n}\n\nexport const CollapsibleStep: FC<CollapsibleStepProps> = ({\n  stepData,\n  collapsed,\n  onClick,\n  onPrimaryButtonClick,\n  onSecondaryButtonClick,\n  appearance,\n  customStepTypes,\n}) => {\n  const iconStyle = collapsed ? {} : { transform: 'rotate(90deg)' }\n\n  function getDefaultStepContent() {\n    return (\n      <>\n        {stepData.imageUri || stepData.videoUri ? (\n          <StepMediaContainer className={getClassName('stepMediaContainer', appearance)}>\n            {stepData.imageUri ? (\n              <StepImage\n                className={getClassName('stepImage', appearance)}\n                src={stepData.imageUri}\n                style={stepData.imageStyle}\n              />\n            ) : null}\n            {stepData.videoUri ? (\n              <VideoCard appearance={appearance} videoUri={stepData.videoUri} />\n            ) : null}\n          </StepMediaContainer>\n        ) : null}\n        <StepSubtitle\n          className={getClassName('stepSubtitle', appearance)}\n          appearance={appearance}\n          dangerouslySetInnerHTML={sanitize(stepData.subtitle)}\n        />\n        <MultipleButtonContainer className={getClassName('checklistCTAContainer', appearance)}>\n          {stepData.secondaryButtonTitle ? (\n            <Button\n              secondary\n              title={stepData.secondaryButtonTitle}\n              onClick={() => onSecondaryButtonClick()}\n              appearance={appearance}\n            />\n          ) : null}\n          <Button\n            title={stepData.primaryButtonTitle ?? 'Continue'}\n            onClick={() => onPrimaryButtonClick()}\n            appearance={appearance}\n          />\n        </MultipleButtonContainer>\n      </>\n    )\n  }\n\n  function getCustomStep() {\n    if (!customStepTypes) {\n      return null\n    }\n    const customStep = customStepTypes[stepData.type]\n    if (!customStep) {\n      return null\n    }\n    return customStep(stepData, appearance)\n  }\n\n  return (\n    <StepContainer\n      onClick={() => (collapsed ? onClick() : null)}\n      data-testid={`step-${stepData.id}`}\n      className={getClassName('checklistStepContainer', appearance)}\n      appearance={appearance}\n    >\n      <StepHeader className={getClassName('stepHeader', appearance)}>\n        <HeaderLeft>\n          <CheckBoxRow\n            value={stepData.complete}\n            style={{ width: 'auto', borderTop: 0 }}\n            primaryColor={appearance?.theme?.colorPrimary}\n            appearance={appearance}\n          />\n          <StepTitle\n            appearance={appearance}\n            className={getClassName('stepTitle', appearance)}\n            dangerouslySetInnerHTML={sanitize(stepData.title)}\n          />\n        </HeaderLeft>\n\n        <CollapseChevronContainer\n          className={getClassName('stepChevronContainer', appearance)}\n          onClick={() => onClick()}\n        >\n          <Chevron\n            style={{ ...iconStyle, transition: 'transform 0.1s ease-in-out' }}\n            color={appearance?.theme?.colorTextSecondary}\n          />\n        </CollapseChevronContainer>\n      </StepHeader>\n\n      <AnimatePresence>\n        {!collapsed && (\n          <motion.div\n            initial={{ opacity: 1, height: 0 }}\n            animate={{ opacity: 1, height: 'auto' }}\n            exit={{ opacity: 1, height: 0 }}\n            key={stepData.id}\n            style={{ overflow: 'hidden' }}\n          >\n            {getCustomStep() ?? getDefaultStepContent()}\n          </motion.div>\n        )}\n      </AnimatePresence>\n    </StepContainer>\n  )\n}\n","import styled from 'styled-components'\n\nexport const StepContainer = styled.div<{ appearance }>`\n  background-color: ${(props) => props.appearance?.theme?.colorBackground};\n  border: 1px solid;\n  border-color: ${(props) => props.appearance?.theme?.colorBorder};\n  border-radius: 6px;\n  padding: 2px 20px 2px 20px;\n  display: flex;\n  margin-top: 14px;\n  margin-bottom: 14px;\n  display: flex;\n  flex-direction: column;\n  transition: max-height 0.25s;\n`\n\nexport const StepMediaContainer = styled.div`\n  display: flex;\n  margin-bottom: 20px;\n`\n\nexport const StepImage = styled.img`\n  border-radius: 4px;\n  max-height: 260px;\n  min-height: 200px;\n`\nexport const StepHeader = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  align-items: center;\n`\n\nexport const StepTitle = styled.p<{ appearance }>`\n  color: ${(props) => props.appearance?.theme?.colorText};\n  font-style: normal;\n  font-weight: 500;\n  font-size: 16px;\n  line-height: 18px;\n  margin-left: 8px;\n`\n\nexport const CollapseChevronContainer = styled.div`\n  padding: 20px;\n  cursor: pointer;\n  :hover {\n    opacity: 0.8;\n  }\n`\n\nexport const ExpandedContentContainer = styled.div``\n\nexport const StepSubtitle = styled.p<{ appearance }>`\n  color: ${(props) => props.appearance?.theme?.colorText};\n  font-weight: 400;\n  font-size: 14px;\n  line-height: 22px;\n`\n\nexport const HeaderLeft = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: flex-start;\n  align-items: center;\n`\n","import styled from 'styled-components'\n\nexport const ModalChecklistContainer = styled.div`\n  background: #ffffff;\n  box-shadow: 0px 6px 25px rgba(0, 0, 0, 0.06);\n  border-radius: 6px;\n  z-index: 10;\n  padding: 32px;\n\n  position: absolute;\n  width: 80%;\n  top: 20%;\n  left: 20%;\n\n  max-width: 800px;\n  min-width: 350px;\n`\n\nexport const HeaderContent = styled.div`\n  display: flex;\n  flex-direction: column;\n`\n\nexport const ModalChecklistTitle = styled.h1<{ appearance }>`\n  color: ${(props) => props.appearance?.theme?.colorText};\n  font-style: normal;\n  font-weight: 700;\n  font-size: 20px;\n  line-height: 24px;\n  margin-bottom: 8px;\n`\nexport const ModalChecklistSubtitle = styled.h2<{ appearance }>`\n  color: ${(props) => props.appearance?.theme?.colorTextSecondary};\n  font-weight: 400;\n  font-size: 14px;\n  line-height: 23px;\n  margin: 2px 0 0 0;\n`\nexport const ChecklistContainer = styled.div`\n  display: block;\n  width: 100%;\n`\nexport const CondensedInlineChecklistContainer = styled.div`\n  display: flex;\n  width: 100%;\n  flex-direction: column;\n  justify-content: space-between;\n  background-color: ${(props) => props.appearance?.theme?.colorBackground};\n`\n","import React, { useEffect, useRef, useState } from 'react'\nimport { useFlows } from '../../../api/flows'\nimport { useMediaQuery } from '../../../hooks/useMediaQuery'\n\nimport { CarouselCard } from './CarouselCard'\n\nimport {\n  Body,\n  CarouselContainer,\n  CarouselScroll,\n  CarouselScrollGroup,\n  CarouselTitle,\n  ProgressWrapper,\n  StyledCarouselFade,\n  StyledScrollButton,\n} from './styled'\nimport { DefaultFrigadeFlowProps } from '../../../types'\nimport { getClassName, mergeClasses } from '../../../shared/appearance'\nimport { RenderInlineStyles } from '../../RenderInlineStyles'\nimport { ProgressBar } from '../Checklist/ProgressBar'\n\nconst RightArrow = () => (\n  <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M14 6L20 12\" stroke=\"currentColor\" strokeWidth=\"2.5\" strokeLinecap=\"round\" />\n    <path d=\"M14 18L20 12\" stroke=\"currentColor\" strokeWidth=\"2.5\" strokeLinecap=\"round\" />\n    <path d=\"M4 12H20\" stroke=\"currentColor\" strokeWidth=\"2.5\" strokeLinecap=\"round\" />\n  </svg>\n)\n\nconst CarouselFade: React.FC<{ side?: string; show?: boolean; onClick?: any }> = ({\n  side = 'left',\n  show = false,\n  onClick = () => {},\n}) => {\n  const [mounted, setMounted] = useState(false)\n  const [reversed, setReversed] = useState(false)\n\n  useEffect(() => {\n    if (show === true && mounted === false) {\n      setMounted(true)\n    } else if (show === false && mounted === true) {\n      setReversed(true)\n    }\n  }, [show])\n\n  const handleFadeOutEnd = () => {\n    setMounted(false)\n    setReversed(false)\n  }\n\n  const style: React.CSSProperties =\n    side == 'left'\n      ? { top: 0, bottom: 0, left: -20, transform: 'rotate(180deg)' }\n      : { top: 0, bottom: 0, right: -20 }\n\n  return mounted ? (\n    <StyledCarouselFade\n      style={style}\n      reversed={reversed}\n      onAnimationEnd={reversed ? handleFadeOutEnd : null}\n    >\n      <StyledScrollButton onClick={() => onClick()} style={{ right: 16, top: 'calc(50% - 24px)' }}>\n        <RightArrow />\n      </StyledScrollButton>\n    </StyledCarouselFade>\n  ) : null\n}\n\nexport interface CarouselChecklistProps extends DefaultFrigadeFlowProps {\n  flowId: string\n}\n\nexport const CarouselChecklist: React.FC<CarouselChecklistProps> = ({\n  flowId,\n  appearance,\n  customVariables,\n  className,\n}) => {\n  const scrollContainerRef = useRef<HTMLDivElement>(null)\n  const [showLeftFade, setShowLeftFade] = useState(false)\n  const [showRightFade, setShowRightFade] = useState(false)\n  const [flowMetadata, setFlowMetadata] = useState(null)\n  const [flowSteps, setFlowSteps] = useState([])\n  const [numberOfStepsCompleted, setNumberOfStepsCompleted] = useState(0)\n  const { isSmall } = useMediaQuery()\n\n  const pageSize = isSmall ? 1 : 3\n\n  const {\n    getFlowMetadata,\n    getFlowSteps,\n    getNumberOfStepsCompleted,\n    updateCustomVariables,\n    isLoading,\n  } = useFlows()\n\n  useEffect(() => {\n    updateCustomVariables(customVariables)\n  }, [customVariables, isLoading])\n\n  useEffect(() => {\n    if (isLoading) return\n\n    const metadata = getFlowMetadata(flowId)\n    const completedStepCount = getNumberOfStepsCompleted(flowId)\n    const steps = getFlowSteps(flowId)\n\n    setFlowMetadata(metadata)\n    if (metadata.data !== null) {\n      setFlowSteps(steps.sort((a, b) => Number(a.complete) - Number(b.complete)))\n      setShowRightFade(steps.length > pageSize)\n      setNumberOfStepsCompleted(completedStepCount)\n    }\n  }, [isLoading])\n\n  const scrollGroups: any[][] = []\n  for (let i = 0; i < flowSteps.length; i += pageSize) {\n    scrollGroups.push(flowSteps.slice(i, i + pageSize))\n  }\n\n  const handleScroll = (e: React.UIEvent<HTMLElement>) => {\n    const target = e.target as HTMLElement\n    const maxScroll = target.scrollWidth - target.clientWidth\n    // Round up to avoid issues with fractional pixels\n    const currentScroll = Math.ceil(target.scrollLeft)\n\n    if (currentScroll > 0 && showLeftFade === false) {\n      setShowLeftFade(true)\n    }\n\n    if (currentScroll === 0 && showLeftFade === true) {\n      setShowLeftFade(false)\n    }\n\n    if (currentScroll < maxScroll && showRightFade === false) {\n      setShowRightFade(true)\n    }\n\n    if (currentScroll === maxScroll && showRightFade === true) {\n      setShowRightFade(false)\n    }\n  }\n\n  const handleScrollByPage = (forward = true) => {\n    const direction = forward ? 1 : -1\n\n    if (scrollContainerRef.current === null) return\n\n    scrollContainerRef.current.scrollBy({\n      left: scrollContainerRef.current.clientWidth * direction,\n      behavior: 'smooth',\n    })\n  }\n\n  let scrollTimeout = null\n  const throttledScroll = (e: React.UIEvent<HTMLElement>) => {\n    if (scrollTimeout !== null) {\n      clearTimeout(scrollTimeout)\n    } else {\n      // Invoke once before starting to throttle\n      handleScroll(e)\n    }\n\n    scrollTimeout = setTimeout(() => {\n      handleScroll(e)\n    }, 16)\n  }\n\n  if (isLoading) {\n    return null\n  }\n\n  return (\n    <CarouselContainer\n      className={mergeClasses(getClassName('carouselContainer', appearance), className)}\n    >\n      <div\n        style={{\n          display: 'flex',\n          justifyContent: isSmall ? 'center' : 'space-between',\n          marginBottom: 20,\n          flexWrap: isSmall ? 'wrap' : 'nowrap',\n          gap: isSmall ? 16 : 20,\n        }}\n      >\n        <div>\n          <CarouselTitle className={getClassName('carouselTitle', appearance)}>\n            {flowMetadata?.title}\n          </CarouselTitle>\n          <Body.Quiet className={getClassName('carouselSubtitle', appearance)}>\n            {flowMetadata?.subtitle}\n          </Body.Quiet>\n        </div>\n        <ProgressWrapper className={getClassName('progressWrapper', appearance)}>\n          <ProgressBar\n            count={numberOfStepsCompleted}\n            total={flowSteps.length}\n            appearance={appearance}\n          />\n        </ProgressWrapper>\n      </div>\n\n      <div style={{ position: 'relative' }}>\n        <CarouselFade show={showLeftFade} onClick={() => handleScrollByPage(false)} />\n        <CarouselFade side=\"right\" show={showRightFade} onClick={handleScrollByPage} />\n\n        <CarouselScroll ref={scrollContainerRef} onScroll={throttledScroll}>\n          {scrollGroups.map((group, i) => (\n            <CarouselScrollGroup\n              key={i}\n              style={{\n                flex: `0 0 calc(100% - ${flowSteps.length > pageSize ? 36 : 0}px)`,\n              }}\n            >\n              {group.map((stepData, j) => (\n                <CarouselCard\n                  key={j}\n                  stepData={stepData}\n                  style={{\n                    flex:\n                      flowSteps.length > pageSize\n                        ? `0 1 calc(100% / ${pageSize} - 16px * 2 / ${pageSize})`\n                        : 1,\n                  }}\n                  appearance={appearance}\n                />\n              ))}\n            </CarouselScrollGroup>\n          ))}\n        </CarouselScroll>\n      </div>\n      <RenderInlineStyles appearance={appearance} />\n    </CarouselContainer>\n  )\n}\n","import React, { FC } from 'react'\nimport { Appearance, StepData } from '../../../types'\nimport { useCTAClickSideEffects } from '../../../hooks/useCTAClickSideEffects'\nimport { CTA } from '../../checklist-step-content/shared/CTA'\n\nimport {\n  Body,\n  CardTitle,\n  CompletedPill,\n  Small,\n  StyledCarouselCard,\n  StyledCarouselCardImage,\n} from './styled'\nimport { useTheme } from '../../../hooks/useTheme'\nimport { getClassName } from '../../../shared/appearance'\n\ninterface CarouselCardProps {\n  stepData: StepData\n  style?: React.CSSProperties\n  appearance?: Appearance\n}\n\nexport const CarouselCard: FC<CarouselCardProps> = ({ stepData, style = {}, appearance }) => {\n  const { mergeAppearanceWithDefault } = useTheme()\n  const { primaryCTAClickSideEffects } = useCTAClickSideEffects()\n\n  appearance = mergeAppearanceWithDefault(appearance)\n\n  const {\n    imageUri = null,\n    subtitle = null,\n    title = null,\n    complete = false,\n    blocked = false,\n  } = stepData\n\n  const hasCTA = stepData.primaryButtonTitle || stepData.secondaryButtonTitle\n\n  const handleClick = () => {\n    primaryCTAClickSideEffects(stepData)\n  }\n\n  return (\n    <StyledCarouselCard\n      className={getClassName('carouselCard', appearance)}\n      onClick={blocked ? null : handleClick}\n      style={style}\n      blocked={blocked}\n      complete={complete}\n    >\n      {imageUri && (\n        <StyledCarouselCardImage\n          className={getClassName('carouselCardImage', appearance)}\n          src={imageUri}\n          alt={title}\n          style={{ opacity: complete || blocked ? 0.4 : 1 }}\n        />\n      )}\n      {complete && (\n        <CompletedPill className={getClassName('carouselCompletedPill', appearance)}>\n          <Small style={{ color: '#108E0B' }}>Complete</Small>\n        </CompletedPill>\n      )}\n      {title && (\n        <CardTitle\n          blocked={blocked}\n          complete={complete}\n          className={getClassName('carouselCardTitle', appearance)}\n        >\n          {title}\n        </CardTitle>\n      )}\n      {subtitle && (\n        <Body.Quiet\n          blocked={blocked}\n          complete={complete}\n          className={getClassName('carouselCardSubtitle', appearance)}\n        >\n          {subtitle}\n        </Body.Quiet>\n      )}\n      {/* !(complete || blocked) && hasCTA && <CTA stepData={stepData} appearance={appearance} /> */}\n    </StyledCarouselCard>\n  )\n}\n","import styled, { css, keyframes } from 'styled-components'\nimport { getCustomClassOverrides } from '../../../shared/appearance'\n\nconst defaultBorder = css`\n  border: 1px solid ${({ theme }) => theme.colorBorder};\n`\n\nconst defaultShadow = css`\n  box-shadow: 0 4px 20px 0 rgba(0, 0, 0, 0.06);\n`\n\nconst fadeIn = keyframes`\n  from {\n    opacity: 0;\n  } to {\n    opacity: 1;\n  }\n`\n\nconst fadeOut = keyframes`\n  from {\n    opacity: 1;\n  } to {\n    opacity: 0;\n  }\n`\n\nexport const CarouselScroll = styled.div`\n  margin: 0 -20px;\n  overflow-x: auto;\n  padding-left: 20px;\n  padding-right: 20px;\n  scroll-snap-type: x mandatory;\n\n  display: flex;\n  flex-flow: row nowrap;\n  gap: 0 16px;\n\n  -ms-overflow-style: none;\n  scrollbar-width: none;\n\n  ::-webkit-scrollbar {\n    display: none;\n  }\n`\n\nexport const CarouselScrollGroup = styled.div`\n  display: flex;\n  flex-flow: row nowrap;\n  gap: 0 16px;\n  scroll-snap-align: center;\n  scroll-snap-stop: always;\n`\n\nexport const StyledCarouselFade = styled.div`\n  animation: ${(props) => (props.reversed ? fadeOut : fadeIn)} 0.25s ease-out;\n  background: linear-gradient(\n    to right,\n    ${({ theme }) => theme.colorBackground}00,\n    ${({ theme }) => theme.colorBackground} 100%\n  );\n  position: absolute;\n  width: 64px;\n  z-index: 10;\n`\n\nexport const StyledScrollButton = styled.button`\n  ${defaultBorder}\n  box-shadow: 0 3px 10px 0 rgba(0, 0, 0, 0.1);\n  align-items: center;\n  border-radius: 50%;\n  background: ${({ theme }) => theme.colorBackground};\n  color: ${({ theme }) => theme.colorPrimary};\n  display: flex;\n  height: 48px;\n  justify-content: center;\n  position: absolute;\n  width: 48px;\n`\n\nexport const Card = styled.div`\n  border-radius: ${({ theme }) => theme.borderRadius}px;\n  padding: 20px;\n`\n\nexport const StyledCarouselCard = styled(Card)`\n  ${defaultBorder}\n  background: ${({ theme }) => theme.colorBackground};\n  position: relative;\n\n  &:active {\n    ${(props) => (!props.blocked ? `background: ${props.theme.colorBackgroundSecondary};` : ``)}\n  }\n\n  &:hover {\n    ${(props) => (!props.blocked ? `border: 1px solid ${props.theme.colorPrimary};` : ``)}\n    ${(props) => (!props.blocked ? `cursor: pointer` : `cursor: default`)}\n  }\n`\n\nexport const StyledCarouselCardImage = styled.img`\n  border-radius: 50%;\n  height: 40px;\n  margin-bottom: 12px;\n  width: 40px;\n`\n\nexport const CarouselContainer = styled(Card)`\n  ${(props) => getCustomClassOverrides(props)} {\n    ${defaultShadow}\n\n    background: ${({ theme }) => theme.colorBackground};\n  }\n`\n\nexport const CarouselProgressBar = styled.div`\n  color: ${({ theme }) => theme.colorPrimary};\n  display: flex;\n  flex-flow: row nowrap;\n  align-items: center;\n`\n\nexport const ProgressBarLabel = styled.div`\n  white-space: nowrap;\n`\n\nexport const CompletedPill = styled.div`\n  background: #d8fed8;\n  border-radius: 6px;\n  float: right;\n  margin-bottom: 12px;\n  padding: 4px 10px;\n`\n\nexport const H3 = styled.p`\n  font-weight: bold;\n  font-size: 18px;\n  line-height: 22px;\n  letter-spacing: calc(18px * -0.01);\n  margin: 0;\n`\n\nexport const CarouselTitle = styled(H3)`\n  margin-bottom: 4px;\n`\n\nexport const ProgressWrapper = styled.div`\n  display: flex;\n  flex-flow: row nowrap;\n  align-items: center;\n  min-width: 50%;\n`\n\nexport const H4 = styled.p`\n  font-weight: bold;\n  font-size: 16px;\n  line-height: 20px;\n  letter-spacing: calc(16px * -0.01);\n  margin: 0;\n`\n\nexport const CardTitle = styled(H4)`\n  margin-bottom: 4px;\n  ${(props) =>\n    props.blocked || props.complete\n      ? `opacity: 0.4;`\n      : `\n  `}\n`\n\nexport const Body = styled.p`\n  color: ${({ theme }) => theme.colorText};\n  font-weight: normal;\n  font-size: 14px;\n  line-height: 22px;\n  margin: 0;\n`\n\nexport const Small = styled.p`\n  color: ${({ theme }) => theme.colorText};\n  font-weight: 600;\n  font-size: 12px;\n  line-height: 16px;\n  margin: 0;\n`\n\nBody.Loud = styled(Body)`\n  font-weight: 600;\n`\n\nBody.Quiet = styled(Body)`\n  color: ${({ theme }) => theme.colorTextSecondary};\n  ${(props) =>\n    props.blocked || props.complete\n      ? `opacity: 0.4;`\n      : `\n  `}\n`\n","import React, { CSSProperties, useEffect } from 'react'\nimport { useFlows } from '../api/flows'\nimport { MiniProgressBadge, ProgressBadgeType } from '../components/Checklists/MiniProgressBadge'\nimport { useFlowOpens } from '../api/flow-opens'\nimport { DefaultFrigadeFlowProps } from '../types'\nimport { COMPLETED_FLOW } from '../api/common'\nimport { RenderInlineStyles } from '../components/RenderInlineStyles'\nimport { useTheme } from '../hooks/useTheme'\nimport { FullWidthProgressBadge } from '../components/Checklists/FullWidthProgressBadge'\n\ninterface FrigadeProgressBadgeProps extends DefaultFrigadeFlowProps {\n  title: string\n  subtitle?: string\n  icon?: React.ReactNode\n  textStyle?: CSSProperties\n  onClick?: () => void\n  hideOnFlowCompletion?: boolean\n  type?: ProgressBadgeType\n}\n\nexport const FrigadeProgressBadge: React.FC<FrigadeProgressBadgeProps> = ({\n  flowId,\n  title,\n  subtitle,\n  icon,\n  style,\n  onClick,\n  className,\n  customVariables,\n  hideOnFlowCompletion,\n  appearance,\n  type = 'default',\n}) => {\n  const {\n    getFlow,\n    getFlowSteps,\n    getFlowStatus,\n    getNumberOfStepsCompleted,\n    isLoading,\n    targetingLogicShouldHideFlow,\n    updateCustomVariables,\n  } = useFlows()\n  const { mergeAppearanceWithDefault } = useTheme()\n\n  appearance = mergeAppearanceWithDefault(appearance)\n\n  const { setOpenFlowState, getOpenFlowState } = useFlowOpens()\n\n  useEffect(() => {\n    updateCustomVariables(customVariables)\n  }, [customVariables, isLoading])\n\n  if (isLoading) {\n    return null\n  }\n\n  const flow = getFlow(flowId)\n  if (!flow) {\n    return null\n  }\n\n  if (targetingLogicShouldHideFlow(flow)) {\n    return null\n  }\n\n  if (hideOnFlowCompletion === true && getFlowStatus(flowId) === COMPLETED_FLOW) {\n    return null\n  }\n\n  const steps = getFlowSteps(flowId)\n  const completedCount = getNumberOfStepsCompleted(flowId)\n\n  if (type === 'full-width') {\n    return (\n      <>\n        <RenderInlineStyles appearance={appearance} />\n        <FullWidthProgressBadge\n          title={title}\n          subtitle={subtitle}\n          count={completedCount}\n          total={steps.length}\n          style={style}\n          className={className}\n          appearance={appearance}\n          icon={icon}\n          onClick={() => {}}\n        />\n      </>\n    )\n  }\n\n  return (\n    <>\n      <RenderInlineStyles appearance={appearance} />\n      <MiniProgressBadge\n        count={completedCount}\n        total={steps.length}\n        title={title}\n        style={style}\n        onClick={() => {\n          setOpenFlowState(flowId, true)\n          if (onClick) {\n            onClick()\n          }\n        }}\n        type={type}\n        className={className}\n        appearance={appearance}\n      />\n    </>\n  )\n}\n","import React, { CSSProperties, FC } from 'react'\nimport { Chevron } from '../../Icons/Chevron'\nimport { ProgressBar } from '../Checklist/ProgressBar'\nimport { BadgeContainer, BadgeRow, BadgeTitle, ProgressRingContainer } from './styled'\nimport { motion } from 'framer-motion'\nimport { Appearance } from '../../../types'\nimport ProgressRing from '../../Progress/ProgressRing/ProgressRing'\nimport { getClassName, mergeClasses } from '../../../shared/appearance'\nimport { RenderInlineStyles } from '../../RenderInlineStyles'\n\nexport type ProgressBadgeType = 'condensed' | 'default' | 'full-width'\n\nexport interface ProgressBadgeProps {\n  title: string\n  subtitle?: string\n  icon?: React.ReactNode\n  count: number\n  total: number\n  style?: CSSProperties\n  onClick: () => void\n  className?: string\n  type?: ProgressBadgeType\n  appearance?: Appearance\n}\n\nexport const MiniProgressBadge: FC<ProgressBadgeProps> = ({\n  title,\n  count,\n  total,\n  onClick,\n  style = {},\n  className,\n  appearance,\n  type = 'default',\n}) => {\n  return (\n    <>\n      <RenderInlineStyles appearance={appearance} />\n      <BadgeContainer\n        as={motion.div}\n        whileHover={{ opacity: 0.9 }}\n        whileTap={{ scale: 0.98 }}\n        onClick={() => onClick !== undefined && onClick()}\n        style={{\n          ...(type == 'condensed' ? { display: 'flex', justifyContent: 'space-between' } : {}),\n          ...style,\n        }}\n        className={mergeClasses(className ?? '', getClassName('progressRingContainer', appearance))}\n        appearance={appearance}\n      >\n        {type == 'condensed' && total && total !== 0 && (\n          <ProgressRingContainer className={getClassName('progressRingContainer', appearance)}>\n            <ProgressRing\n              size={19}\n              percentage={count / total}\n              fillColor={appearance.theme.colorPrimary}\n              bgColor={appearance.theme.colorBackgroundSecondary}\n            />\n          </ProgressRingContainer>\n        )}\n        <BadgeRow type={type} className={getClassName('badgeTitleContainer', appearance)}>\n          <BadgeTitle\n            type={type}\n            appearance={appearance}\n            className={getClassName('badgeTitle', appearance)}\n          >\n            {title}\n          </BadgeTitle>\n          {onClick !== undefined && (\n            <Chevron\n              className={getClassName('badgeChevron', appearance)}\n              color={appearance.theme.colorPrimary}\n            />\n          )}\n        </BadgeRow>\n        {type == 'default' && total && total !== 0 && (\n          <ProgressBar\n            display=\"compact\"\n            count={count}\n            total={total}\n            fillColor={appearance.theme.colorPrimary}\n            bgColor={appearance.theme.colorBackgroundSecondary}\n            style={{ width: '100%' }}\n            appearance={appearance}\n          />\n        )}\n      </BadgeContainer>\n    </>\n  )\n}\n","import styled from 'styled-components'\n\nexport const BadgeContainer = styled.div`\n  border: 1px solid ${(props) => props.appearance.theme.colorBorder};\n  border-radius: 8px;\n  padding: 6px 10px 6px 10px;\n  min-width: 160px;\n  cursor: pointer;\n  background-color: ${(props) => props.appearance.theme.colorBackground}};\n`\n\nexport const BadgeRow = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 2px;\n  flex-grow: 2;\n`\n\nexport const BadgeTitle = styled.div<{ color; type }>`\n  text-overflow: ellipsis;\n  font-weight: 600;\n  font-size: 12px;\n  line-height: 15px;\n  text-align: ${(props) => (props.type === 'condensed' ? 'left' : 'right')};\n  color: ${(props) => props.appearance.theme.colorPrimary};\n`\nexport const ProgressRingContainer = styled.div`\n  width: 20px;\n  margin-right: 8px;\n  display: flex;\n  height: 100%;\n  align-items: center;\n`\n","import React from 'react'\n\nimport {\n  FullWidthProgressBadgeContainer,\n  IconContainer,\n  ProgressBarContainer,\n  TextContainer,\n} from './styled'\nimport { ProgressBadgeProps } from '../MiniProgressBadge'\nimport { TitleSubtitle } from '../../TitleSubtitle/TitleSubtitle'\nimport { getClassName, mergeClasses } from '../../../shared/appearance'\nimport { ProgressBar } from '../Checklist/ProgressBar'\n\nexport const FullWidthProgressBadge: React.FC<ProgressBadgeProps> = ({\n  title,\n  subtitle,\n  icon,\n  appearance,\n  count,\n  total,\n  className,\n  style,\n}) => {\n  return (\n    <>\n      <FullWidthProgressBadgeContainer\n        appearance={appearance}\n        className={mergeClasses(\n          getClassName('fullWidthProgressBadgeContainer', appearance),\n          className ?? ''\n        )}\n        style={style}\n      >\n        {icon && (\n          <IconContainer className={getClassName('fullWidthProgressBadgeIcon', appearance)}>\n            {icon}\n          </IconContainer>\n        )}\n        <TextContainer>\n          <TitleSubtitle size={'small'} appearance={appearance} title={title} subtitle={subtitle} />\n        </TextContainer>\n        <ProgressBarContainer\n          className={getClassName('fullWidthProgressBadgeProgressContainer', appearance)}\n        >\n          <ProgressBar\n            count={count}\n            total={total}\n            display=\"percent\"\n            textLocation=\"top\"\n            fillColor={appearance.theme.colorPrimary}\n          />\n        </ProgressBarContainer>\n      </FullWidthProgressBadgeContainer>\n    </>\n  )\n}\n","import styled from 'styled-components'\nimport { getCustomClassOverrides } from '../../../shared/appearance'\n\nexport const FullWidthProgressBadgeContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  width: 100%;\n  padding: 16px;\n  box-sizing: border-box;\n  align-items: center;\n  background-color: ${(props) => props.appearance.theme.colorBackground};\n  border-width: 1px;\n  border-color: ${(props) => props.appearance.theme.colorPrimary};\n  border-radius: 12px;\n`\n\nexport const IconContainer = styled.div`\n  ${(props) => getCustomClassOverrides(props)} {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    margin-right: 16px;\n  }\n`\n\nexport const TextContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  flex: 1;\n  margin-top: 0;\n`\nexport const ProgressBarContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  margin-left: 16px;\n  min-width: 200px;\n`\n\nexport const DismissButton = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: flex-end;\n  margin-left: 16px;\n  cursor: pointer;\n  :hover {\n    opacity: 0.8;\n  }\n`\n","import React, { FC } from 'react'\nimport { useFlows } from '../api/flows'\nimport { Guide } from '../components/Guides'\nimport { DefaultFrigadeFlowProps } from '../types'\nimport { useTheme } from '../hooks/useTheme'\n\nexport interface FrigadeGuideProps extends DefaultFrigadeFlowProps {\n  title: string\n  primaryColor?: string\n}\n\nexport const FrigadeGuide: FC<FrigadeGuideProps> = ({ flowId, style, appearance, ...props }) => {\n  const { getFlow, targetingLogicShouldHideFlow, getFlowSteps } = useFlows()\n  const { mergeAppearanceWithDefault } = useTheme()\n  appearance = mergeAppearanceWithDefault(appearance)\n\n  const flow = getFlow(flowId)\n  if (!flow) {\n    return null\n  }\n\n  if (targetingLogicShouldHideFlow(flow)) {\n    return null\n  }\n\n  const steps = getFlowSteps(flowId)\n\n  return <Guide steps={steps} style={style} appearance={appearance} {...props} />\n}\n","import React, { CSSProperties, FC, useContext, useEffect } from 'react'\nimport { useFlows } from '../api/flows'\nimport { ToolTipData, Tooltips } from '../components/Tooltips'\nimport { Appearance, DefaultFrigadeFlowProps, StepData } from '../types'\nimport { COMPLETED_FLOW, COMPLETED_STEP } from '../api/common'\nimport { Portal } from 'react-portal'\nimport { useFlowOpens } from '../api/flow-opens'\nimport { FrigadeContext } from '../FrigadeProvider'\nimport { RenderInlineStyles } from '../components/RenderInlineStyles'\nimport { useCTAClickSideEffects } from '../hooks/useCTAClickSideEffects'\nimport { useTheme } from '../hooks/useTheme'\nimport { useUserFlowStates } from '../api/user-flow-states'\nimport { ToolTipPosition } from '../components/Tooltips/Tooltips'\n\nexport interface FrigadeTourProps extends Omit<DefaultFrigadeFlowProps, 'flowId'> {\n  /**\n   * @ignore\n   */\n  steps?: ToolTipData[]\n  onDismiss?: () => void\n  onComplete?: () => void\n  tooltipPosition?: ToolTipPosition\n  /**\n   * Whether to show the highlight (the small circle/ping) or not. Defaults to true.\n   */\n  showHighlight?: boolean\n  /**\n   * Whether to show more than one tooltip at a time. Defaults to false.\n   */\n  showTooltipsSimultaneously?: boolean\n  /**\n   * @ignore\n   */\n  buttonStyle?: CSSProperties\n  /**\n   * Offset to apply to all tooltips.\n   */\n  offset?: { x: number; y: number }\n  visible?: boolean\n  /**\n   * @ignore\n   */\n  containerStyle?: CSSProperties\n  customVariables?: { [key: string]: string | number | boolean }\n  /**\n   * @ignore\n   */\n  selectedStep?: number\n  customStepTypes?: Record<\n    string,\n    (props: { stepData: StepData; primaryColor: string }) => React.ReactNode\n  >\n  appearance?: Appearance\n  /**\n   * Shows a close button in the top right corner of the tooltip. Depending on dismissBehavior, it will either end the entire flow or just the current step.\n   */\n  dismissible?: boolean\n  primaryColor?: string\n  /**\n   * If true, the tooltip will only show the highlight and not the tooltip itself.\n   * Clicking the highlight will reveal it.\n   */\n  showHighlightOnly?: boolean\n  /**\n   * If true, a step counter will show up in the tooltip.\n   */\n  showStepCount?: boolean\n  /**\n   * `complete-flow` (default): Completes the entire flow/tour when a single tooltip is dismissed.\n   * `complete-step`: Completes the current step when a tooltip is dismissed.\n   */\n  dismissBehavior?: 'complete-flow' | 'complete-step'\n\n  /**\n   * @ignore\n   */\n  showFrigadeBranding?: boolean\n\n  /**\n   * If true, the tour will go to the next existing step/tip if the current selector element is not found on the page.\n   * Defaults to false.\n   */\n  skipIfNotFound?: boolean\n}\n\nexport const FrigadeTour: FC<\n  FrigadeTourProps & { flowId: string; initialSelectedStep?: number }\n> = ({\n  flowId,\n  customVariables,\n  appearance,\n  onStepCompletion,\n  onButtonClick,\n  showTooltipsSimultaneously = false,\n  onDismiss,\n  dismissible,\n  tooltipPosition = 'auto',\n  showHighlightOnly = false,\n  dismissBehavior = 'complete-flow',\n  onComplete,\n  skipIfNotFound = false,\n  ...props\n}) => {\n  const {\n    getFlow,\n    getFlowSteps,\n    isLoading,\n    targetingLogicShouldHideFlow,\n    markStepCompleted,\n    markStepStarted,\n    markFlowCompleted,\n    updateCustomVariables,\n    getCurrentStepIndex,\n    getStepStatus,\n    isStepBlocked,\n    getFlowStatus,\n    getNumberOfStepsCompleted,\n  } = useFlows()\n  const { isLoadingUserFlowStateData } = useUserFlowStates()\n  const { primaryCTAClickSideEffects, secondaryCTAClickSideEffects } = useCTAClickSideEffects()\n  const { hasOpenModals } = useFlowOpens()\n  const selectedStep = getCurrentStepIndex(flowId)\n  const { openFlowStates } = useContext(FrigadeContext)\n\n  const { mergeAppearanceWithDefault } = useTheme()\n\n  appearance = mergeAppearanceWithDefault(appearance)\n\n  useEffect(() => {\n    updateCustomVariables(customVariables)\n  }, [customVariables, isLoading])\n\n  if (isLoadingUserFlowStateData) {\n    return null\n  }\n\n  const flow = getFlow(flowId)\n  if (!flow) {\n    return null\n  }\n\n  if (targetingLogicShouldHideFlow(flow)) {\n    return null\n  }\n\n  if (getFlowStatus(flowId) == COMPLETED_FLOW) {\n    return null\n  }\n\n  // Check if any other flow modals are open. If so hide this one\n  if (hasOpenModals()) {\n    return null\n  }\n  const steps: ToolTipData[] = getFlowSteps(flowId)\n\n  // Hide tour flow if another flow is open\n  if (Object.keys(openFlowStates).length > 0) {\n    const otherFlowId = Object.keys(openFlowStates).find(\n      (_flowID) => openFlowStates[_flowID] === true\n    )\n    if (otherFlowId !== undefined && otherFlowId !== flowId) {\n      return <></>\n    }\n  }\n\n  async function markTooltipCompleted(stepData: StepData) {\n    await markStepCompleted(flowId, stepData.id)\n\n    // Check if all steps are now completed\n    if (\n      steps\n        .map((step: StepData) => getStepStatus(flowId, step.id))\n        .every((status) => status === COMPLETED_STEP)\n    ) {\n      await markFlowCompleted(flowId)\n      return\n    }\n    if (!showHighlightOnly && selectedStep + 1 < steps.length) {\n      // Double check next step is not blocked\n      if (isStepBlocked(flowId, steps[selectedStep + 1].id)) {\n        return\n      }\n      await markStepStarted(flowId, steps[selectedStep + 1].id)\n    }\n  }\n\n  function handleStepCompletionHandlers(step: StepData, cta: 'primary' | 'secondary', idx: number) {\n    const maybeNextStep = selectedStep + 1 < steps.length ? steps[selectedStep + 1] : null\n    if (onButtonClick) {\n      onButtonClick(step, selectedStep, cta, maybeNextStep)\n    }\n    if (onStepCompletion) {\n      onStepCompletion(step, idx, maybeNextStep)\n    }\n  }\n\n  function getSteps() {\n    return steps.map((step: StepData) => {\n      return {\n        ...step,\n        handleSecondaryButtonClick: async () => {\n          // Default to skip behavior for secondary click but allow for override\n          secondaryCTAClickSideEffects(step)\n          if (step.skippable === true) {\n            await markStepCompleted(flowId, step.id, { skipped: true })\n          }\n          handleStepCompletionHandlers(step, 'secondary', selectedStep)\n        },\n        handlePrimaryButtonClick: async () => {\n          if (\n            (!step.completionCriteria &&\n              (step.autoMarkCompleted || step.autoMarkCompleted === undefined)) ||\n            (step.completionCriteria && step.autoMarkCompleted === true)\n          ) {\n            await markTooltipCompleted(step)\n          }\n          handleStepCompletionHandlers(step, 'primary', selectedStep)\n          primaryCTAClickSideEffects(step)\n        },\n      }\n    })\n  }\n\n  async function onDismissTooltip(stepData: StepData) {\n    if (onDismiss) {\n      onDismiss()\n    }\n    if (dismissBehavior === 'complete-flow') {\n      await markFlowCompleted(flowId)\n    } else {\n      await markStepCompleted(flowId, stepData.id)\n    }\n  }\n\n  function handleComplete() {\n    if (onComplete) {\n      onComplete()\n    }\n  }\n\n  const isCurrentSelectorMissing = !Boolean(document.querySelector(steps[selectedStep].selector))\n\n  function renderMultipleToolTips() {\n    const firstVisibleIndex = steps.findIndex((step) => {\n      return Boolean(document.querySelector(step.selector))\n    })\n\n    return steps.map((step: StepData, idx: number) => {\n      if (\n        isCurrentSelectorMissing &&\n        !showTooltipsSimultaneously &&\n        idx !== firstVisibleIndex &&\n        skipIfNotFound\n      ) {\n        return null\n      }\n\n      return (\n        <Tooltips\n          key={step.id}\n          appearance={appearance}\n          steps={getSteps()}\n          selectedStep={idx}\n          showTooltipsSimultaneously={showTooltipsSimultaneously}\n          dismissible={dismissible}\n          onDismiss={() => onDismissTooltip(step)}\n          tooltipPosition={tooltipPosition}\n          showHighlightOnly={showHighlightOnly}\n          completedStepsCount={getNumberOfStepsCompleted(flowId)}\n          onComplete={handleComplete}\n          {...props}\n        />\n      )\n    })\n  }\n\n  return (\n    <Portal>\n      <RenderInlineStyles appearance={appearance} />\n      {showTooltipsSimultaneously || (isCurrentSelectorMissing && skipIfNotFound) ? (\n        renderMultipleToolTips()\n      ) : (\n        <Tooltips\n          appearance={appearance}\n          steps={getSteps()}\n          selectedStep={selectedStep}\n          showTooltipsSimultaneously={showTooltipsSimultaneously}\n          dismissible={dismissible}\n          onDismiss={() => onDismissTooltip(steps[selectedStep])}\n          tooltipPosition={tooltipPosition}\n          completedStepsCount={getNumberOfStepsCompleted(flowId)}\n          showHighlightOnly={showHighlightOnly}\n          onComplete={handleComplete}\n          {...props}\n        />\n      )}\n    </Portal>\n  )\n}\n\nexport default FrigadeTour\n","import React, { CSSProperties, FC, useEffect, useLayoutEffect, useRef, useState } from 'react'\n\nimport { Button } from '../Button'\nimport { Close } from '../Icons/Close'\nimport styled from 'styled-components'\nimport { getPosition, useElemRect } from './position'\nimport {\n  TooltipContainer,\n  TooltipCTAContainer,\n  TooltipDismissContainer,\n  TooltipFooter,\n  TooltipImageContainer,\n  TooltipStepCountContainer,\n  TooltipStepCounter,\n  TooltipVideoContainer,\n} from './styled'\nimport { StepData } from '../../types'\n\nimport { getClassName } from '../../shared/appearance'\nimport { TitleSubtitle } from '../TitleSubtitle/TitleSubtitle'\nimport { VideoCard } from '../Video/VideoCard'\nimport { PoweredByFrigadeTooltipRibbon } from '../branding/styled'\nimport { PoweredByFrigade } from '../branding/PoweredByFrigade'\nimport { FrigadeTourProps } from '../../FrigadeTour'\n\nexport type ToolTipPosition = 'left' | 'right' | 'auto'\n\nconst DEFAULT_CARD_WIDTH = 300\nconst DEFAULT_CARD_HEIGHT = 100\nconst DEFAULT_REFRESH_DELAY = 500\nconst HIGHLIGHT_RADIUS = 12\n\nexport interface ToolTipData extends StepData {\n  selector?: string\n  subtitleStyle?: CSSProperties\n  titleStyle?: CSSProperties\n  buttonStyle?: CSSProperties\n}\n\ninterface ToolTipPropsInternal extends FrigadeTourProps {\n  completedStepsCount: number\n}\n\nconst HighlightOuter = styled.div<{ primaryColor: string }>`\n  width: 100%;\n  height: 100%;\n  border-radius: 9999px;\n  display: inline-flex;\n  background-color: ${(props: any) => props.primaryColor};\n  animation-duration: 1.5s;\n  animation-timing-function: cubic-bezier(0, 0, 0.2, 1);\n  animation-delay: 0.15s;\n  animation-iteration-count: infinite;\n  animation-direction: normal;\n  animation-fill-mode: none;\n  animation-play-state: running;\n  animation-name: ping;\n  opacity: 0.15;\n\n  @keyframes ping {\n    75%,\n    to {\n      transform: scale(1.75);\n      opacity: 0;\n    }\n  }\n`\n\nconst HighlightInner = styled.div<{ primaryColor: string }>`\n  width: ${HIGHLIGHT_RADIUS}px;\n  height: ${HIGHLIGHT_RADIUS}px;\n  border-radius: 100px;\n  background-color: ${(props) => props.primaryColor};\n  z-index: 20;\n  opacity: 1;\n`\n\nconst TooltipWrapper = styled.div`\n  pointer-events: all;\n`\n\nconst PositionWrapper = styled.div<{ primaryColor: string }>`\n  display: flex;\n  align-content: center;\n  justify-content: center;\n  align-items: center;\n  z-index: ${(props) => (props.zIndex ? props.zIndex : 90)};\n`\n\nconst HighlightContainer = styled(PositionWrapper)`\n  width: ${HIGHLIGHT_RADIUS + 12}px;\n  height: ${HIGHLIGHT_RADIUS + 12}px;\n`\n\nconst Tooltips: FC<ToolTipPropsInternal> = ({\n  steps = [],\n  onDismiss,\n  onComplete = () => {},\n  tooltipPosition = 'auto',\n  showHighlight = true,\n  primaryColor = '#000000',\n  offset = { x: 0, y: 0 },\n  visible = true,\n  containerStyle = {},\n  selectedStep = 0,\n  customStepTypes,\n  appearance,\n  dismissible = false,\n  showHighlightOnly,\n  showStepCount = true,\n  completedStepsCount = 0,\n  showFrigadeBranding = false,\n}) => {\n  const [selfBounds, setSelfBounds] = useState<undefined | Partial<DOMRect>>()\n  const [needsUpdate, setNeedsUpdate] = useState(new Date())\n  const selfRef = useRef(null)\n\n  const [elem, setElem] = useState(document.querySelector(steps[selectedStep].selector))\n  const boundingRect = useElemRect(elem, needsUpdate)\n  const [lastBoundingRect, setLastBoundingRect] = useState<string>()\n  const [showTooltipContainer, setShowTooltipContainer] = useState(!showHighlightOnly)\n  const positionStyle = steps[selectedStep]?.props?.position\n    ? steps[selectedStep].props.position\n    : 'absolute'\n  const zIndex = steps[selectedStep]?.props?.zIndex ?? 90\n  const cardWidth = selfBounds?.width ?? DEFAULT_CARD_WIDTH\n  const cardHeight = selfBounds?.height ?? DEFAULT_CARD_HEIGHT\n\n  useLayoutEffect(() => {\n    if (selfRef.current) {\n      setSelfBounds({\n        width: selfRef.current.clientWidth,\n        height: selfRef.current.clientHeight,\n      })\n    }\n  }, [selectedStep, needsUpdate, positionStyle])\n\n  useEffect(() => {\n    if (!showHighlightOnly) {\n      setShowTooltipContainer(true)\n    }\n  }, [selectedStep])\n\n  let tooltipPositionValue: ToolTipPosition =\n    tooltipPosition === 'auto' ? 'right' : (tooltipPosition as ToolTipPosition)\n  let position = getPosition(boundingRect, tooltipPositionValue, cardWidth, offset, positionStyle)\n\n  const rightSideIsCropped =\n    boundingRect.right + cardWidth > (window.innerWidth || document.documentElement.clientWidth)\n  const bottomIsCropped =\n    boundingRect.bottom + DEFAULT_CARD_HEIGHT >\n    (window.innerHeight || document.documentElement.clientHeight)\n\n  if (rightSideIsCropped && tooltipPosition === 'auto') {\n    position = getPosition(boundingRect, 'left', cardWidth, offset, positionStyle)\n    tooltipPositionValue = 'left'\n  }\n\n  const url = window.location.pathname.split('/').pop()\n\n  const handleRefreshPosition = () => {\n    const elem = document.querySelector(steps[selectedStep].selector)\n    if (!elem) {\n      setLastBoundingRect(undefined)\n      setElem(null)\n      return\n    }\n    if (lastBoundingRect && lastBoundingRect === JSON.stringify(elem?.getBoundingClientRect())) {\n      return\n    }\n    setElem(elem)\n    setNeedsUpdate(new Date())\n    if (elem) {\n      setLastBoundingRect(JSON.stringify(elem.getBoundingClientRect()))\n    }\n  }\n\n  useEffect(() => {\n    const observer = new MutationObserver(handleRefreshPosition)\n    observer.observe(document.body, { subtree: true, childList: true })\n    return () => observer.disconnect()\n  }, [handleRefreshPosition])\n\n  useEffect(() => {\n    const observer = new MutationObserver(handleRefreshPosition)\n    observer.observe(document.body, {\n      subtree: true,\n      childList: true,\n      attributes: true,\n      attributeFilter: ['style', 'class'],\n    })\n    return () => observer.disconnect()\n  }, [handleRefreshPosition])\n\n  useEffect(() => {\n    const intervalId = setInterval(() => {\n      handleRefreshPosition()\n    }, 10)\n    return () => clearInterval(intervalId)\n  }, [handleRefreshPosition])\n\n  useLayoutEffect(() => {\n    setTimeout(() => {\n      handleRefreshPosition()\n    }, DEFAULT_REFRESH_DELAY)\n\n    handleRefreshPosition()\n  }, [selectedStep, url])\n\n  if (elem === null) {\n    return <></>\n  }\n\n  // Safeguard for when page is still waiting to render.\n  if (position.x == 0 && position.y == 0) {\n    return <></>\n  }\n\n  if (!visible) return <></>\n\n  const DefaultFooterContent = () => {\n    const handleOnCTAClick = () => {\n      if (steps[selectedStep].handlePrimaryButtonClick) {\n        steps[selectedStep].handlePrimaryButtonClick()\n        setShowTooltipContainer(false)\n        setTimeout(() => {\n          handleRefreshPosition()\n        }, 30)\n      }\n      if (completedStepsCount === steps.length - 1) {\n        return onComplete()\n      }\n    }\n\n    const handleOnSecondaryCTAClick = () => {\n      if (steps[selectedStep].handleSecondaryButtonClick) {\n        steps[selectedStep].handleSecondaryButtonClick()\n        if (showHighlightOnly && !steps[selectedStep].secondaryButtonUri) {\n          setShowTooltipContainer(false)\n        }\n      }\n    }\n\n    return (\n      <>\n        {showStepCount && steps.length > 1 && (\n          <TooltipStepCountContainer>\n            <TooltipStepCounter className={getClassName('tooltipStepCounter', appearance)}>\n              {selectedStep + 1} of {steps.length}\n            </TooltipStepCounter>\n          </TooltipStepCountContainer>\n        )}\n        <TooltipCTAContainer\n          showStepCount={showStepCount}\n          className={getClassName('tooltipCTAContainer', appearance)}\n        >\n          {steps[selectedStep].secondaryButtonTitle && (\n            <Button\n              title={steps[selectedStep].secondaryButtonTitle}\n              appearance={appearance}\n              onClick={handleOnSecondaryCTAClick}\n              size=\"small\"\n              withMargin={false}\n              secondary\n            />\n          )}\n          {steps[selectedStep].primaryButtonTitle && (\n            <Button\n              title={steps[selectedStep].primaryButtonTitle}\n              appearance={appearance}\n              onClick={handleOnCTAClick}\n              withMargin={false}\n              size=\"small\"\n            />\n          )}\n        </TooltipCTAContainer>\n      </>\n    )\n  }\n\n  const DefaultTooltipStepContent = () => {\n    return (\n      <>\n        {dismissible && (\n          <TooltipDismissContainer\n            data-testid=\"tooltip-dismiss\"\n            onClick={() => {\n              if (onDismiss) {\n                onDismiss()\n              }\n            }}\n            className={getClassName('tooltipClose', appearance)}\n          >\n            <Close />\n          </TooltipDismissContainer>\n        )}\n        {steps[selectedStep].imageUri && (\n          <TooltipImageContainer\n            dismissible={dismissible}\n            appearance={appearance}\n            src={steps[selectedStep].imageUri}\n            className={getClassName('tooltipImageContainer', appearance)}\n          />\n        )}\n        {steps[selectedStep].videoUri && !steps[selectedStep].imageUri && (\n          <TooltipVideoContainer\n            dismissible={dismissible}\n            appearance={appearance}\n            className={getClassName('tooltipVideoContainer', appearance)}\n          >\n            <VideoCard appearance={appearance} videoUri={steps[selectedStep].videoUri} />\n          </TooltipVideoContainer>\n        )}\n        <TitleSubtitle\n          appearance={appearance}\n          title={steps[selectedStep].title}\n          subtitle={steps[selectedStep].subtitle}\n          size=\"small\"\n        />\n        <TooltipFooter className={getClassName('tooltipFooter', appearance)}>\n          <DefaultFooterContent />\n        </TooltipFooter>\n      </>\n    )\n  }\n\n  const DEFAULT_CUSTOM_STEP_TYPES = {\n    default: (_: StepData) => {\n      if (steps[selectedStep]?.StepContent) {\n        const Content: React.ReactNode = steps[selectedStep].StepContent\n        return <div>{Content}</div>\n      }\n\n      return <DefaultTooltipStepContent />\n    },\n  }\n\n  const mergedCustomStepTypes = { ...DEFAULT_CUSTOM_STEP_TYPES, ...customStepTypes }\n\n  const StepContent = () => {\n    if (!steps) return <></>\n    if (!steps[selectedStep]?.type || !mergedCustomStepTypes[steps[selectedStep].type]) {\n      return mergedCustomStepTypes['default'](steps[selectedStep])\n    }\n    return mergedCustomStepTypes[steps[selectedStep].type]({\n      stepData: steps[selectedStep],\n      primaryColor: primaryColor,\n    })\n  }\n\n  if (showHighlightOnly && steps[selectedStep].complete === true) {\n    return null\n  }\n\n  const cssPos = {\n    top: position?.y - HIGHLIGHT_RADIUS ?? 0,\n    left:\n      (tooltipPositionValue == 'left'\n        ? boundingRect.x + offset.x\n        : position?.x - HIGHLIGHT_RADIUS) ?? 0,\n    cursor: showHighlightOnly ? 'pointer' : 'default',\n    position: positionStyle,\n  }\n\n  // Lock tooltip position to be within bounds of the window\n  const getBoundedLeftPosition = () => {\n    const spaceFromEdge = 20\n    const leftOffset = cssPos.left + (tooltipPositionValue == 'left' ? -cardWidth : 24)\n\n    return Math.min(\n      Math.max(leftOffset, spaceFromEdge),\n      window.innerWidth - cardWidth - spaceFromEdge\n    )\n  }\n\n  const handleClick = () => {\n    if (showHighlightOnly) {\n      setNeedsUpdate(new Date())\n      setShowTooltipContainer(!showTooltipContainer)\n    }\n  }\n\n  return (\n    <TooltipWrapper>\n      <HighlightContainer\n        style={cssPos}\n        zIndex={zIndex}\n        className={getClassName('tourHighlightContainer', appearance)}\n      >\n        {showHighlight && steps[selectedStep].showHighlight !== false && (\n          <>\n            <HighlightInner\n              style={{\n                position: positionStyle,\n              }}\n              onClick={handleClick}\n              primaryColor={appearance.theme.colorPrimary}\n              className={getClassName('tourHighlightInnerCircle', appearance)}\n            ></HighlightInner>\n            <HighlightOuter\n              style={{\n                position: 'absolute',\n              }}\n              onClick={handleClick}\n              primaryColor={appearance.theme.colorPrimary}\n              className={getClassName('tourHighlightOuterCircle', appearance)}\n            ></HighlightOuter>\n          </>\n        )}\n      </HighlightContainer>\n      <PositionWrapper\n        style={{\n          ...cssPos,\n          left: getBoundedLeftPosition(),\n        }}\n        zIndex={zIndex + 1}\n        className={getClassName('tooltipContainerWrapper', appearance)}\n      >\n        {showTooltipContainer && (\n          <>\n            <TooltipContainer\n              ref={selfRef}\n              layoutId=\"tooltip-container\"\n              style={{\n                position: 'relative',\n                width: 'max-content',\n                right: 0,\n                top: 12,\n                ...containerStyle,\n              }}\n              appearance={appearance}\n              className={getClassName('tooltipContainer', appearance)}\n              maxWidth={DEFAULT_CARD_WIDTH}\n              zIndex={zIndex + 10}\n            >\n              <StepContent />\n            </TooltipContainer>\n            {showFrigadeBranding && (\n              <PoweredByFrigadeTooltipRibbon\n                className={getClassName('poweredByFrigadeTooltipRibbon', appearance)}\n                appearance={appearance}\n                zIndex={zIndex + 10}\n              >\n                <PoweredByFrigade appearance={appearance} />\n              </PoweredByFrigadeTooltipRibbon>\n            )}\n          </>\n        )}\n      </PositionWrapper>\n    </TooltipWrapper>\n  )\n}\n\nexport default Tooltips\n","import { ToolTipPosition } from './Tooltips'\nimport { useCallback, useEffect, useState } from 'react'\n\ntype BoundingRect = {\n  left: number\n  top: number\n  width: number\n  height: number\n}\n\ntype Point = {\n  x: number\n  y: number\n}\n\nexport const getPosition = (\n  boundingRect: BoundingRect,\n  position: ToolTipPosition,\n  cardWidth: number,\n  offset: Point = { x: 20, y: 20 },\n  positionStyle: string\n): Point => {\n  const scrollY = positionStyle == 'fixed' ? 0 : window.scrollY\n  const scrollX = positionStyle == 'fixed' ? 0 : window.scrollX\n\n  if (!boundingRect || !boundingRect.left || !boundingRect.top) return { x: 0, y: 0 }\n\n  if (position === 'left') {\n    return {\n      x: boundingRect.left - cardWidth + offset.x + scrollX,\n      y: boundingRect.top - offset.y + scrollY,\n    }\n  } else if (position === 'right') {\n    return {\n      x: boundingRect.left + boundingRect.width + offset.x + scrollX,\n      y: boundingRect.top - offset.y + scrollY,\n    }\n  }\n\n  return { x: 0, y: 0 }\n}\n\nexport type RectResult = {\n  bottom: number\n  height: number\n  left: number\n  right: number\n  top: number\n  width: number\n  x: number\n  y: number\n}\n\nconst initialState = {\n  bottom: 0,\n  height: 0,\n  left: 0,\n  right: 0,\n  top: 0,\n  width: 0,\n  x: 0,\n  y: 0,\n}\n\nexport function getRect<T extends Element>(element?: T | undefined | null): RectResult {\n  let rect: RectResult = initialState\n  if (element) {\n    const domRect: DOMRect = element.getBoundingClientRect()\n    rect = domRect\n  }\n  return rect\n}\n\nexport function useElemRect(elem: Element | undefined, refresher?: any): RectResult {\n  const [dimensions, setDimensions] = useState(initialState)\n  const handleResize = useCallback(() => {\n    if (!elem) return\n    setDimensions(getRect(elem))\n  }, [elem])\n\n  useEffect(() => {\n    handleResize()\n    window.addEventListener('resize', handleResize)\n    return () => window.removeEventListener('resize', handleResize)\n  }, [elem, refresher])\n\n  return dimensions\n}\n","import React, { FC, useEffect, useRef, useState } from 'react'\n\nimport { DefaultFrigadeFlowProps, StepData } from '../types'\nimport { useFlows } from '../api/flows'\nimport { Portal } from 'react-portal'\nimport {\n  FloatingWidgetButton,\n  FloatingWidgetContainer,\n  FloatingWidgetMenu,\n  FlowWidgetMenuItem,\n  SupportButton,\n  SupportIconContainer,\n  SupportTitle,\n} from './styled'\nimport { AnimatePresence, motion } from 'framer-motion'\nimport { Question } from '../components/Icons/Question'\nimport { getClassName } from '../shared/appearance'\nimport { QuestionCircle } from '../components/Icons/QuestionCircle'\nimport { useCTAClickSideEffects } from '../hooks/useCTAClickSideEffects'\nimport { useTheme } from '../hooks/useTheme'\n\nexport interface FloatingWidgetProps extends DefaultFrigadeFlowProps {\n  type?: 'floating' | 'inline'\n  visible?: boolean\n  title?: string\n}\n\nexport const FrigadeSupportWidget: FC<FloatingWidgetProps> = ({\n  flowId,\n  style,\n  onStepCompletion,\n  visible = true,\n  type = 'inline',\n  title = 'Help',\n  appearance,\n}) => {\n  const {\n    getFlow,\n    getFlowSteps,\n    markStepCompleted,\n    getStepStatus,\n    getNumberOfStepsCompleted,\n    isLoading,\n    targetingLogicShouldHideFlow,\n  } = useFlows()\n  const { primaryCTAClickSideEffects } = useCTAClickSideEffects()\n  const wrapperRef = useRef(null)\n  const [showMenu, setShowMenu] = useState(false)\n  const { mergeAppearanceWithDefault } = useTheme()\n\n  appearance = mergeAppearanceWithDefault(appearance)\n\n  // below is the same as componentDidMount and componentDidUnmount\n  useEffect(() => {\n    document.addEventListener('click', handleClickOutside, false)\n    return () => {\n      document.removeEventListener('click', handleClickOutside, false)\n    }\n  }, [])\n\n  const handleClickOutside = (event) => {\n    if (wrapperRef.current && !wrapperRef.current.contains(event.target)) {\n      setShowMenu(false)\n    }\n  }\n\n  if (isLoading) {\n    return null\n  }\n  const flow = getFlow(flowId)\n  if (!flow) {\n    return null\n  }\n\n  if (targetingLogicShouldHideFlow(flow)) {\n    return null\n  }\n\n  const steps: StepData[] = getFlowSteps(flowId)\n  if (!steps) {\n    return null\n  }\n\n  if (!visible) {\n    return null\n  }\n\n  function handlePrimaryButtonClick(step: StepData, index: number) {\n    if (\n      !step.completionCriteria &&\n      (step.autoMarkCompleted || step.autoMarkCompleted === undefined)\n    ) {\n      markStepCompleted(flowId, step.id)\n    }\n    primaryCTAClickSideEffects(step)\n    if (onStepCompletion) {\n      onStepCompletion(step, index)\n    }\n    setShowMenu(false)\n  }\n\n  function Menu() {\n    return (\n      showMenu && (\n        <FloatingWidgetMenu\n          className={getClassName('floatingWidgetMenu', appearance)}\n          as={motion.div}\n          initial={{ opacity: 0 }}\n          animate={{ opacity: 1 }}\n          exit={{ opacity: 0 }}\n          transition={{ duration: 0.1 }}\n          type={type}\n        >\n          {steps.map((step, index) => (\n            <FlowWidgetMenuItem\n              className={getClassName('floatingWidgetMenuItem', appearance)}\n              key={index}\n              onClick={() => handlePrimaryButtonClick(step, index)}\n            >\n              {step.title}\n            </FlowWidgetMenuItem>\n          ))}\n        </FloatingWidgetMenu>\n      )\n    )\n  }\n\n  if (type == 'inline') {\n    return (\n      <span ref={wrapperRef}>\n        <SupportButton\n          style={style}\n          onClick={() => {\n            setShowMenu(!showMenu)\n          }}\n          className={getClassName('supportButton', appearance)}\n        >\n          <SupportIconContainer className={getClassName('supportIconContainer', appearance)}>\n            <QuestionCircle\n              className={getClassName('supportIcon', appearance)}\n              style={{ width: '18px', height: '18px' }}\n            />\n          </SupportIconContainer>\n          <SupportTitle className={getClassName('supportButtonTitle', appearance)}>\n            {title}\n          </SupportTitle>\n        </SupportButton>\n        <AnimatePresence>\n          <Menu />\n        </AnimatePresence>\n      </span>\n    )\n  }\n\n  return (\n    <Portal>\n      <FloatingWidgetContainer style={style} ref={wrapperRef}>\n        <AnimatePresence>\n          <Menu />\n        </AnimatePresence>\n        <FloatingWidgetButton\n          onClick={() => {\n            setShowMenu(!showMenu)\n          }}\n          as={motion.button}\n          whileHover={{ scale: 1.1 }}\n          className={getClassName('floatingWidgetButton', appearance)}\n        >\n          <Question\n            className={getClassName('floatingWidgetButtonIcon', appearance)}\n            style={{ display: 'flex', width: '20px', height: '20px' }}\n          />\n        </FloatingWidgetButton>\n      </FloatingWidgetContainer>\n    </Portal>\n  )\n}\n\nexport default FrigadeSupportWidget\n","import styled from 'styled-components'\nimport { getCustomClassOverrides } from '../shared/appearance'\n\nexport const SupportButton = styled.button`\n  ${(props) => getCustomClassOverrides(props)} {\n    // Anything inside this block will be ignored if the user provides a custom class\n\n    display: flex;\n    flex-direction: row;\n    justify-content: space-between;\n    padding: 6px 10px;\n    gap: 8px;\n\n    background: #fafafa;\n    border: 1px solid #d9d9d9;\n    border-radius: 21px;\n    font-size: 12px;\n    :hover {\n      opacity: 0.8;\n    }\n  }\n`\n\nexport const SupportTitle = styled.span`\n  ${(props) => getCustomClassOverrides(props)} {\n    font-size: 12px;\n    display: inline-block;\n  }\n`\nexport const SupportIconContainer = styled.span`\n  ${(props) => getCustomClassOverrides(props)} {\n    font-size: 12px;\n    display: inline-block;\n  }\n`\n\nexport const FloatingWidgetContainer = styled.div`\n  position: fixed;\n  right: 0;\n  bottom: 0;\n  margin-right: 24px;\n  margin-bottom: 24px;\n  display: flex;\n  flex-direction: column;\n  align-items: flex-end;\n  z-index: 50;\n`\n\nexport const FloatingWidgetButton = styled.button`\n  ${(props) => getCustomClassOverrides(props)} {\n    // Anything inside this block will be ignored if the user provides a custom class\n    background-color: #ffffff;\n    border: 1px solid #f5f5f5;\n  }\n  width: 50px;\n  height: 50px;\n  display: flex;\n  align-content: center;\n  align-items: center;\n  justify-content: center;\n  box-shadow: 0px 9px 28px 8px rgba(0, 0, 0, 0.05), 0px 6px 16px rgba(0, 0, 0, 0.08),\n    0px 3px 6px -4px rgba(0, 0, 0, 0.12);\n  border-radius: 45px;\n  cursor: pointer;\n`\nexport const FloatingWidgetMenu = styled.div`\n  ${(props) => getCustomClassOverrides(props)} {\n    // Anything inside this block will be ignored if the user provides a custom class\n    background: #ffffff;\n  }\n\n  display: flex;\n  flex-direction: column;\n  min-width: 200px;\n  padding: 4px;\n  box-shadow: 0px 9px 28px 8px rgba(0, 0, 0, 0.05), 0px 6px 16px rgba(0, 0, 0, 0.08),\n    0px 3px 6px -4px rgba(0, 0, 0, 0.12);\n  border-radius: 8px;\n  margin-bottom: 22px;\n  position: ${(props) => (props.type == 'inline' ? 'absolute' : 'relative')};\n  top: ${(props) => (props.type == 'inline' ? '68px' : 0)};\n  margin-left: ${(props) => (props.type == 'inline' ? '-127px' : 0)};\n`\n\nexport const FlowWidgetMenuItem = styled.button`\n  ${(props) => getCustomClassOverrides(props)} {\n    // Anything inside this block will be ignored if the user provides a custom class\n    color: #434343;\n    :hover {\n      background-color: #f5f5f5;\n    }\n  }\n\n  display: flex;\n  border-radius: 8px;\n  background-color: transparent;\n  border: none;\n  cursor: pointer;\n  font-size: 14px;\n\n  padding: 8px 12px;\n`\n","import React, { CSSProperties } from 'react'\n\nexport const Question = ({\n  style,\n  className,\n}: {\n  color?: string\n  style?: CSSProperties\n  className?: string\n}) => (\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    width=\"18\"\n    height=\"18\"\n    fill=\"none\"\n    viewBox=\"0 0 18 18\"\n    style={style}\n    className={className}\n  >\n    <path\n      fill=\"currentColor\"\n      d=\"M13.43 4.938a4.494 4.494 0 00-1.043-1.435A4.955 4.955 0 009 2.197c-1.276 0-2.48.464-3.387 1.305A4.502 4.502 0 004.57 4.938a4.242 4.242 0 00-.386 1.773v.475c0 .109.087.197.196.197h.95a.197.197 0 00.197-.197V6.71c0-1.749 1.557-3.17 3.473-3.17s3.473 1.421 3.473 3.17c0 .718-.254 1.393-.738 1.955a3.537 3.537 0 01-1.9 1.125 1.928 1.928 0 00-1.085.682c-.271.343-.42.768-.42 1.206v.552c0 .109.088.197.197.197h.95a.197.197 0 00.196-.197v-.552c0-.276.192-.519.457-.578a4.904 4.904 0 002.625-1.56c.335-.392.597-.828.778-1.3a4.256 4.256 0 00-.103-3.303zM9 13.834a.985.985 0 10.001 1.97.985.985 0 00-.001-1.97z\"\n    ></path>\n  </svg>\n)\n","import React, { CSSProperties } from 'react'\n\nexport const QuestionCircle = ({\n  style,\n  className,\n}: {\n  color?: string\n  style?: CSSProperties\n  className?: string\n}) => (\n  <svg\n    style={style}\n    className={className}\n    xmlns=\"http://www.w3.org/2000/svg\"\n    fill=\"none\"\n    viewBox=\"0 0 24 24\"\n    strokeWidth=\"1.5\"\n    stroke=\"currentColor\"\n  >\n    <path\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      d=\"M9.879 7.519c1.171-1.025 3.071-1.025 4.242 0 1.172 1.025 1.172 2.687 0 3.712-.203.179-.43.326-.67.442-.745.361-1.45.999-1.45 1.827v.75M21 12a9 9 0 11-18 0 9 9 0 0118 0zm-9 5.25h.008v.008H12v-.008z\"\n    />\n  </svg>\n)\n","import { DefaultFrigadeFlowProps } from '../types'\nimport React, { useEffect } from 'react'\nimport { useFlows } from '../api/flows'\nimport { useCTAClickSideEffects } from '../hooks/useCTAClickSideEffects'\nimport { useTheme } from '../hooks/useTheme'\nimport { COMPLETED_FLOW } from '../api/common'\nimport { RenderInlineStyles } from '../components/RenderInlineStyles'\nimport { CallToActionContainer, DismissButton, EmbeddedTipContainer, TextContainer } from './styled'\nimport { getClassName, mergeClasses } from '../shared/appearance'\nimport { Close } from '../components/Icons/Close'\nimport { TitleSubtitle } from '../components/TitleSubtitle/TitleSubtitle'\nimport { Button } from '../components/Button'\n\nexport interface FrigadeEmbeddedTipProps extends DefaultFrigadeFlowProps {\n  dismissible?: boolean\n}\n\nexport const FrigadeEmbeddedTip: React.FC<FrigadeEmbeddedTipProps> = ({\n  flowId,\n  onDismiss,\n  customVariables,\n  onButtonClick,\n  appearance,\n  className,\n  style,\n  dismissible,\n}) => {\n  const {\n    getFlow,\n    markFlowCompleted,\n    markStepCompleted,\n    isLoading,\n    targetingLogicShouldHideFlow,\n    updateCustomVariables,\n    getFlowSteps,\n    getFlowStatus,\n    getCurrentStepIndex,\n  } = useFlows()\n  const { primaryCTAClickSideEffects } = useCTAClickSideEffects()\n  const { mergeAppearanceWithDefault } = useTheme()\n\n  appearance = mergeAppearanceWithDefault(appearance)\n\n  useEffect(() => {\n    updateCustomVariables(customVariables)\n  }, [customVariables, isLoading])\n\n  if (isLoading) {\n    return null\n  }\n\n  const flow = getFlow(flowId)\n  if (!flow) {\n    return null\n  }\n\n  if (targetingLogicShouldHideFlow(flow)) {\n    return null\n  }\n\n  if (getFlowStatus(flowId) === COMPLETED_FLOW) {\n    return null\n  }\n\n  const steps = getFlowSteps(flowId)\n\n  const currentStep = steps[getCurrentStepIndex(flowId)]\n\n  return (\n    <>\n      <RenderInlineStyles appearance={appearance} />\n      <EmbeddedTipContainer\n        appearance={appearance}\n        className={mergeClasses(getClassName('embeddedTipContainer', appearance), className)}\n        style={style}\n      >\n        {(dismissible === true || currentStep.dismissible) && (\n          <DismissButton\n            onClick={async () => {\n              await markFlowCompleted(flowId)\n              if (onDismiss) {\n                onDismiss()\n              }\n            }}\n            className={getClassName('embeddedTipDismissButton', appearance)}\n          >\n            <Close />\n          </DismissButton>\n        )}\n        <TextContainer>\n          <TitleSubtitle\n            size=\"small\"\n            appearance={appearance}\n            title={currentStep.title}\n            subtitle={currentStep.subtitle}\n          />\n        </TextContainer>\n        {currentStep.primaryButtonTitle && (\n          <CallToActionContainer\n            className={getClassName('embeddedTipCallToActionContainer', appearance)}\n          >\n            <Button\n              classPrefix=\"embeddedTip\"\n              title={currentStep.primaryButtonTitle}\n              appearance={appearance}\n              withMargin={false}\n              size=\"small\"\n              type=\"inline\"\n              onClick={async () => {\n                currentStep.handlePrimaryButtonClick()\n                primaryCTAClickSideEffects(currentStep)\n                if (onButtonClick) {\n                  const result = onButtonClick(currentStep, getCurrentStepIndex(flowId), 'primary')\n                  if (result === false) {\n                    return\n                  }\n                }\n                await markStepCompleted(flowId, currentStep.id)\n                await markFlowCompleted(flowId)\n              }}\n            />\n          </CallToActionContainer>\n        )}\n      </EmbeddedTipContainer>\n    </>\n  )\n}\n","import styled from 'styled-components'\nimport { getCustomClassOverrides } from '../shared/appearance'\n\nexport const EmbeddedTipContainer = styled.div`\n  ${(props) => getCustomClassOverrides(props)} {\n    display: flex;\n    flex-direction: column;\n    width: 100%;\n    max-width: 400px;\n    padding: 28px 18px;\n    box-sizing: border-box;\n    align-items: unset;\n    background-color: ${(props) => props.appearance.theme.colorBackground};\n    border-width: 1px;\n    border-color: ${(props) => props.appearance.theme.colorBorder};\n    border-radius: 12px;\n    position: relative;\n  }\n`\nexport const TextContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  flex: 1;\n`\nexport const CallToActionContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: flex-start;\n  margin-top: 16px;\n`\n\nexport const DismissButton = styled.div`\n  ${(props) => getCustomClassOverrides(props)} {\n    position: absolute;\n    top: 16px;\n    right: 16px;\n    cursor: pointer;\n\n    :hover {\n      opacity: 0.8;\n    }\n  }\n`\n","import React, { useEffect } from 'react'\n\nimport { useFlows } from '../api/flows'\nimport { DefaultFrigadeFlowProps, StepData } from '../types'\nimport { COMPLETED_FLOW } from '../api/common'\nimport {\n  BannerContainer,\n  CallToActionContainer,\n  DismissButton,\n  DismissButtonContainer,\n  IconContainer,\n  TextContainer,\n} from './styled'\nimport { Info } from '../components/Icons/Info'\nimport { Button } from '../components/Button'\nimport { Close } from '../components/Icons/Close'\nimport { getClassName } from '../shared/appearance'\nimport { RenderInlineStyles } from '../components/RenderInlineStyles'\nimport { useCTAClickSideEffects } from '../hooks/useCTAClickSideEffects'\nimport { TitleSubtitle } from '../components/TitleSubtitle/TitleSubtitle'\nimport { useTheme } from '../hooks/useTheme'\n\n/**\n * Frigade Banners\n * full-width: Full width banner, useful in top of the page\n * square: Square sized banner, useful in sidebars\n *\n */\nexport type FrigadeBannerType = 'full-width' | 'square'\n\nexport interface FrigadeBannerProps extends DefaultFrigadeFlowProps {\n  type?: FrigadeBannerType\n  title?: string\n  subtitle?: string\n  onDismiss?: () => void\n  icon?: React.ReactNode\n}\n\nexport const FrigadeBanner: React.FC<FrigadeBannerProps> = ({\n  flowId,\n  title,\n  subtitle,\n  onDismiss,\n  customVariables,\n  onButtonClick,\n  appearance,\n  type = 'full-width',\n  icon,\n}) => {\n  const {\n    getFlow,\n    markFlowCompleted,\n    isLoading,\n    targetingLogicShouldHideFlow,\n    updateCustomVariables,\n    getFlowMetadata,\n    getFlowStatus,\n    getFlowSteps,\n    getCurrentStepIndex,\n  } = useFlows()\n  const { primaryCTAClickSideEffects } = useCTAClickSideEffects()\n  const { mergeAppearanceWithDefault } = useTheme()\n\n  appearance = mergeAppearanceWithDefault(appearance)\n\n  useEffect(() => {\n    updateCustomVariables(customVariables)\n  }, [customVariables, isLoading])\n\n  if (isLoading) {\n    return null\n  }\n\n  const flow = getFlow(flowId)\n  if (!flow) {\n    return null\n  }\n\n  if (targetingLogicShouldHideFlow(flow)) {\n    return null\n  }\n\n  if (getFlowStatus(flowId) === COMPLETED_FLOW) {\n    return null\n  }\n\n  const steps = getFlowSteps(flowId)\n\n  const metaData = (\n    steps.length > 0 ? steps[getCurrentStepIndex(flowId)] : getFlowMetadata(flowId)\n  ) as StepData\n\n  if (metaData?.title) {\n    title = metaData.title\n  }\n  if (metaData?.subtitle) {\n    subtitle = metaData.subtitle\n  }\n\n  return (\n    <>\n      <RenderInlineStyles appearance={appearance} />\n      <BannerContainer\n        type={type}\n        appearance={appearance}\n        className={getClassName('bannerContainer', appearance)}\n      >\n        {type != 'square' && (\n          <IconContainer className={getClassName('bannerIconContainer', appearance)}>\n            {icon ? icon : <Info />}\n          </IconContainer>\n        )}\n        {type === 'square' && metaData.dismissible && (\n          <DismissButtonContainer\n            type={type}\n            className={getClassName('bannerDismissButtonContainer', appearance)}\n          >\n            <DismissButton\n              type={type}\n              onClick={async () => {\n                await markFlowCompleted(flowId)\n                if (onDismiss) {\n                  onDismiss()\n                }\n              }}\n              className={getClassName('bannerDismissButton', appearance)}\n            >\n              <Close />\n            </DismissButton>\n          </DismissButtonContainer>\n        )}\n        <TextContainer type={type}>\n          <TitleSubtitle\n            appearance={appearance}\n            title={title}\n            subtitle={subtitle}\n            classPrefix=\"banner\"\n          />\n        </TextContainer>\n        <CallToActionContainer\n          type={type}\n          className={getClassName('bannerCallToActionContainer', appearance)}\n        >\n          <Button\n            title={metaData?.primaryButtonTitle ?? 'Get started'}\n            appearance={appearance}\n            onClick={() => {\n              primaryCTAClickSideEffects(metaData)\n              if (onButtonClick) {\n                onButtonClick(metaData, 0, 'primary')\n              }\n            }}\n            classPrefix=\"banner\"\n          />\n        </CallToActionContainer>\n        {type !== 'square' && metaData.dismissible && (\n          <DismissButtonContainer\n            type={type}\n            className={getClassName('bannerDismissButtonContainer', appearance)}\n          >\n            <DismissButton\n              type={type}\n              onClick={async () => {\n                await markFlowCompleted(flowId)\n                if (onDismiss) {\n                  onDismiss()\n                }\n              }}\n              className={getClassName('bannerDismissButton', appearance)}\n            >\n              <Close />\n            </DismissButton>\n          </DismissButtonContainer>\n        )}\n      </BannerContainer>\n    </>\n  )\n}\n","import styled from 'styled-components'\nimport { getCustomClassOverrides } from '../shared/appearance'\n\nexport const BannerContainer = styled.div`\n  // use the :not annotation\n  ${(props) => getCustomClassOverrides(props)} {\n    display: flex;\n    flex-direction: ${(props) => (props.type === 'square' ? 'column' : 'row')};\n    width: 100%;\n    padding: 16px;\n    box-sizing: border-box;\n    align-items: ${(props) => (props.type === 'square' ? 'unset' : 'center')};\n    background-color: ${(props) => props.appearance.theme.colorBackground};\n    border-width: 1px;\n    border-color: ${(props) => props.appearance.theme.colorPrimary};\n    border-radius: 12px;\n  }\n`\n\nexport const IconContainer = styled.div`\n  ${(props) => getCustomClassOverrides(props)} {\n    display: flex;\n    width: 36px;\n    height: 36px;\n  }\n`\n\nexport const TextContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  flex: 1;\n  margin-left: ${(props) => (props.type === 'square' ? '0px' : '16px')};\n  margin-top: ${(props) => (props.type === 'square' ? '12px' : '0')};\n`\nexport const CallToActionContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  margin-left: ${(props) => (props.type === 'square' ? '0px' : '16px')};\n`\n\nexport const DismissButton = styled.div`\n  display: flex;\n  justify-content: ${(props) => (props.type === 'square' ? 'flex-end' : 'center')};\n  align-items: flex-end;\n  margin-left: ${(props) => (props.type === 'square' ? '0px' : '16px')};\n  cursor: pointer;\n  :hover {\n    opacity: 0.8;\n  }\n`\n\nexport const DismissButtonContainer = styled.div`\n  display: flex;\n  justify-content: ${(props) => (props.type === 'square' ? 'flex-end' : 'center')};\n  align-items: flex-end;\n  margin-left: ${(props) => (props.type === 'square' ? '0px' : '16px')};\n`\n","import React, { CSSProperties } from 'react'\n\nexport const Info = ({\n  style,\n  className,\n}: {\n  color?: string\n  style?: CSSProperties\n  className?: string\n}) => (\n  <svg\n    style={style}\n    className={className}\n    xmlns=\"http://www.w3.org/2000/svg\"\n    fill=\"none\"\n    viewBox=\"0 0 24 24\"\n    strokeWidth={1.5}\n    stroke=\"currentColor\"\n  >\n    <path\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      d=\"M11.25 11.25l.041-.02a.75.75 0 011.063.852l-.708 2.836a.75.75 0 001.063.853l.041-.021M21 12a9 9 0 11-18 0 9 9 0 0118 0zm-9-3.75h.008v.008H12V8.25z\"\n    />\n  </svg>\n)\n","import { DefaultFrigadeFlowProps } from '../types'\nimport React, { useEffect } from 'react'\nimport { useFlows } from '../api/flows'\nimport { useCTAClickSideEffects } from '../hooks/useCTAClickSideEffects'\nimport { useTheme } from '../hooks/useTheme'\nimport { COMPLETED_FLOW } from '../api/common'\nimport { RenderInlineStyles } from '../components/RenderInlineStyles'\nimport { Portal } from 'react-portal'\nimport {\n  DismissButton,\n  NPSLabel,\n  NPSLabelContainer,\n  NPSNumberButton,\n  NPSNumberButtonContainer,\n  NPSSurveyContainer,\n  TextArea,\n  TextContainer,\n} from './styled'\nimport { getClassName, mergeClasses } from '../shared/appearance'\nimport { Close } from '../components/Icons/Close'\nimport { TitleSubtitle } from '../components/TitleSubtitle/TitleSubtitle'\nimport { useFlowOpens } from '../api/flow-opens'\nimport { Button } from '../components/Button'\n\nexport interface FrigadeNPSSurveyProps extends DefaultFrigadeFlowProps {\n  dismissible?: boolean\n  type?: 'inline' | 'modal'\n}\n\nexport const FrigadeNPSSurvey: React.FC<FrigadeNPSSurveyProps> = ({\n  flowId,\n  onDismiss,\n  customVariables,\n  onButtonClick,\n  appearance,\n  className,\n  style,\n  type = 'modal',\n}) => {\n  const {\n    getFlow,\n    markFlowCompleted,\n    markStepCompleted,\n    getNumberOfStepsCompleted,\n    isLoading,\n    targetingLogicShouldHideFlow,\n    updateCustomVariables,\n    getFlowSteps,\n    getFlowStatus,\n    getCurrentStepIndex,\n  } = useFlows()\n  const { primaryCTAClickSideEffects } = useCTAClickSideEffects()\n  const { mergeAppearanceWithDefault } = useTheme()\n  const [score, setScore] = React.useState<number | null>(null)\n  const [feedbackText, setFeedbackText] = React.useState<string>('')\n  const {\n    hasOpenModals,\n    setKeepCompletedFlowOpenDuringSession,\n    shouldKeepCompletedFlowOpenDuringSession,\n  } = useFlowOpens()\n\n  appearance = mergeAppearanceWithDefault(appearance)\n\n  useEffect(() => {\n    updateCustomVariables(customVariables)\n  }, [customVariables, isLoading])\n\n  if (isLoading) {\n    return null\n  }\n\n  const flow = getFlow(flowId)\n  if (!flow) {\n    return null\n  }\n\n  if (targetingLogicShouldHideFlow(flow)) {\n    return null\n  }\n\n  if (getFlowStatus(flowId) === COMPLETED_FLOW) {\n    return null\n  }\n\n  if (\n    getNumberOfStepsCompleted(flowId) === 1 &&\n    !shouldKeepCompletedFlowOpenDuringSession(flowId)\n  ) {\n    return null\n  }\n\n  if (hasOpenModals()) {\n    return null\n  }\n\n  const steps = getFlowSteps(flowId)\n\n  const currentStep = steps[getCurrentStepIndex(flowId)]\n\n  function getScoreChooser() {\n    return (\n      <>\n        <TextContainer>\n          <TitleSubtitle\n            size=\"large\"\n            appearance={appearance}\n            title={currentStep.title}\n            subtitle={currentStep.subtitle}\n          />\n        </TextContainer>\n        <NPSNumberButtonContainer\n          className={getClassName('npsNumberButtonContainer', appearance)}\n          appearance={appearance}\n        >\n          {Array.from(Array(10).keys()).map((i) => (\n            <NPSNumberButton\n              className={getClassName('npsNumberButton', appearance)}\n              selected={score === i + 1}\n              key={i}\n              onClick={async () => {\n                setKeepCompletedFlowOpenDuringSession(flowId)\n                setScore(i + 1)\n                await markStepCompleted(flowId, currentStep.id, { score: i + 1 })\n              }}\n              appearance={appearance}\n            >\n              {i + 1}\n            </NPSNumberButton>\n          ))}\n        </NPSNumberButtonContainer>\n        <NPSLabelContainer appearance={appearance}>\n          <NPSLabel appearance={appearance}>Not likely at all</NPSLabel>\n          <NPSLabel appearance={appearance}>Extremely likely</NPSLabel>\n        </NPSLabelContainer>\n      </>\n    )\n  }\n\n  function getScoreReason() {\n    return (\n      <>\n        <TextContainer>\n          <TitleSubtitle\n            appearance={appearance}\n            title={`Why did you choose this score?`}\n            size=\"large\"\n          />\n        </TextContainer>\n        <TextArea\n          appearance={appearance}\n          value={feedbackText}\n          onChange={(e) => {\n            setFeedbackText(e.target.value)\n          }}\n          placeHolder=\"Add your optional fedback here...\"\n        ></TextArea>\n        <NPSNumberButtonContainer\n          appearance={appearance}\n          className={getClassName('npsNumberButtonContainer', appearance)}\n        >\n          <Button\n            size={'large'}\n            withMargin={false}\n            onClick={async () => {\n              await markFlowCompleted(flowId)\n              if (onButtonClick) {\n                onButtonClick(currentStep, 1, 'primary')\n              }\n            }}\n            appearance={appearance}\n            title={currentStep.secondaryButtonTitle || 'Skip'}\n            secondary\n          />\n          <Button\n            size={'large'}\n            withMargin={false}\n            onClick={async () => {\n              await markStepCompleted(flowId, currentStep.id, { feedbackText })\n              await markFlowCompleted(flowId)\n              if (onButtonClick) {\n                onButtonClick(currentStep, 1, 'primary')\n              }\n            }}\n            appearance={appearance}\n            title={currentStep.primaryButtonTitle || 'Submit'}\n          />\n        </NPSNumberButtonContainer>\n      </>\n    )\n  }\n\n  function getContent() {\n    return (\n      <>\n        <RenderInlineStyles appearance={appearance} />\n        <NPSSurveyContainer\n          appearance={appearance}\n          className={mergeClasses(getClassName('npsSurveyContainer', appearance), className)}\n          style={style}\n          type={type}\n        >\n          <DismissButton\n            onClick={async () => {\n              await markFlowCompleted(flowId)\n              if (onDismiss) {\n                onDismiss()\n              }\n            }}\n            className={getClassName('npsSurveyDismissButton', appearance)}\n          >\n            <Close />\n          </DismissButton>\n          {getNumberOfStepsCompleted(flowId) == 0 && getScoreChooser()}\n          {getNumberOfStepsCompleted(flowId) == 1 && getScoreReason()}\n        </NPSSurveyContainer>\n      </>\n    )\n  }\n\n  if (type === 'inline') {\n    return getContent()\n  }\n\n  return <Portal>{getContent()}</Portal>\n}\n","import styled from 'styled-components'\nimport { getCustomClassOverrides } from '../shared/appearance'\n\nexport const NPSSurveyContainer = styled.div`\n  ${(props) => getCustomClassOverrides(props)} {\n    display: flex;\n    flex-direction: column;\n    width: 100%;\n    max-width: 400px;\n    padding: 28px 18px;\n    box-sizing: border-box;\n    align-items: unset;\n    background-color: ${(props) => props.appearance.theme.colorBackground};\n    border-width: 1px;\n    border-color: ${(props) => props.appearance.theme.colorBorder};\n    border-radius: ${(props) => props.appearance.theme.borderRadius}px;\n    position: ${(props) => (props.type == 'modal' ? 'fixed' : 'relative')};\n    left: 50%;\n    transform: translate(-50%);\n    bottom: 24px;\n    z-index: 1000;\n    box-shadow: 0px 4px 12px rgba(0, 0, 0, 0.1);\n    min-width: 550px;\n  }\n`\n\nexport const NPSNumberButton = styled.button`\n  border: 1px solid ${(props) => props.appearance.theme.colorBorder};\n  border-radius: 8px;\n  // If selected make border color primary and text color color priamry\n  border-color: ${(props) =>\n    props.selected ? props.appearance.theme.colorPrimary : props.appearance.theme.colorBorder};\n  color: ${(props) =>\n    props.selected ? props.appearance.theme.colorPrimary : props.appearance.theme.colorText};\n  :hover {\n    border-color: ${(props) => props.appearance.theme.colorPrimary};\n  }\n  :focus {\n    border-color: ${(props) => props.appearance.theme.colorPrimary};\n    color: ${(props) => props.appearance.theme.colorPrimary};\n  }\n  font-size: 16px;\n  font-weight: 600;\n  line-height: 24px;\n  width: 44px;\n  height: 44px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`\n\nexport const NPSNumberButtonContainer = styled.div`\n  display: flex;\n  justify-content: flex-end;\n  margin-top: 16px;\n  gap: 8px;\n`\n\nexport const NPSLabelContainer = styled.div`\n  display: flex;\n  justify-content: space-between;\n  margin-top: 8px;\n`\n\nexport const NPSLabel = styled.div`\n  font-size: 12px;\n  line-height: 16px;\n  color: ${(props) => props.appearance.theme.colorTextDisabled};\n`\n\nexport const TextContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  flex: 1;\n`\nexport const CallToActionContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: flex-start;\n  margin-top: 16px;\n`\n\nexport const TextArea = styled.textarea`\n  ${(props) => getCustomClassOverrides(props)} {\n    margin-top: 16px;\n    border: 1px solid ${(props) => props.appearance.theme.colorBorder};\n    border-radius: ${(props) => props.appearance.theme.borderRadius}px;\n    padding: 12px 16px;\n    font-size: 16px;\n    line-height: 24px;\n    width: 100%;\n    height: 100px;\n  }\n`\n\nexport const DismissButton = styled.div`\n  ${(props) => getCustomClassOverrides(props)} {\n    position: absolute;\n    top: 16px;\n    right: 16px;\n    cursor: pointer;\n\n    :hover {\n      opacity: 0.8;\n    }\n  }\n`\n","import * as React from 'react'\nimport { StyledButton } from './Button.styles'\nimport { BoxProps } from '../Box'\nimport { Text } from '../Text'\n\nimport { buttonVariants } from './Button.styles'\n\n// TEMP: Non-standard filename to avoid conflict with existing/deprecated button component\n\nexport interface ButtonProps extends BoxProps {\n  title: string\n}\n\nconst BaseButton: React.FC<ButtonProps> = ({\n  as = 'button',\n  className,\n  size = 'md',\n  title,\n  variant = 'Primary',\n  ...rest\n}) => {\n  return (\n    <StyledButton\n      className={`fr-button-${variant.toLowerCase()}${className ? ` ${className}` : ''}`}\n      forwardedAs={as}\n      variant={variant}\n      size={size}\n      borderRadius=\"md\"\n      {...rest}\n    >\n      <Text color={buttonVariants[variant]?.color} fontWeight=\"semibold\">\n        {title}\n      </Text>\n    </StyledButton>\n  )\n}\n\nconst buttonVariantComponents = Object.fromEntries(\n  Object.keys(buttonVariants).map((variant) => {\n    const component = (props: ButtonProps) => <BaseButton {...props} variant={variant} />\n\n    component.displayName = `Button.${variant}`\n\n    return [variant, component]\n  })\n)\n\nexport const Button = Object.assign(BaseButton, buttonVariantComponents)\n","import React from 'react'\nimport { FontProps } from 'styled-system'\nimport { BoxProps } from '../Box'\nimport { StyledText, textVariants } from './Text.styles'\n\ntype TextVariant = keyof typeof textVariants\nexport interface BaseTextProps extends BoxProps, Partial<Pick<FontProps, 'fontWeight'>> {\n  variant?: TextVariant\n}\n\nconst BaseText: React.FC<BaseTextProps> = ({\n  as = 'span',\n  children,\n  variant = 'Body1',\n  ...rest\n}) => {\n  return (\n    <StyledText\n      color=\"neutral.foreground\"\n      fontFamily=\"default\"\n      forwardedAs={as}\n      variant={variant}\n      {...rest}\n    >\n      {children}\n    </StyledText>\n  )\n}\n\nconst textVariantComponents = Object.fromEntries(\n  Object.keys(textVariants).map((variant) => {\n    const asProp = ['H1', 'H2', 'H3', 'H4'].includes(variant) ? variant.toLowerCase() : undefined\n    const component = (props: BaseTextProps) => (\n      <BaseText as={asProp} {...props} variant={variant as TextVariant}>\n        {props.children}\n      </BaseText>\n    )\n\n    component.displayName = `Text.${variant}`\n\n    return [variant, component]\n  })\n)\n\nexport const Text = Object.assign(BaseText, textVariantComponents)\n","export { FrigadeProvider } from './FrigadeProvider'\nexport { FrigadeHeroChecklist } from './components/HeroChecklist'\nexport { FrigadeChecklist } from './FrigadeChecklist'\nexport { FrigadeProgressBadge } from './FrigadeProgressBadge'\nexport { FrigadeForm } from './FrigadeForm'\nexport { FrigadeGuide } from './FrigadeGuide'\nexport { FrigadeTour } from './FrigadeTour'\nexport { FrigadeSupportWidget } from './FrigadeSupportWidget'\nexport { FrigadeEmbeddedTip } from './FrigadeEmbeddedTip'\nexport { FrigadeBanner } from './FrigadeBanner'\nexport { FrigadeNPSSurvey } from './FrigadeNPSSurvey'\n\nexport type { BaseTheme as FrigadeTheme } from './types'\nexport { DefaultAppearance as FrigadeDefaultAppearance } from './types'\n\nexport { useFlows } from './api/flows'\nexport { useFlowOpens } from './api/flow-opens'\nexport { useFlowResponses } from './api/flow-responses'\nexport { useUser } from './api/users'\nexport { useOrganization } from './api/organizations'\n\nexport type { StepData, Appearance } from './types'\n\nexport type {\n  CustomFormTypeProps,\n  FormInputType,\n  FormInputProps,\n  FormValidationError,\n  StepContentProps,\n  EntityProperties,\n} from './FrigadeForm/types'\n\nexport { Label as FormLabel } from './components/Forms/MultiInputStepType/form-components/shared/Label'\nexport { TextField as FormTextField } from './components/Forms/MultiInputStepType/form-components/TextField'\n\nexport { Box } from './components/Box'\nexport { Button } from './components/Button/TEMP_index'\nexport { CheckBox } from './components/CheckBox'\nexport { ProgressRing } from './components/Progress/ProgressRing'\nexport { Text } from './components/Text'\n\nexport { tokens } from './shared/theme'\nexport { useTheme } from 'styled-components'\n"],"mappings":"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","names":["React","createContext","useEffect","useState","ThemeProvider","React","useContext","useEffect","useState","useCallback","useContext","useEffect","React","useMemo","VERSION_NUMBER","NOT_STARTED_STEP","COMPLETED_FLOW","ABORTED_FLOW","STARTED_FLOW","NOT_STARTED_FLOW","COMPLETED_STEP","STARTED_STEP","useConfig","publicApiKey","userId","apiUrl","React","FrigadeContext","useMemo","VERSION_NUMBER","LAST_POST_CALL_AT","LAST_POST_CALL_DATA","useGracefulFetch","shouldGracefullyDegrade","readonly","url","options","getEmptyResponse","lastCallAtKey","lastCallDataKey","lastCall","lastCallData","lastCallDate","response","error","useCheckHasInitiatedAPI","verifySDKInitiated","useContext","useState","useContext","useEffect","useState","useSWR","useContext","useFlowOpens","openFlowStates","setOpenFlowStates","hasActiveFullPageFlow","setCompletedFlowsToKeepOpenDuringSession","completedFlowsToKeepOpenDuringSession","useContext","FrigadeContext","getOpenFlowState","flowId","defaultValue","setOpenFlowState","isOpen","prev","resetOpenFlowState","_","rest","setKeepCompletedFlowOpenDuringSession","shouldKeepCompletedFlowOpenDuringSession","hasOpenModals","currentFlowId","useSWRImmutable","UNKNOWN_STEP_ID","useUserFlowStates","config","apiUrl","useConfig","publicApiKey","userId","organizationId","flows","setShouldGracefullyDegrade","readonly","useContext","FrigadeContext","resetOpenFlowState","useFlowOpens","hasFinishedInitialLoad","setHasFinishedInitialLoad","useState","emptyResponse","flow","COMPLETED_FLOW","fetcher","url","response","error","key","data","isLoadingUserFlowStateData","mutateUserFlowState","useSWR","userFlowStatesData","useEffect","optimisticallyMarkFlowCompleted","flowId","flowState","state","optimisticallyMarkStepCompleted","stepId","flowResponse","STARTED_FLOW","optimisticallyMarkStepStarted","optimisticallyMarkFlowNotStarted","NOT_STARTED_FLOW","NOT_STARTED_STEP","optimisticallyMarkStepNotStarted","useFlowResponses","config","apiUrl","useConfig","userFlowStatesData","mutateUserFlowState","useUserFlowStates","failedFlowResponses","setFailedFlowResponses","flowResponses","setFlowResponses","useContext","FrigadeContext","successfulFlowResponsesStrings","setSuccessfulFlowResponsesStrings","useState","successfulFlowResponses","setSuccessfulFlowResponses","gracefullyFetch","useGracefulFetch","postFlowResponse","flowResponse","flowResponseString","existingFlowResponse","r","prev","addResponse","STARTED_FLOW","NOT_STARTED_FLOW","COMPLETED_FLOW","STARTED_STEP","COMPLETED_STEP","ABORTED_FLOW","NOT_STARTED_STEP","getFlowResponses","apiFlowResponses","flowState","stepSlug","stepState","useSWR","regex","getSubFlowFromCompletionCriteria","completionCriteria","flowMatch","flow","match","_","trimmed","replaceAll","target","search","replacement","useFlows","config","apiUrl","useConfig","flows","setFlows","userId","publicApiKey","customVariables","setCustomVariables","hasActiveFullPageFlow","setHasActiveFullPageFlow","setFlowResponses","setShouldGracefullyDegrade","readonly","useContext","FrigadeContext","emptyResponse","verifySDKInitiated","useCheckHasInitiatedAPI","addResponse","getFlowResponses","useFlowResponses","fetcher","url","response","error","userFlowStatesData","isLoadingUserFlowStateData","optimisticallyMarkFlowCompleted","optimisticallyMarkFlowNotStarted","optimisticallyMarkStepCompleted","optimisticallyMarkStepNotStarted","optimisticallyMarkStepStarted","useUserFlowStates","flowData","isLoadingFlows","useSWR","useEffect","getFlow","slug","flow","f","getFlowSteps","flowId","_a","substituteVariables","step","autoCalculatedProgress","getStepOptionalProgress","markStepCompleted","getStepStatus","COMPLETED_STEP","isStepBlocked","isStepHidden","_","variableName","i","getFlowMetadata","setCustomVariable","key","value","prev","updateCustomVariables","newCustomVariables","markStepStarted","useCallback","stepId","data","flowResponse","STARTED_STEP","shouldSendServerSideCall","markStepNotStarted","NOT_STARTED_STEP","markFlowNotStarted","getFlowStatus","NOT_STARTED_FLOW","markFlowStarted","STARTED_FLOW","markFlowCompleted","COMPLETED_FLOW","markFlowAborted","ABORTED_FLOW","flowState","state","maybeFlowResponse","getStepStateForFlow","getCurrentStep","lastStep","s","getCurrentStepIndex","currentStep","index","stepSubFlowSlug","getSubFlowFromCompletionCriteria","completed","getNumberOfStepsCompleted","total","getNumberOfSteps","userFlowState","steps","getFlowData","maybeFlow","targetingLogicShouldHideFlow","matchingUserFlowState","ufs","isFlowAvailableToUser","useCallback","useContext","useEffect","GUEST_PREFIX","useUser","userId","organizationId","setUserId","setUserProperties","shouldGracefullyDegrade","useContext","FrigadeContext","config","apiUrl","useConfig","mutateUserFlowState","useUserFlowStates","gracefullyFetch","useGracefulFetch","verifySDKInitiated","useCheckHasInitiatedAPI","useEffect","userRegisteredKey","addPropertiesToUser","useCallback","properties","data","userProperties","trackEventForUser","event","uuidv4","React","useEffect","useState","React","useEffect","styled","React","styled","CSS_CLASS_PREFIX","CUSTOM_CSS_STYLES_PREFIX","getClassName","className","appearance","defaultClass","CSS_CLASS_PREFIX","CUSTOM_CSS_STYLES_PREFIX","getCustomClassOverrides","props","customClassesArray","toKebabKey","key","styleOverridesToCSS","mergeClasses","classes","ucFirst","str","Background","styled","props","getCustomClassOverrides","ModalBackground","onClose","appearance","React","getClassName","React","styled","CloseContainer","Close","Portal","React","React","FrigadeLogo","style","className","FrigadeLogo_default","styled","styled","TooltipContainer","styled","props","getCustomClassOverrides","TooltipDismissContainer","TooltipImageContainer","TooltipVideoContainer","TooltipFooter","TooltipStepCountContainer","TooltipCTAContainer","TooltipStepCounter","PoweredByFrigadeModalRibbon","styled","props","_a","PoweredByFrigadeTooltipRibbon","TooltipContainer","PoweredByFrigadeContainer","_b","PoweredByFrigade","appearance","React","PoweredByFrigadeContainer","getClassName","FrigadeLogo_default","ModalContainer","styled","props","getCustomClassOverrides","_a","_b","styleOverridesToCSS","ModalHeader","ModalClose","Body","Modal","onClose","visible","headerContent","style","children","appearance","dismissible","showFrigadeBranding","useEffect","handleEscape","e","React","Portal","ModalBackground","getClassName","Close","PoweredByFrigadeModalRibbon","PoweredByFrigade","React","useEffect","styled","Portal","CornerModalContainer","styled","props","getCustomClassOverrides","_a","_b","CornerModalHeader","CornerModalClose","Body","CornerModal","onClose","visible","headerContent","children","appearance","useEffect","handleEscape","e","React","Portal","getClassName","Close","useContext","useTheme","defaultAppearance","useContext","FrigadeContext","mergeAppearanceWithDefault","appearance","_appearance","React","useContext","useEffect","useState","styled","React","useEffect","useState","styled","styled","FormLabel","styled","props","getCustomClassOverrides","FormSubLabel","RequiredSymbol","_a","_b","LabelWrapper","React","DefaultAppearance","Label","title","required","appearance","DefaultAppearance","React","LabelWrapper","RequiredSymbol","getClassName","FormLabel","React","SubLabel","title","appearance","LabelWrapper","FormSubLabel","getClassName","z","getErrorsFromValidationResult","value","validation","validator","validationProp","e","TextInputWrapper","styled","TextInput","props","getCustomClassOverrides","_a","_b","TextArea","TextField","formInput","customFormTypeProps","onSaveInputData","setFormValidationErrors","inputData","input","data","setData","useState","hasLoaded","setHasLoaded","InputComponent","useEffect","handleDataChange","value","validationError","getErrorsFromValidationResult","getType","React","Label","getClassName","e","SubLabel","React","useEffect","useState","styled","NULL_VALUE","MultipleChoiceWrapper","styled","MultipleChoiceSelect","props","getCustomClassOverrides","_a","_b","_c","_d","MultipleChoice","formInput","customFormTypeProps","onSaveInputData","inputData","setFormValidationErrors","_e","_f","input","data","setData","useState","hasLoaded","setHasLoaded","useEffect","option","defaultValue","React","Label","e","getClassName","TextInput","SubLabel","React","useEffect","useState","styled","React","React","motion","Circle","color","percentage","size","r","circum","strokePct","transition","variants","ProgressRing","fillColor","children","bgColor","className","style","ProgressRing_default","styled","CheckIcon","color","React","BASE_CHECKBOX_STYLES_SQUARE","BASE_CHECKBOX_STYLES_ROUND","BASE_CHECKBOX_STYLES_SQUARE__CHECKED","BASE_CHECKBOX_STYLES_SQUARE__UNCHECKED","BASE_CHECKBOX_STYLES_ROUND__CHECKED","BASE_CHECKBOX_STYLES_ROUND__UNCHECKED","getBaseStyle","type","getStateStyle","checked","CheckIconContainer","props","styleOverridesToCSS","CheckBox","value","primaryColor","progress","appearance","DefaultAppearance","style","className","checkBoxStyle","stateStyle","ProgressRing_default","mergeClasses","getClassName","MultipleChoiceListWrapper","styled","MultipleChoiceListItem","props","getCustomClassOverrides","_a","_b","MultipleChoiceList","formInput","customFormTypeProps","onSaveInputData","inputData","setFormValidationErrors","input","selectedIds","setSelectedIds","useState","hasLoaded","setHasLoaded","useEffect","React","Label","option","getClassName","id","CheckBox","SubLabel","React","styled","DOMPurify","sanitize","dirty","HeaderTitle","styled","props","getCustomClassOverrides","HeaderSubtitle","TitleSubtitle","appearance","title","subtitle","size","classPrefix","React","getClassName","ucFirst","sanitize","React","Warning","props","AnimatePresence","motion","MultiInputContainer","styled","MultiInputValidationError","motion","props","_a","_b","MultiInputValidationErrorIcon","MultiInput","DEFAULT_INPUT_TYPES","TextField","MultipleChoice","MultipleChoiceList","MultiInputStepType","flowId","stepData","canContinue","setCanContinue","onSaveData","appearance","customFormElements","formElements","formValidationErrors","setFormValidationErrors","useState","touchedInputs","setTouchedInputs","userId","useUser","allFormData","setAllFormData","loadFromLocalStorage","readonly","useContext","FrigadeContext","mergedInputTypes","useEffect","saveDataFromInputs","input","data","newData","getLocalStorageKey","React","getClassName","TitleSubtitle","err","error","prev","errors","AnimatePresence","Warning","styled","FormCTAContainer","props","FormCTAError","CTAWrapper","FormContainer","FormContainerMain","FormContainerWrapper","FormContainerSidebarImage","React","React","styled","ButtonContainer","styled","props","getCustomClassOverrides","_a","_b","_c","_d","styleOverridesToCSS","MultipleButtonContainer","Button","onClick","title","style","disabled","type","size","secondary","appearance","withMargin","classPrefix","getClassNameWithPrefix","name","ucFirst","React","getClassName","FormFooter","step","canContinue","appearance","onPrimaryClick","onSecondaryClick","formType","selectedStep","steps","onBack","allowBackNavigation","errorMessage","buttonType","showBackButton","React","FormCTAError","getClassName","FormCTAContainer","Button","CTAWrapper","React","styled","Wrapper","styled","FormPagination","stepCount","currentStep","className","appearance","theme","useTheme","React","_","idx","React","styled","useContext","useCTAClickSideEffects","context","FrigadeContext","primaryCTAClickSideEffects","step","handleUrl","secondaryCTAClickSideEffects","url","target","updatedTarget","LinkContainer","styled","Link","LinkIcon","LinkTitle","HeaderTitle","HeaderSubtitle","LinkCollectionStepType","stepData","appearance","_a","_b","handleUrl","useCTAClickSideEffects","React","link","React","useEffect","styled","React","Play","style","className","React","useRef","useState","styled","Video","styled","PlayIconWrapper","props","VideoSource","YouTubeVideoSource","VideoCard","appearance","videoUri","ref","useRef","isPlaying","setIsPlaying","useState","videoId","ampersandPosition","React","getClassName","Play","CallToActionStepContainer","styled","props","getCustomClassOverrides","CallToActionImage","CallToActionTextContainer","CallToActionVideo","CallToActionStepType","stepData","appearance","setCanContinue","useEffect","React","getClassName","TitleSubtitle","VideoCard","React","useEffect","useState","styled","SelectListSelectionContainer","SelectListHeader","SelectListTitle","props","_a","_b","SelectListSubtitle","SelectItem","SelectItemLeft","ItemIcon","SelectItemText","SelectListStepType","stepData","setCanContinue","onSaveData","appearance","multipleChoiceProps","selectedIds","setSelectedIds","useState","hasLoaded","setHasLoaded","lastStepId","setLastStepId","useEffect","React","SelectListSelectionContainer","getClassName","SelectListHeader","SelectListTitle","SelectListSubtitle","option","idx","isSelected","SelectItem","id","SelectItemLeft","ItemIcon","SelectItemText","CheckBox","React","useEffect","useState","AnimatePresence","motion","AnimationWrapper","children","id","shouldWrap","React","FormContent","appearance","steps","selectedStep","customStepTypes","customVariables","onButtonClick","onStepCompletion","flowId","type","hideOnFlowCompletion","onComplete","setVisible","setShowModal","onDismiss","showPagination","customFormElements","allowBackNavigation","validationHandler","_a","mergedCustomStepTypes","LinkCollectionStepType","MultiInputStepType","CallToActionStepType","SelectListStepType","primaryCTAClickSideEffects","secondaryCTAClickSideEffects","useCTAClickSideEffects","canContinue","setCanContinue","useState","formData","setFormData","isSaving","setIsSaving","hasSetInitialHash","setHasSetInitialHash","errorMessage","setErrorMessage","currentStep","markStepCompleted","markStepStarted","isLoading","updateCustomVariables","markFlowCompleted","useFlows","useEffect","stepIdToGoTo","newStepIndex","step","getDataPayload","handleStepCompletionHandlers","cta","idx","maybeNextStep","updateData","data","prevState","newObj","FormContainerSidebar","props","FormContainerSidebarImage","getClassName","formFooter","FormFooter","validationError","payload","shouldClose","FormContainer","FormContainerMain","FormContainerWrapper","StepComponent","FormPagination","React","createGlobalStyle","RenderInlineStyles","appearance","React","inlineStyles","_","value","GlobalStyleComponent","createGlobalStyle","props","key","CUSTOM_CSS_STYLES_PREFIX","toKebabKey","FrigadeForm","flowId","customStepTypes","type","visible","setVisible","customVariables","customFormElements","onComplete","appearance","hideOnFlowCompletion","onStepCompletion","onButtonClick","dismissible","endFlowOnDismiss","modalPosition","repeatable","onDismiss","showPagination","allowBackNavigation","validationHandler","showFrigadeBranding","getFlow","getFlowSteps","isLoading","targetingLogicShouldHideFlow","getFlowStatus","getCurrentStepIndex","markFlowCompleted","markFlowNotStarted","useFlows","selectedStep","mergeAppearanceWithDefault","useTheme","hasFinishedInitialLoad","setHasFinishedInitialLoad","useState","setOpenFlowState","getOpenFlowState","hasOpenModals","useFlowOpens","showModal","setShowModal","value","useEffect","COMPLETED_FLOW","flow","steps","handleClose","overrideStyle","React","Modal","RenderInlineStyles","FormContent","CornerModal","FrigadeForm_default","useCallback","useContext","useEffect","useOrganization","organizationId","userId","setOrganizationId","useContext","FrigadeContext","mutateUserFlowState","useUserFlowStates","config","apiUrl","useConfig","gracefullyFetch","useGracefulFetch","verifySDKInitiated","useCheckHasInitiatedAPI","useEffect","GUEST_PREFIX","userRegisteredKey","addPropertiesToOrganization","useCallback","properties","data","trackEventForOrganization","event","guestUserIdField","realUserIdField","DataFetcher","setFlowResponses","useFlowResponses","userFlowStatesData","isLoadingUserFlowStateData","mutateUserFlowState","useUserFlowStates","userId","setUserId","useUser","lastUserId","setLastUserId","useState","getFlowStatus","useFlows","flows","userProperties","setIsNewGuestUser","flowResponses","useContext","FrigadeContext","automaticFlowIdsToTrigger","setAutomaticFlowIdsToTrigger","triggeredFlows","setTriggeredFlows","organizationId","useOrganization","useEffect","i","flowState","flow","triggerFlow","flowId","generateGuestUserId","realUserId","guestUserId","newGuestUserId","GUEST_PREFIX","uuidv4","e","loadedImageUrls","imageUrls","imageUrl","url","img","AutomaticFlowIdsToTrigger","React","NOT_STARTED_FLOW","FrigadeForm_default","ErrorBoundary","structuredClone","isObject","obj","deepmerge","args","target","source","result","key","value","THEME_MAP","themeToTokens","theme","overrides","key","value","levels","currentLevel","nextLevel","i","styleOverridesToCSS","styleOverrides","copiedOverrides","deepmerge","css","oldSelector","newSelector","appearanceToOverrides","appearance","styled","compose","variant","React","styled","ThemeProvider","useTheme","border","color","compose","get","shadow","space","system","typography","layoutWithoutSize","n","scale","get","StyledBox","styled","css","compose","border","color","shadow","space","typography","system","Box","as","children","overrides","rest","theme","useTheme","styleResetProps","renderBox","React","newTheme","deepmerge","ThemeProvider","buttonVariants","buttonSizes","StyledButton","styled","Box","compose","variant","styled","variant","system","textVariants","StyledText","styled","Box","variant","system","SPACE_VALUE","SPACE_UNIT","SPACE_SCALE_EXTENT","spaceScale","_","i","palette","tokens","buttonVariants","textVariants","DEFAULT_API_URL","FrigadeContext","createContext","DefaultAppearance","clearLocalStorage","key","FrigadeProvider","publicApiKey","userId","organizationId","config","children","_a","_b","userIdValue","setUserIdValue","useState","organizationIdValue","setOrganizationIdValue","flows","setFlows","failedFlowResponses","setFailedFlowResponses","flowResponses","setFlowResponses","userProperties","setUserProperties","openFlowStates","setOpenFlowStates","completedFlowsToKeepOpenDuringSession","setCompletedFlowsToKeepOpenDuringSession","customVariables","setCustomVariables","isNewGuestUser","setIsNewGuestUser","hasActiveFullPageFlow","setHasActiveFullPageFlow","shouldGracefullyDegrade","setShouldGracefullyDegrade","isValidApiKey","internalNavigate","url","target","appearance","apiKey","useEffect","realUserIdField","contextParams","React","overrides","appearanceToOverrides","ErrorBoundary","ThemeProvider","deepmerge","tokens","DataFetcher","React","React","useEffect","useState","React","useState","styled","React","React","styled","Label","styled","CheckBoxRowContainer","props","CheckBoxRow","label","value","labelStyle","labelPosition","style","primaryColor","checkBoxType","appearance","React","getClassName","CheckBox","RenderInlineStyles","motion","styled","HeroChecklistStepContent","HeroChecklistStepTitle","props","_a","_b","HeroChecklistStepSubtitle","StepItemSelectedIndicator","ChecklistStepItem","StepChecklistItem","data","index","isSelected","primaryColor","style","onClick","appearance","_a","_b","React","StepItemSelectedIndicator","getClassName","motion","ChecklistStepItem","CheckBoxRow","React","motion","styled","PROGRESS_BAR_COLOR_STYLES","ProgressContainer","styled","props","styleOverridesToCSS","ProgressProgressBar","StepText","_a","_b","progressBgStyle","progressFgStyle","ProgressBar","count","total","fillColor","bgColor","display","textLocation","style","textStyle","appearance","React","fgWidth","barHeight","percentComplete","padding","stepText","getClassName","motion","React","styled","React","React","TitleSubtitle","stepData","appearance","React","HeroChecklistStepTitle","getClassName","sanitize","HeroChecklistStepSubtitle","React","CTA","stepData","appearance","handlePrimaryButtonClick","handleSecondaryButtonClick","React","MultipleButtonContainer","getClassName","Button","TitleSubtitleWithCTA","stepData","appearance","React","TitleSubtitle","CTA","React","VideoPlayer","props","React","VideoCard","HERO_STEP_CONTENT_TYPE","StepImage","styled","HeroStepContent","stepData","appearance","Content","React","HeroChecklistStepContent","getClassName","VideoPlayer","TitleSubtitleWithCTA","React","useRef","useState","styled","VideoCarouselContainer","styled","VideoList","Video","VideoSource","VideoTitle","PlayIconWrapper","props","VIDEO_CAROUSEL_TYPE","VideoCarousel","stepData","appearance","_a","React","TitleSubtitleWithCTA","VideoCard","video","ref","useRef","isPlaying","setIsPlaying","useState","Play","videoProps","TitleSubtitle","idx","CTA","React","styled","CodeSnippetContainer","styled","CodeSnippet","CodeSnippetTitle","CodeSnippets","CODE_SNIPPET_CONTENT_TYPE","CodeSnippetContent","stepData","appearance","_a","React","TitleSubtitleWithCTA","codeProps","TitleSubtitle","codeSnippet","index","CTA","HeroChecklistContainer","styled","props","_a","HeroChecklistTitle","_b","HeroChecklistSubtitle","ChecklistHeader","ChecklistStepsContainer","Divider","HeroChecklistStepContentContainer","HeroChecklist","title","subtitle","steps","style","selectedStep","setSelectedStep","className","customStepTypes","appearance","type","mergeAppearanceWithDefault","useTheme","mergedCustomStepTypes","HERO_STEP_CONTENT_TYPE","HeroStepContent","VIDEO_CAROUSEL_TYPE","VideoCarousel","CODE_SNIPPET_CONTENT_TYPE","CodeSnippetContent","selectedStepInternal","setSelectedStepInternal","useState","selectedStepValue","setSelectedStepValue","completeCount","s","StepContent","React","getClassName","ProgressBar","idx","StepChecklistItem","HeroChecklist_default","React","useState","React","styled","ChevronSVG","Chevron","color","style","className","motion","styled","ContainerStyle","ScrollContainer","styled","HeaderContent","ChecklistTitle","props","_a","_b","ChecklistSubtitle","StepsContainer","getCustomClassOverrides","StepsHeader","StepsTitle","StepsBody","StepListContainer","StepContainer","StepTitle","StepSubtitle","MultipleButtonContainer","StepListItem","StepListStepName","StepListItemRight","ProgressBarContainer","ChecklistContainer","styled","CenterVertical","React","motion","styled","GuideContainer","styled","GuideItems","GuideTitle","props","getCustomClassOverrides","GuideItem","GuideIconWrapper","GuideIcon","GuideItemTitle","GuideItemSubtitle","GuideItemLink","Guide","steps","style","title","primaryColor","appearance","onButtonClick","primaryCTAClickSideEffects","useCTAClickSideEffects","React","GuideContainer","getClassName","GuideTitle","GuideItems","stepData","idx","GuideItem","motion","GuideIconWrapper","GuideIcon","GuideItemTitle","sanitize","GuideItemSubtitle","GuideItemLink","Guide_default","ChecklistWithGuide","steps","title","subtitle","stepsTitle","visible","onClose","selectedStep","setSelectedStep","customStepTypes","appearance","guideData","guideTitle","onGuideButtonClick","DefaultStepContent","stepData","handleSecondaryCTAClick","handleCTAClick","React","StepContainer","getClassName","StepTitle","sanitize","StepSubtitle","MultipleButtonContainer","Button","mergedCustomStepTypes","_a","selectedStepValue","Content","currentStep","selectedStepInternal","setSelectedStepInternal","useState","setSelectedStepValue","StepContent","completeCount","s","ContainerStyle","Modal","ChecklistContainer","HeaderContent","ChecklistTitle","ChecklistSubtitle","ScrollContainer","StepsContainer","StepsHeader","StepsTitle","ProgressBarContainer","ProgressBar","StepsBody","StepListContainer","idx","isSelected","StepListItem","StepItemSelectedIndicator","motion","StepListStepName","StepListItemRight","CheckBox","CenterVertical","Chevron","Guide_default","step","ChecklistWithGuide_default","useEffect","useState","useMediaQuery","queries","defaultMatches","key","matches","setMatches","updateTimeout","throttledUpdate","updateMatches","freshMatches","query","mediaQuery","React","useEffect","useState","React","AnimatePresence","motion","styled","StepContainer","props","_a","_b","StepMediaContainer","StepImage","StepHeader","StepTitle","CollapseChevronContainer","ExpandedContentContainer","StepSubtitle","HeaderLeft","CollapsibleStep","stepData","collapsed","onClick","onPrimaryButtonClick","onSecondaryButtonClick","appearance","customStepTypes","_a","_b","iconStyle","getDefaultStepContent","React","StepMediaContainer","getClassName","StepImage","VideoCard","StepSubtitle","sanitize","MultipleButtonContainer","Button","getCustomStep","customStep","StepContainer","StepHeader","HeaderLeft","CheckBoxRow","StepTitle","CollapseChevronContainer","Chevron","AnimatePresence","motion","styled","ModalChecklistContainer","HeaderContent","ModalChecklistTitle","props","_a","_b","ModalChecklistSubtitle","ChecklistContainer","CondensedInlineChecklistContainer","CondensedChecklist","title","subtitle","steps","onClose","visible","autoExpandFirstIncompleteStep","autoCollapse","autoExpandNextStep","primaryColor","selectedStep","setSelectedStep","appearance","type","className","customStepTypes","style","completeCount","s","collapsedSteps","setCollapsedSteps","useState","useEffect","initCollapsedState","i","handleStepClick","idx","newCollapsedState","React","headerContent","HeaderContent","ModalChecklistTitle","getClassName","sanitize","ModalChecklistSubtitle","ProgressBar","checklistContent","ChecklistContainer","mergeClasses","step","isCollapsed","CollapsibleStep","CondensedInlineChecklistContainer","Modal","CondensedChecklist_default","React","useEffect","useRef","useState","React","styled","css","keyframes","defaultBorder","css","theme","defaultShadow","fadeIn","keyframes","fadeOut","CarouselScroll","styled","CarouselScrollGroup","StyledCarouselFade","props","StyledScrollButton","Card","StyledCarouselCard","StyledCarouselCardImage","CarouselContainer","getCustomClassOverrides","CarouselProgressBar","ProgressBarLabel","CompletedPill","H3","CarouselTitle","ProgressWrapper","H4","CardTitle","Body","Small","CarouselCard","stepData","style","appearance","mergeAppearanceWithDefault","useTheme","primaryCTAClickSideEffects","useCTAClickSideEffects","imageUri","subtitle","title","complete","blocked","hasCTA","handleClick","React","StyledCarouselCard","getClassName","StyledCarouselCardImage","CompletedPill","Small","CardTitle","Body","RightArrow","React","CarouselFade","side","show","onClick","mounted","setMounted","useState","reversed","setReversed","useEffect","handleFadeOutEnd","style","StyledCarouselFade","StyledScrollButton","CarouselChecklist","flowId","appearance","customVariables","className","scrollContainerRef","useRef","showLeftFade","setShowLeftFade","showRightFade","setShowRightFade","flowMetadata","setFlowMetadata","flowSteps","setFlowSteps","numberOfStepsCompleted","setNumberOfStepsCompleted","isSmall","useMediaQuery","pageSize","getFlowMetadata","getFlowSteps","getNumberOfStepsCompleted","updateCustomVariables","isLoading","useFlows","metadata","completedStepCount","steps","a","b","scrollGroups","i","handleScroll","e","target","maxScroll","currentScroll","handleScrollByPage","forward","direction","scrollTimeout","throttledScroll","CarouselContainer","mergeClasses","getClassName","CarouselTitle","Body","ProgressWrapper","ProgressBar","CarouselScroll","group","CarouselScrollGroup","stepData","j","CarouselCard","RenderInlineStyles","FrigadeChecklist","flowId","title","subtitle","style","initialSelectedStep","className","type","onDismiss","visible","customVariables","onStepCompletion","onButtonClick","appearance","hideOnFlowCompletion","setVisible","customStepTypes","checklistStyle","autoExpandFirstIncompleteStep","autoExpandNextStep","guideProps","getFlow","getFlowSteps","markStepCompleted","getStepStatus","getNumberOfStepsCompleted","isLoading","targetingLogicShouldHideFlow","updateCustomVariables","getFlowMetadata","isStepBlocked","getFlowStatus","hasActiveFullPageFlow","setHasActiveFullPageFlow","useFlows","primaryCTAClickSideEffects","secondaryCTAClickSideEffects","useCTAClickSideEffects","getOpenFlowState","setOpenFlowState","useFlowOpens","selectedStep","setSelectedStep","useState","finishedInitialLoad","setFinishedInitialLoad","showModal","isModal","mergeAppearanceWithDefault","useTheme","isLarge","useMediaQuery","useEffect","flow","steps","COMPLETED_FLOW","metaData","firstIncompleteStep","step","goToNextStepIfPossible","handleStepCompletionHandlers","cta","idx","maybeNextStep","handleClose","getSteps","COMPLETED_STEP","CommonDom","React","RenderInlineStyles","commonProps","getCarouselChecklist","CarouselChecklist","getCondensedChecklist","CondensedChecklist_default","getChecklistWithGuide","guideFlowId","guideFlowSteps","ChecklistWithGuide_default","getDefaultChecklist","checklist","HeroChecklist_default","Modal","FrigadeHeroChecklist","props","React","FrigadeChecklist","React","useEffect","React","styled","BadgeContainer","props","BadgeRow","BadgeTitle","ProgressRingContainer","motion","MiniProgressBadge","title","count","total","onClick","style","className","appearance","type","React","RenderInlineStyles","BadgeContainer","motion","mergeClasses","getClassName","ProgressRingContainer","ProgressRing_default","BadgeRow","BadgeTitle","Chevron","ProgressBar","React","styled","FullWidthProgressBadgeContainer","styled","props","IconContainer","getCustomClassOverrides","TextContainer","ProgressBarContainer","DismissButton","FullWidthProgressBadge","title","subtitle","icon","appearance","count","total","className","style","React","FullWidthProgressBadgeContainer","mergeClasses","getClassName","IconContainer","TextContainer","TitleSubtitle","ProgressBarContainer","ProgressBar","FrigadeProgressBadge","flowId","title","subtitle","icon","style","onClick","className","customVariables","hideOnFlowCompletion","appearance","type","getFlow","getFlowSteps","getFlowStatus","getNumberOfStepsCompleted","isLoading","targetingLogicShouldHideFlow","updateCustomVariables","useFlows","mergeAppearanceWithDefault","useTheme","setOpenFlowState","getOpenFlowState","useFlowOpens","useEffect","flow","COMPLETED_FLOW","steps","completedCount","React","RenderInlineStyles","FullWidthProgressBadge","MiniProgressBadge","React","FrigadeGuide","flowId","style","appearance","props","getFlow","targetingLogicShouldHideFlow","getFlowSteps","useFlows","mergeAppearanceWithDefault","useTheme","flow","steps","React","Guide_default","React","useContext","useEffect","React","useEffect","useLayoutEffect","useRef","useState","styled","useCallback","useEffect","useState","getPosition","boundingRect","position","cardWidth","offset","positionStyle","scrollY","scrollX","initialState","getRect","element","rect","useElemRect","elem","refresher","dimensions","setDimensions","handleResize","DEFAULT_CARD_WIDTH","DEFAULT_CARD_HEIGHT","DEFAULT_REFRESH_DELAY","HIGHLIGHT_RADIUS","HighlightOuter","styled","props","HighlightInner","TooltipWrapper","PositionWrapper","HighlightContainer","Tooltips","steps","onDismiss","onComplete","tooltipPosition","showHighlight","primaryColor","offset","visible","containerStyle","selectedStep","customStepTypes","appearance","dismissible","showHighlightOnly","showStepCount","completedStepsCount","showFrigadeBranding","_a","_b","_c","_d","selfBounds","setSelfBounds","useState","needsUpdate","setNeedsUpdate","selfRef","useRef","elem","setElem","boundingRect","useElemRect","lastBoundingRect","setLastBoundingRect","showTooltipContainer","setShowTooltipContainer","positionStyle","zIndex","cardWidth","cardHeight","useLayoutEffect","useEffect","tooltipPositionValue","position","getPosition","rightSideIsCropped","bottomIsCropped","url","handleRefreshPosition","observer","intervalId","React","DefaultFooterContent","handleOnCTAClick","handleOnSecondaryCTAClick","TooltipStepCountContainer","TooltipStepCounter","getClassName","TooltipCTAContainer","Button","DefaultTooltipStepContent","TooltipDismissContainer","Close","TooltipImageContainer","TooltipVideoContainer","VideoCard","TitleSubtitle","TooltipFooter","mergedCustomStepTypes","_","Content","StepContent","cssPos","getBoundedLeftPosition","leftOffset","handleClick","TooltipContainer","PoweredByFrigadeTooltipRibbon","PoweredByFrigade","Tooltips_default","Portal","FrigadeTour","flowId","customVariables","appearance","onStepCompletion","onButtonClick","showTooltipsSimultaneously","onDismiss","dismissible","tooltipPosition","showHighlightOnly","dismissBehavior","onComplete","skipIfNotFound","props","getFlow","getFlowSteps","isLoading","targetingLogicShouldHideFlow","markStepCompleted","markStepStarted","markFlowCompleted","updateCustomVariables","getCurrentStepIndex","getStepStatus","isStepBlocked","getFlowStatus","getNumberOfStepsCompleted","useFlows","isLoadingUserFlowStateData","useUserFlowStates","primaryCTAClickSideEffects","secondaryCTAClickSideEffects","useCTAClickSideEffects","hasOpenModals","useFlowOpens","selectedStep","openFlowStates","useContext","FrigadeContext","mergeAppearanceWithDefault","useTheme","useEffect","flow","COMPLETED_FLOW","steps","otherFlowId","_flowID","React","markTooltipCompleted","stepData","step","status","COMPLETED_STEP","handleStepCompletionHandlers","cta","idx","maybeNextStep","getSteps","onDismissTooltip","handleComplete","isCurrentSelectorMissing","renderMultipleToolTips","firstVisibleIndex","Tooltips_default","Portal","RenderInlineStyles","React","useEffect","useRef","useState","Portal","styled","SupportButton","styled","props","getCustomClassOverrides","SupportTitle","SupportIconContainer","FloatingWidgetContainer","FloatingWidgetButton","FloatingWidgetMenu","FlowWidgetMenuItem","AnimatePresence","motion","React","Question","style","className","React","QuestionCircle","style","className","FrigadeSupportWidget","flowId","style","onStepCompletion","visible","type","title","appearance","getFlow","getFlowSteps","markStepCompleted","getStepStatus","getNumberOfStepsCompleted","isLoading","targetingLogicShouldHideFlow","useFlows","primaryCTAClickSideEffects","useCTAClickSideEffects","wrapperRef","useRef","showMenu","setShowMenu","useState","mergeAppearanceWithDefault","useTheme","useEffect","handleClickOutside","event","flow","steps","handlePrimaryButtonClick","step","index","Menu","React","FloatingWidgetMenu","getClassName","motion","FlowWidgetMenuItem","SupportButton","SupportIconContainer","QuestionCircle","SupportTitle","AnimatePresence","Portal","FloatingWidgetContainer","FloatingWidgetButton","Question","React","useEffect","styled","EmbeddedTipContainer","styled","props","getCustomClassOverrides","TextContainer","CallToActionContainer","DismissButton","FrigadeEmbeddedTip","flowId","onDismiss","customVariables","onButtonClick","appearance","className","style","dismissible","getFlow","markFlowCompleted","markStepCompleted","isLoading","targetingLogicShouldHideFlow","updateCustomVariables","getFlowSteps","getFlowStatus","getCurrentStepIndex","useFlows","primaryCTAClickSideEffects","useCTAClickSideEffects","mergeAppearanceWithDefault","useTheme","useEffect","flow","COMPLETED_FLOW","currentStep","React","RenderInlineStyles","EmbeddedTipContainer","mergeClasses","getClassName","DismissButton","Close","TextContainer","TitleSubtitle","CallToActionContainer","Button","React","useEffect","styled","BannerContainer","styled","props","getCustomClassOverrides","IconContainer","TextContainer","CallToActionContainer","DismissButton","DismissButtonContainer","React","Info","style","className","FrigadeBanner","flowId","title","subtitle","onDismiss","customVariables","onButtonClick","appearance","type","icon","getFlow","markFlowCompleted","isLoading","targetingLogicShouldHideFlow","updateCustomVariables","getFlowMetadata","getFlowStatus","getFlowSteps","getCurrentStepIndex","useFlows","primaryCTAClickSideEffects","useCTAClickSideEffects","mergeAppearanceWithDefault","useTheme","useEffect","flow","COMPLETED_FLOW","steps","metaData","React","RenderInlineStyles","BannerContainer","getClassName","IconContainer","Info","DismissButtonContainer","DismissButton","Close","TextContainer","TitleSubtitle","CallToActionContainer","Button","React","useEffect","Portal","styled","NPSSurveyContainer","styled","props","getCustomClassOverrides","NPSNumberButton","NPSNumberButtonContainer","NPSLabelContainer","NPSLabel","TextContainer","CallToActionContainer","TextArea","DismissButton","FrigadeNPSSurvey","flowId","onDismiss","customVariables","onButtonClick","appearance","className","style","type","getFlow","markFlowCompleted","markStepCompleted","getNumberOfStepsCompleted","isLoading","targetingLogicShouldHideFlow","updateCustomVariables","getFlowSteps","getFlowStatus","getCurrentStepIndex","useFlows","primaryCTAClickSideEffects","useCTAClickSideEffects","mergeAppearanceWithDefault","useTheme","score","setScore","React","feedbackText","setFeedbackText","hasOpenModals","setKeepCompletedFlowOpenDuringSession","shouldKeepCompletedFlowOpenDuringSession","useFlowOpens","useEffect","flow","COMPLETED_FLOW","currentStep","getScoreChooser","TextContainer","TitleSubtitle","NPSNumberButtonContainer","getClassName","i","NPSNumberButton","NPSLabelContainer","NPSLabel","getScoreReason","TextArea","e","Button","getContent","RenderInlineStyles","NPSSurveyContainer","mergeClasses","DismissButton","Close","Portal","React","React","BaseText","as","children","variant","rest","React","StyledText","textVariantComponents","textVariants","asProp","component","props","Text","BaseButton","as","className","size","title","variant","rest","_a","StyledButton","Text","buttonVariants","buttonVariantComponents","component","props","Button","useTheme"]}